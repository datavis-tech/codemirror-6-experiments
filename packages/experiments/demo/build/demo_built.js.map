{"version":3,"file":"demo_built.js","sources":["../../codemirror.next/doc/src/char.ts","../../codemirror.next/doc/src/column.ts","../../codemirror.next/node_modules/tslib/tslib.es6.js","../../codemirror.next/doc/src/text.ts","../../codemirror.next/state/src/selection.ts","../../codemirror.next/state/src/plugin.ts","../../codemirror.next/state/src/change.ts","../../codemirror.next/state/src/transaction.ts","../../codemirror.next/state/src/state.ts","../../codemirror.next/view/src/browser.ts","../../codemirror.next/view/src/dom.ts","../../codemirror.next/view/src/contentview.ts","../../codemirror.next/rangeset/src/rangeset.ts","../../codemirror.next/view/src/decoration.ts","../../codemirror.next/view/src/inlineview.ts","../../codemirror.next/view/src/lineview.ts","../../codemirror.next/view/src/viewport.ts","../../codemirror.next/view/src/domobserver.ts","../../codemirror.next/view/src/heightmap.ts","../../codemirror.next/view/src/docview.ts","../../codemirror.next/view/src/cursor.ts","../../codemirror.next/view/src/input.ts","../../codemirror.next/view/src/domchange.ts","../../codemirror.next/view/src/editorview.ts","../../codemirror.next/node_modules/w3c-keyname/index.js","../../codemirror.next/keymap/src/keymap.ts","../../codemirror.next/history/src/core.ts","../../codemirror.next/history/src/history.ts","../../codemirror.next/gutter/src/index.ts","../../codemirror.next/commands/src/commands.ts","../../codemirror.next/legacy-modes/src/misc.ts","../../codemirror.next/legacy-modes/src/stringstream.ts","../../codemirror.next/legacy-modes/src/stringstreamcursor.ts","../../codemirror.next/legacy-modes/src/util.ts","../../codemirror.next/legacy-modes/src/index.ts","../../codemirror.next/matchbrackets/src/matchbrackets.ts","../../codemirror.next/special-chars/src/special-chars.ts","../../codemirror.next/multiple-selections/src/multiple-selections.ts","../../codemirror.next/legacy-modes/src/javascript.js","../historyKeymap.ts","../indentationKeymap.ts","../experimentPlugin.ts","../demo.ts"],"sourcesContent":["let extendingChars = /[\\u0300-\\u036f\\u0483-\\u0489\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065e\\u0670\\u06d6-\\u06dc\\u06de-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u0b82\\u0bbe\\u0bc0\\u0bcd\\u0bd7\\u0d3e\\u0d41-\\u0d44\\u0d4d\\u0d57\\u0d62\\u0d63\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u180b-\\u180d\\u18a9\\u200c\\u200d]/\ntry { extendingChars = new RegExp(\"\\\\p{Grapheme_Extend}\", \"u\") } catch (_) {}\n\nexport function isExtendingChar(ch: string): boolean {\n  let code = ch.charCodeAt(0)\n  return code >= 768 && (code >= 0xdc00 && code < 0xe000 || extendingChars.test(ch))\n}\n\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/\n\nlet wordChar: RegExp | null\ntry { wordChar = new RegExp(\"[\\\\p{Alphabetic}_]\", \"u\") } catch (_) {}\n\n// FIXME this doesn't work for astral chars yet (need different calling convention)\n\nfunction isWordCharBasic(ch: string): boolean {\n  if (wordChar) return wordChar.test(ch)\n  return /\\w/.test(ch) || ch > \"\\x80\" &&\n    (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch))\n}\n\nexport function isWordChar(ch: string, wordChars?: RegExp): boolean {\n  if (!wordChars) return isWordCharBasic(ch)\n  if (wordChars.source.indexOf(\"\\\\w\") > -1 && isWordCharBasic(ch)) return true\n  return wordChars.test(ch)\n}\n\nexport const enum CharType { WORD, SPACE, OTHER }\n\nexport function charType(ch: string, wordChars?: RegExp): CharType {\n  return /\\s/.test(ch) ? CharType.SPACE : isWordChar(ch, wordChars) ? CharType.WORD : CharType.OTHER\n}\n","import {isExtendingChar} from \"./char\"\n\nexport function countColumn(string: string, n: number, tabSize: number): number {\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i)\n    if (code == 9) n += tabSize - (n % tabSize)\n    else if (code < 768 || !isExtendingChar(string.charAt(i))) n++\n  }\n  return n\n}\n\nexport function findColumn(string: string, n: number, col: number, tabSize: number): {offset: number, leftOver: number} {\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i)\n    if (code >= 768 && isExtendingChar(string.charAt(i))) continue\n    if (n >= col) return {offset: i, leftOver: 0}\n    n += code == 9 ? tabSize - (n % tabSize) : 1\n  }\n  return {offset: string.length, leftOver: col - n}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// The base size of a leaf node\nconst BASE_LEAF = 512\n// The max size of a leaf node\nconst MAX_LEAF = BASE_LEAF << 1\n// The desired amount of branches per node, as an exponent of 2 (so 3\n// means 8 branches)\nconst TARGET_BRANCH_SHIFT = 3\n\nexport interface TextIterator extends Iterator<string> {\n  next(skip?: number): this\n  value: string\n  done: boolean\n  lineBreak: boolean\n}\n\n// Note line numbers are 1-based\n\nexport abstract class Text {\n  abstract readonly length: number\n  abstract readonly lines: number\n  abstract readonly children: ReadonlyArray<Text> | null\n\n  lineAt(pos: number): Line {\n    if (pos < 0 || pos > this.length) throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`)\n    for (let i = 0; i < lineCache.length; i += 2) {\n      if (lineCache[i] != this) continue\n      let line = lineCache[i + 1]\n      if (line.start <= pos && line.end >= pos) return line\n    }\n    return cacheLine(this, this.lineInner(pos, false, 1, 0).finish(this))\n  }\n  line(n: number): Line {\n    if (n < 1 || n > this.lines) throw new RangeError(\"Invalid line number ${n} in ${this.lines}-line document\")\n    for (let i = 0; i < lineCache.length; i += 2) {\n      if (lineCache[i] != this) continue\n      let line = lineCache[i + 1]\n      if (line.number == n) return line\n    }\n    return cacheLine(this, this.lineInner(n, true, 1, 0).finish(this))\n  }\n  // @internal\n  abstract lineInner(target: number, isLine: boolean, line: number, offset: number): Line\n\n  replace(from: number, to: number, text: ReadonlyArray<string>): Text {\n    if (text.length == 0) throw new RangeError(\"An inserted range must have at least one line\")\n    return this.replaceInner(from, to, text, textLength(text))\n  }\n  // @internal\n  abstract replaceInner(from: number, to: number, text: ReadonlyArray<string>, length: number): Text\n\n  sliceLines(from: number, to: number = this.length): ReadonlyArray<string> {\n    return this.sliceTo(from, to, [\"\"])\n  }\n  // @internal\n  abstract sliceTo(from: number, to: number, target: string[]): string[]\n  slice(from: number, to?: number, lineSeparator?: string): string {\n    return joinLines(this.sliceLines(from, to), lineSeparator)\n  }\n\n  eq(other: Text): boolean { return this == other || eqContent(this, other) }\n\n  iter(dir: 1 | -1 = 1): TextIterator { return new RawTextCursor(this, dir) }\n  iterRange(from: number, to: number = this.length): TextIterator { return new PartialTextCursor(this, from, to) }\n  iterLines(from: number = 0) { return new LineCursor(this, from) }\n\n  // @internal\n  abstract decomposeStart(to: number, target: Text[]): void\n  // @internal\n  abstract decomposeEnd(from: number, target: Text[]): void\n  // @internal\n  abstract lastLineLength(): number\n  // @internal\n  abstract firstLineLength(): number\n\n  toString() { return this.slice(0, this.length) }\n\n  // @internal\n  protected constructor() {}\n\n  static of(text: string | ReadonlyArray<string>, lineSeparator?: string | RegExp): Text {\n    if (typeof text == \"string\") text = splitLines(text, lineSeparator)\n    else if (text.length == 0) throw new RangeError(\"A document must have at least one line\")\n    let length = textLength(text)\n    return length < MAX_LEAF ? new TextLeaf(text, length) : TextNode.from(TextLeaf.split(text, []), length)\n  }\n}\n\nlet lineCache: any[] = [], lineCachePos = -2, lineCacheSize = 12\n\nfunction cacheLine(text: Text, line: Line): Line {\n  lineCachePos = (lineCachePos + 2) % lineCacheSize\n  lineCache[lineCachePos] = text\n  lineCache[lineCachePos + 1] = line\n  return line\n}\n\nexport function splitLines(text: string, lineSeparator: string | RegExp = DEFAULT_SPLIT): string[] {\n  return text.split(lineSeparator)\n}\n\nexport function joinLines(text: ReadonlyArray<string>, lineSeparator: string = \"\\n\"): string {\n  return text.join(lineSeparator)\n}\n\nconst DEFAULT_SPLIT = /\\r\\n?|\\n/\n\nclass TextLeaf extends Text {\n  constructor(readonly text: ReadonlyArray<string>, readonly length: number = textLength(text)) {\n    super()\n  }\n\n  get lines(): number { return this.text.length }\n\n  get children() { return null }\n\n  replaceInner(from: number, to: number, text: ReadonlyArray<string>, length: number): Text {\n    return Text.of(appendText(this.text, appendText(text, sliceText(this.text, 0, from)), to))\n  }\n\n  sliceTo(from: number, to: number = this.length, target: string[]): string[] {\n    return appendText(this.text, target, from, to)\n  }\n\n  lineInner(target: number, isLine: boolean, line: number, offset: number): Line {\n    for (let i = 0;; i++) {\n      let string = this.text[i], end = offset + string.length\n      if ((isLine ? line : end) >= target)\n        return new Line(offset, end, line, string)\n      offset = end + 1\n      line++\n    }\n  }\n\n  decomposeStart(to: number, target: Text[]) {\n    target.push(new TextLeaf(sliceText(this.text, 0, to), to))\n  }\n\n  decomposeEnd(from: number, target: Text[]) {\n    target.push(new TextLeaf(sliceText(this.text, from), this.length - from))\n  }\n\n  lastLineLength(): number { return this.text[this.text.length - 1].length }\n\n  firstLineLength(): number { return this.text[0].length }\n\n  static split(text: ReadonlyArray<string>, target: Text[]): Text[] {\n    let part = [], length = -1\n    for (let line of text) {\n      for (;;) {\n        let newLength = length + line.length + 1\n        if (newLength < BASE_LEAF) {\n          length = newLength\n          part.push(line)\n          break\n        }\n        let cut = BASE_LEAF - length - 1, after = line.charCodeAt(cut)\n        if (after >= 0xdc00 && after < 0xe000) cut++\n        part.push(line.slice(0, cut))\n        target.push(new TextLeaf(part, BASE_LEAF))\n        line = line.slice(cut)\n        length = -1\n        part = []\n      }\n    }\n    if (length != -1) target.push(new TextLeaf(part, length))\n    return target\n  }\n}\n\nclass TextNode extends Text {\n  readonly lines: number;\n\n  constructor(readonly children: ReadonlyArray<Text>, readonly length: number) {\n    super()\n    this.lines = 1\n    for (let child of children) this.lines += child.lines - 1\n  }\n\n  replaceInner(from: number, to: number, text: ReadonlyArray<string>, length: number): Text {\n    let lengthDiff = length - (to - from), newLength = this.length + lengthDiff\n    if (newLength <= BASE_LEAF)\n      return new TextLeaf(appendText(this.sliceLines(to), appendText(text, this.sliceTo(0, from, [\"\"]))), newLength)\n\n    let children\n    for (let i = 0, pos = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = pos + child.length\n      if (from >= pos && to <= end &&\n          (lengthDiff > 0\n           ? child.length + lengthDiff < Math.max(newLength >> (TARGET_BRANCH_SHIFT - 1), MAX_LEAF)\n           : child.length + lengthDiff > newLength >> (TARGET_BRANCH_SHIFT + 1))) {\n        // Fast path: if the change only affects one child and the\n        // child's size remains in the acceptable range, only update\n        // that child\n        children = this.children.slice()\n        children[i] = child.replace(from - pos, to - pos, text)\n        return new TextNode(children, newLength)\n      } else if (end >= from) {\n        // Otherwise, we must build up a new array of children\n        if (children == null) children = this.children.slice(0, i)\n        if (pos < from) {\n          if (end == from) children.push(child)\n          else child.decomposeStart(from - pos, children)\n        }\n        if (pos <= from && end >= from) TextLeaf.split(text, children)\n        if (pos >= to) children.push(child)\n        else if (end > to) child.decomposeEnd(to - pos, children)\n      }\n      pos = end\n    }\n    return children ? TextNode.from(children, newLength) : this\n  }\n\n  sliceTo(from: number, to: number, target: string[]): string[] {\n    let pos = 0\n    for (let child of this.children) {\n      let end = pos + child.length\n      if (to > pos && from < end)\n        child.sliceTo(Math.max(0, from - pos), Math.min(child.length, to - pos), target)\n      pos = end\n    }\n    return target\n  }\n\n  lineInner(target: number, isLine: boolean, line: number, offset: number): Line {\n    for (let i = 0;; i++) {\n      let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1\n      if ((isLine ? endLine : end) >= target) {\n        let inner = child.lineInner(target, isLine, line, offset), add\n        if (inner.start == offset && (add = this.lineLengthTo(i))) {\n          ;(inner as any).start -= add\n          ;(inner as any).content = null\n        }\n        if (inner.end == end && (add = this.lineLengthFrom(i + 1))) {\n          ;(inner as any).end += add\n          ;(inner as any).content = null\n        }\n        return inner\n      }\n      offset = end\n      line = endLine\n    }\n  }\n\n  decomposeStart(to: number, target: Text[]) {\n    for (let i = 0, pos = 0;; i++) {\n      let child = this.children[i], end = pos + child.length\n      if (end <= to) {\n        target.push(child)\n      } else {\n        if (pos < to) child.decomposeStart(to - pos, target)\n        break\n      }\n      pos = end\n    }\n  }\n\n  decomposeEnd(from: number, target: Text[]) {\n    let pos = 0\n    for (let child of this.children) {\n      let end = pos + child.length\n      if (pos >= from) target.push(child)\n      else if (end > from && pos < from) child.decomposeEnd(from - pos, target)\n      pos = end\n    }\n  }\n\n  private lineLengthTo(to: number): number {\n    let length = 0\n    for (let i = to - 1; i >= 0; i--) {\n      let child = this.children[i]\n      if (child.lines > 1) return length + child.lastLineLength()\n      length += child.length\n    }\n    return length\n  }\n\n  lastLineLength(): number { return this.lineLengthTo(this.children.length) }\n\n  private lineLengthFrom(from: number): number {\n    let length = 0\n    for (let i = from; i < this.children.length; i++) {\n      let child = this.children[i]\n      if (child.lines > 1) return length + child.firstLineLength()\n      length += child.length\n    }\n    return length\n  }\n\n  firstLineLength(): number { return this.lineLengthFrom(0) }\n\n  static from(children: Text[], length: number): Text {\n    if (length < MAX_LEAF) {\n      let text = [\"\"]\n      for (let child of children) child.sliceTo(0, child.length, text)\n      return new TextLeaf(text, length)\n    }\n\n    let chunkLength = Math.max(BASE_LEAF, length >> TARGET_BRANCH_SHIFT), maxLength = chunkLength << 1, minLength = chunkLength >> 1\n    let chunked: Text[] = [], currentLength = 0, currentChunk: Text[] = []\n    function add(child: Text) {\n      let childLength = child.length, last\n      if (childLength > maxLength && child instanceof TextNode) {\n        for (let node of child.children) add(node)\n      } else if (childLength > minLength && (currentLength > minLength || currentLength == 0)) {\n        flush()\n        chunked.push(child)\n      } else if (child instanceof TextLeaf && currentLength > 0 &&\n                 (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                 child.length + last.length <= BASE_LEAF) {\n        currentLength += childLength\n        currentChunk[currentChunk.length - 1] = new TextLeaf(appendText(child.text, last.text.slice()), child.length + last.length)\n      } else {\n        if (currentLength + childLength > chunkLength) flush()\n        currentLength += childLength\n        currentChunk.push(child)\n      }\n    }\n    function flush() {\n      if (currentLength == 0) return\n      chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLength))\n      currentLength = 0\n      currentChunk.length = 0\n    }\n\n    for (let child of children) add(child)\n    flush()\n    return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length)\n  }\n}\n\nfunction textLength(text: ReadonlyArray<string>) {\n  let length = -1\n  for (let line of text) length += line.length + 1\n  return length\n}\n\nfunction appendText(text: ReadonlyArray<string>, target: string[], from = 0, to = 1e9): string[] {\n  for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n    let line = text[i], end = pos + line.length\n    if (end >= from) {\n      if (end > to) line = line.slice(0, to - pos)\n      if (pos < from) line = line.slice(from - pos)\n      if (first) { target[target.length - 1] += line; first = false }\n      else target.push(line)\n    }\n    pos = end + 1\n  }\n  return target\n}\n\nfunction sliceText(text: ReadonlyArray<string>, from?: number, to?: number): string[] {\n  return appendText(text, [\"\"], from, to)\n}\n\nfunction eqContent(a: Text, b: Text): boolean {\n  if (a.length != b.length || a.lines != b.lines) return false\n  let iterA = new RawTextCursor(a), iterB = new RawTextCursor(b)\n  for (let offA = 0, offB = 0;;) {\n    if (iterA.lineBreak != iterB.lineBreak || iterA.done != iterB.done) {\n      return false\n    } else if (iterA.done) {\n      return true\n    } else if (iterA.lineBreak) {\n      iterA.next(); iterB.next()\n      offA = offB = 0\n    } else {\n      let strA = iterA.value.slice(offA), strB = iterB.value.slice(offB)\n      if (strA.length == strB.length) {\n        if (strA != strB) return false\n        iterA.next(); iterB.next()\n        offA = offB = 0\n      } else if (strA.length > strB.length) {\n        if (strA.slice(0, strB.length) != strB) return false\n        offA += strB.length\n        iterB.next(); offB = 0\n      } else {\n        if (strB.slice(0, strA.length) != strA) return false\n        offB += strA.length\n        iterA.next(); offA = 0\n      }\n    }\n  }\n}\n\nclass RawTextCursor implements TextIterator {\n  public done: boolean = false\n  public lineBreak: boolean = false\n  public value: string = \"\"\n  private nodes: Text[]\n  private offsets: number[]\n\n  // @internal\n  constructor(text: Text, readonly dir: 1 | -1 = 1) {\n    this.nodes = [text]\n    this.offsets = [dir > 0 ? 0 : text instanceof TextLeaf ? text.text.length : text.children!.length]\n  }\n\n  next(skip: number = 0): this {\n    for (;;) {\n      let last = this.nodes.length - 1\n      if (last < 0) {\n        this.done = true\n        this.value = \"\"\n        this.lineBreak = false\n        return this\n      }\n      let top = this.nodes[last]\n      let offset = this.offsets[last]\n      if (top instanceof TextLeaf) {\n        // Internal ofset with lineBreak == false means we have to\n        // count the line break at this position\n        if (offset != (this.dir > 0 ? 0 : top.text.length) && !this.lineBreak) {\n          this.lineBreak = true\n          if (skip == 0) {\n            this.value = \"\\n\"\n            return this\n          }\n          skip--\n          continue\n        }\n        // Otherwise, move to the next string\n        let next = top.text[offset - (this.dir < 0 ? 1 : 0)]\n        this.offsets[last] = (offset += this.dir)\n        if (offset == (this.dir > 0 ? top.text.length : 0)) {\n          this.nodes.pop()\n          this.offsets.pop()\n        }\n        this.lineBreak = false\n        if (next.length > skip) {\n          this.value = skip == 0 ? next : this.dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip)\n          return this\n        }\n        skip -= next.length\n      } else if (offset == (this.dir > 0 ? top.children!.length : 0)) {\n        this.nodes.pop()\n        this.offsets.pop()\n      } else {\n        let next = top.children![this.dir > 0 ? offset : offset - 1], len = next.length\n        this.offsets[last] = offset + this.dir\n        if (skip > len) {\n          skip -= len\n        } else {\n          this.nodes.push(next)\n          this.offsets.push(this.dir > 0 ? 0 : next instanceof TextLeaf ? next.text.length : next.children!.length)\n        }\n      }\n    }\n  }\n}\n\nclass PartialTextCursor implements TextIterator {\n  cursor: RawTextCursor\n  limit: number\n  skip: number\n  value: string = \"\"\n\n  constructor(text: Text, start: number, end: number) {\n    this.cursor = new RawTextCursor(text, start > end ? -1 : 1)\n    if (start > end) {\n      this.skip = text.length - start\n      this.limit = start - end\n    } else {\n      this.skip = start\n      this.limit = end - start\n    }\n  }\n\n  next(): this {\n    if (this.limit <= 0) {\n      this.limit = -1\n    } else {\n      let {value, lineBreak} = this.cursor.next(this.skip)\n      this.skip = 0\n      this.value = value\n      let len = lineBreak ? 1 : value.length\n      if (len > this.limit)\n        this.value = this.cursor.dir > 0 ? value.slice(0, this.limit) : value.slice(len - this.limit)\n      this.limit -= this.value.length\n    }\n    return this\n  }\n\n  get lineBreak() { return this.cursor.lineBreak }\n\n  get done() { return this.limit < 0 }\n}\n\nclass LineCursor implements TextIterator {\n  cursor: TextIterator\n  skip: number\n  value = \"\"\n  done = false\n\n  constructor(text: Text, from = 0) {\n    this.cursor = text.iter()\n    this.skip = from\n  }\n\n  next(): this {\n    if (this.cursor.done) {\n      this.done = true\n      this.value = \"\"\n      return this\n    }\n    for (this.value = \"\";;) {\n      let {value, lineBreak, done} = this.cursor.next(this.skip)\n      this.skip = 0\n      if (done || lineBreak) return this\n      this.value += value\n    }\n  }\n\n  get lineBreak() { return false }\n}\n\nexport class Line {\n  constructor(readonly start: number,\n              readonly end: number,\n              readonly number: number,\n              // @internal\n              public content: string | null | LineContent) {}\n\n  get length() { return this.end - this.start }\n\n  slice(from: number = 0, to: number = this.length) {\n    if (typeof this.content == \"string\")\n      return to == from + 1 ? this.content.charAt(from) : this.content.slice(from, to)\n    if (from == to) return \"\"\n    let result = this.content!.slice(from, to)\n    if (from == 0 && to == this.length) this.content = result\n    return result\n  }\n\n  // @internal\n  finish(text: Text): this {\n    if (this.content == null) this.content = new LineContent(text, this.start)\n    return this\n  }\n}\n\nclass LineContent {\n  cursor: null | TextIterator = null\n  strings: string[] | null = null\n\n  constructor(private doc: Text, private start: number) {}\n\n  // FIXME quadratic complexity (somewhat) when iterating long lines in small pieces\n  slice(from: number, to: number) {\n    if (!this.cursor) {\n      this.cursor = this.doc.iter()\n      this.strings = [this.cursor.next(this.start).value]\n    }\n    for (let result = \"\", pos = 0, i = 0;; i++) {\n      if (i == this.strings!.length) this.strings!.push(this.cursor!.next().value)\n      let string = this.strings![i], end = pos + string.length\n      if (end <= from) continue\n      result += string.slice(Math.max(0, from - pos), Math.min(string.length, to - pos))\n      if (end >= to) return result\n      pos += string.length\n    }\n  }\n}\n","import {Mapping} from \"./change\"\nimport {EditorState} from \"./state\"\nimport {charType} from \"../../doc/src\"\n\nexport class SelectionRange {\n  constructor(public readonly anchor: number, public readonly head: number = anchor) {}\n\n  get from(): number { return Math.min(this.anchor, this.head) }\n  get to(): number { return Math.max(this.anchor, this.head) }\n  get empty(): boolean { return this.anchor == this.head }\n\n  map(mapping: Mapping): SelectionRange {\n    let anchor = mapping.mapPos(this.anchor), head = mapping.mapPos(this.head)\n    if (anchor == this.anchor && head == this.head) return this\n    else return new SelectionRange(anchor, head)\n  }\n\n  extend(from: number, to: number = from) {\n    if (from <= this.anchor && to >= this.anchor) return new SelectionRange(from, to)\n    let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to\n    return new SelectionRange(this.anchor, head)\n  }\n\n  eq(other: SelectionRange): boolean {\n    return this.anchor == other.anchor && this.head == other.head\n  }\n\n  static groupAt(state: EditorState, pos: number, bias: 1 | -1 = 1) {\n    // FIXME at some point, take language-specific identifier characters into account\n    let line = state.doc.lineAt(pos), linePos = pos - line.start\n    if (line.length == 0) return new SelectionRange(pos)\n    if (linePos == 0) bias = 1\n    else if (linePos == line.length) bias = -1\n    let read = linePos + (bias < 0 ? -1 : 0), type = charType(line.slice(read, read + 1))\n    let from = pos, to = pos\n    for (let lineFrom = linePos; lineFrom > 0 && charType(line.slice(lineFrom - 1, lineFrom)) == type; lineFrom--) from--\n    for (let lineTo = linePos; lineTo < line.length && charType(line.slice(lineTo, lineTo + 1)) == type; lineTo++) to++\n    return new SelectionRange(to, from)\n  }\n}\n\nexport class EditorSelection {\n  /** @internal */\n  constructor(readonly ranges: ReadonlyArray<SelectionRange>,\n              readonly primaryIndex: number = 0) {}\n\n  map(mapping: Mapping): EditorSelection {\n    return EditorSelection.create(this.ranges.map(r => r.map(mapping)), this.primaryIndex)\n  }\n\n  eq(other: EditorSelection): boolean {\n    if (this.ranges.length != other.ranges.length ||\n        this.primaryIndex != other.primaryIndex) return false\n    for (let i = 0; i < this.ranges.length; i++)\n      if (!this.ranges[i].eq(other.ranges[i])) return false\n    return true\n  }\n\n  get primary(): SelectionRange { return this.ranges[this.primaryIndex] }\n\n  asSingle() {\n    return this.ranges.length == 1 ? this : new EditorSelection([this.primary])\n  }\n\n  addRange(range: SelectionRange, primary: boolean = true) {\n    return EditorSelection.create([range].concat(this.ranges), primary ? 0 : this.primaryIndex + 1)\n  }\n\n  replaceRange(range: SelectionRange, which: number = this.primaryIndex) {\n    let ranges = this.ranges.slice()\n    ranges[which] = range\n    return EditorSelection.create(ranges, this.primaryIndex)\n  }\n\n  static single(anchor: number, head: number = anchor) {\n    return new EditorSelection([new SelectionRange(anchor, head)], 0)\n  }\n\n  static create(ranges: ReadonlyArray<SelectionRange>, primaryIndex: number = 0) {\n    for (let pos = 0, i = 0; i < ranges.length; i++) {\n      let range = ranges[i]\n      if (range.empty ? range.from <= pos : range.from < pos) return normalized(ranges.slice(), primaryIndex)\n      pos = range.to\n    }\n    return new EditorSelection(ranges, primaryIndex)\n  }\n\n  static default: EditorSelection = EditorSelection.single(0)\n}\n\nfunction normalized(ranges: SelectionRange[], primaryIndex: number = 0): EditorSelection {\n  let primary = ranges[primaryIndex]\n  ranges.sort((a, b) => a.from - b.from)\n  primaryIndex = ranges.indexOf(primary)\n  for (let i = 1; i < ranges.length; i++) {\n    let range = ranges[i], prev = ranges[i - 1]\n    if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n      let from = prev.from, to = Math.max(range.to, prev.to)\n      if (i <= primaryIndex) primaryIndex--\n      ranges.splice(--i, 2, range.anchor > range.head ? new SelectionRange(to, from) : new SelectionRange(from, to))\n    }\n  }\n  return new EditorSelection(ranges, primaryIndex)\n}\n","import {EditorState} from \"./state\"\nimport {Transaction} from \"./transaction\"\n\nconst fieldNames = Object.create(null)\n\nexport class StateField<T> {\n  /** @internal */\n  readonly key: string\n  readonly init: (state: EditorState) => T\n  readonly apply: (tr: Transaction, value: T, newState: EditorState) => T\n\n  constructor({init, apply, debugName = \"field\"}: {\n    init: (state: EditorState) => T,\n    apply: (tr: Transaction, value: T, newState: EditorState) => T,\n    debugName?: string\n  }) {\n    this.init = init\n    this.apply = apply\n    this.key = unique(\"$\" + debugName, fieldNames)\n  }\n}\n\nexport interface PluginSpec {\n  state?: StateField<any>\n  config?: any\n  view?: any\n  multipleSelections?: boolean\n}\n\nexport class Plugin {\n  readonly config: any\n  readonly stateField: StateField<any> | null\n  readonly view: (editorView: any) => any\n\n  constructor(readonly spec: PluginSpec) {\n    this.config = spec.config\n    this.stateField = spec.state || null\n    this.view = spec.view\n  }\n}\n\nexport function unique(prefix: string, names: {[key: string]: string}): string {\n  for (let i = 0;; i++) {\n    let name = prefix + (i ? \"_\" + i : \"\")\n    if (!(name in names)) return names[name] = name\n  }\n}\n","import {Text} from \"../../doc/src\"\n\nconst empty: ReadonlyArray<any> = []\n\nexport interface Mapping {\n  mapPos(pos: number, bias?: number, trackDel?: boolean): number\n}\n\nexport class ChangeDesc implements Mapping {\n  constructor(public readonly from: number, public readonly to: number, public readonly length: number) {}\n\n  get invertedDesc() { return new ChangeDesc(this.from, this.from + this.length, this.to - this.from) }\n\n  mapPos(pos: number, bias: number = -1, trackDel: boolean = false): number {\n    let {from, to, length} = this\n    if (pos < from) return pos\n    if (pos > to) return pos + (length - (to - from))\n    if (pos == to || pos == from) return (from == to ? bias <= 0 : pos == from) ? from : from + length\n    pos = from + (bias <= 0 ? 0 : length)\n    return trackDel ? -pos - 1 : pos\n  }\n}\n\nexport class Change extends ChangeDesc {\n  constructor(public readonly from: number, public readonly to: number, public readonly text: ReadonlyArray<string>) {\n    super(from, to, textLength(text))\n  }\n\n  invert(doc: Text): Change {\n    return new Change(this.from, this.from + this.length, doc.sliceLines(this.from, this.to))\n  }\n\n  apply(doc: Text): Text {\n    return doc.replace(this.from, this.to, this.text)\n  }\n\n  map(mapping: Mapping): Change | null {\n    let from = mapping.mapPos(this.from, 1), to = mapping.mapPos(this.to, -1)\n    return from > to ? null : new Change(from, to, this.text)\n  }\n\n  get desc() { return new ChangeDesc(this.from, this.to, this.length) }\n}\n\nfunction textLength(text: ReadonlyArray<string>) {\n  let length = -1\n  for (let line of text) length += line.length + 1\n  return length\n}\n\nexport class ChangeSet<C extends ChangeDesc = Change> implements Mapping {\n  constructor(readonly changes: ReadonlyArray<C>,\n              readonly mirror: ReadonlyArray<number> = empty) {}\n\n  get length(): number {\n    return this.changes.length\n  }\n\n  getMirror(n: number): number | null {\n    for (let i = 0; i < this.mirror.length; i++)\n      if (this.mirror[i] == n) return this.mirror[i + (i % 2 ? -1 : 1)]\n    return null\n  }\n\n  append(change: C, mirror?: number): ChangeSet<C> {\n    return new ChangeSet(this.changes.concat(change),\n                         mirror != null ? this.mirror.concat(this.length, mirror) : this.mirror)\n  }\n\n  appendSet(changes: ChangeSet<C>): ChangeSet<C> {\n    return changes.length == 0 ? this :\n      this.length == 0 ? changes :\n      new ChangeSet(this.changes.concat(changes.changes),\n                    this.mirror.concat(changes.mirror.map(i => i + this.length)))\n  }\n\n  static empty: ChangeSet<any> = new ChangeSet(empty)\n\n  mapPos(pos: number, bias: number = -1, trackDel: boolean = false): number {\n    return this.mapInner(pos, bias, trackDel, 0, this.length)\n  }\n\n  /** @internal */\n  mapInner(pos: number, bias: number, trackDel: boolean, fromI: number, toI: number): number {\n    let dir = toI < fromI ? -1 : 1\n    let recoverables: {[key: number]: number} | null = null\n    let hasMirrors = this.mirror.length > 0, rec, mirror, deleted = false\n    for (let i = fromI - (dir < 0 ? 1 : 0), endI = toI - (dir < 0 ? 1 : 0); i != endI; i += dir) {\n      let {from, to, length} = this.changes[i]\n      if (dir < 0) {\n        let len = to - from\n        to = from + length\n        length = len\n      }\n\n      if (pos < from) continue\n      if (pos > to) {\n        pos += length - (to - from)\n        continue\n      }\n      // Change touches this position\n      if (recoverables && (rec = recoverables[i]) != null) { // There's a recovery for this change, and it applies\n        pos = from + rec\n        continue\n      }\n      if (hasMirrors && (mirror = this.getMirror(i)) != null &&\n          (dir > 0 ? mirror > i && mirror < toI : mirror < i && mirror >= toI)) { // A mirror exists\n        if (pos > from && pos < to) { // If this change deletes the position, skip forward to the mirror\n          i = mirror\n          pos = this.changes[i].from + (pos - from)\n          continue\n        }\n        // Else store a recoverable\n        ;(recoverables || (recoverables = {}))[mirror] = pos - from\n      }\n      if (pos > from && pos < to) {\n        deleted = true\n        pos = bias <= 0 ? from : from + length\n      } else {\n        pos = (from == to ? bias <= 0 : pos == from) ? from : from + length\n      }\n    }\n    return trackDel && deleted ? -pos - 1 : pos\n  }\n\n  partialMapping(from: number, to: number = this.length): Mapping {\n    if (from == 0 && to == this.length) return this\n    return new PartialMapping(this, from, to)\n  }\n\n  changedRanges(): ChangedRange[] {\n    let set: ChangedRange[] = []\n    for (let i = 0; i < this.length; i++) {\n      let change = this.changes[i]\n      let fromA = change.from, toA = change.to, fromB = change.from, toB = change.from + change.length\n      if (i < this.length - 1) {\n        let mapping = this.partialMapping(i + 1)\n        fromB = mapping.mapPos(fromB, 1); toB = mapping.mapPos(toB, -1)\n      }\n      if (i > 0) {\n        let mapping = this.partialMapping(i, 0)\n        fromA = mapping.mapPos(fromA, 1); toA = mapping.mapPos(toA, -1)\n      }\n      new ChangedRange(fromA, toA, fromB, toB).addToSet(set)\n    }\n    return set\n  }\n\n  get desc(): ChangeSet<ChangeDesc> {\n    if (this.changes.length == 0 || this.changes[0] instanceof ChangeDesc) return this\n    return new ChangeSet(this.changes.map(ch => (ch as any).desc), this.mirror)\n  }\n}\n\nclass PartialMapping implements Mapping {\n  constructor(readonly changes: ChangeSet<any>, readonly from: number, readonly to: number) {}\n  mapPos(pos: number, bias: number = -1, trackDel: boolean = false): number {\n    return this.changes.mapInner(pos, bias, trackDel, this.from, this.to)\n  }\n}\n\nexport class ChangedRange {\n  constructor(readonly fromA: number, readonly toA: number,\n              readonly fromB: number, readonly toB: number) {}\n\n  join(other: ChangedRange): ChangedRange {\n    return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA),\n                            Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB))\n  }\n\n  addToSet(set: ChangedRange[]) {\n    let i = set.length, me: ChangedRange = this\n    for (; i > 0; i--) {\n      let range = set[i - 1]\n      if (range.fromA > me.toA) continue\n      if (range.toA < me.fromA) break\n      me = me.join(range)\n      set.splice(i - 1, 1)\n    }\n    set.splice(i, 0, me)\n  }\n}\n","import {Text} from \"../../doc/src\"\nimport {EditorState} from \"./state\"\nimport {EditorSelection, SelectionRange} from \"./selection\"\nimport {unique} from \"./plugin\"\nimport {Change, ChangeSet} from \"./change\"\n\nconst empty: ReadonlyArray<any> = []\n\nclass Meta {\n  constructor(from: Meta | null = null) {\n    if (from) for (let prop in from) this[prop] = from[prop]\n  }\n  [key: string]: any\n}\nMeta.prototype[\"__proto__\"] = null\n\nconst metaSlotNames = Object.create(null)\n\n// _T is a phantom type parameter\nexport class MetaSlot<_T> {\n  /** @internal */\n  name: string\n\n  constructor(debugName: string = \"meta\") {\n    this.name = unique(debugName, metaSlotNames)\n  }\n\n  static time: MetaSlot<number> = new MetaSlot(\"time\")\n  static changeTabSize: MetaSlot<number> = new MetaSlot(\"changeTabSize\")\n  static changeLineSeparator: MetaSlot<string | null> = new MetaSlot(\"changeLineSeparator\")\n  static preserveGoalColumn: MetaSlot<boolean> = new MetaSlot(\"preserveGoalColumn\")\n  static userEvent: MetaSlot<string> = new MetaSlot(\"userEvent\")\n  static addToHistory: MetaSlot<boolean> = new MetaSlot(\"addToHistory\")\n}\n\nconst FLAG_SELECTION_SET = 1, FLAG_SCROLL_INTO_VIEW = 2\n\nexport class Transaction {\n  private constructor(readonly startState: EditorState,\n                      readonly changes: ChangeSet,\n                      readonly docs: ReadonlyArray<Text>,\n                      readonly selection: EditorSelection,\n                      private readonly meta: Meta,\n                      private readonly flags: number) {}\n\n  static start(state: EditorState, time: number = Date.now()) {\n    let meta = new Meta\n    meta[MetaSlot.time.name] = time\n    return new Transaction(state, ChangeSet.empty, empty, state.selection, meta, 0)\n  }\n\n  get doc(): Text {\n    let last = this.docs.length - 1\n    return last < 0 ? this.startState.doc : this.docs[last]\n  }\n\n  setMeta<T>(slot: MetaSlot<T>, value: T): Transaction {\n    let meta = new Meta(this.meta)\n    meta[slot.name] = value\n    return new Transaction(this.startState, this.changes, this.docs, this.selection, meta, this.flags)\n  }\n\n  getMeta<T>(slot: MetaSlot<T>): T | undefined {\n    return this.meta[slot.name] as T\n  }\n\n  change(change: Change, mirror?: number): Transaction {\n    if (change.from == change.to && change.length == 0) return this\n    if (change.from < 0 || change.to < change.from || change.to > this.doc.length)\n      throw new RangeError(`Invalid change ${change.from} to ${change.to}`)\n    let changes = this.changes.append(change, mirror)\n    return new Transaction(this.startState, changes, this.docs.concat(change.apply(this.doc)),\n                           this.selection.map(changes.partialMapping(changes.length - 1)),\n                           this.meta, this.flags)\n  }\n\n  replace(from: number, to: number, text: string | ReadonlyArray<string>): Transaction {\n    return this.change(new Change(from, to, typeof text == \"string\" ? this.startState.splitLines(text) : text))\n  }\n\n  replaceSelection(text: string | ReadonlyArray<string>): Transaction {\n    let content = typeof text == \"string\" ? this.startState.splitLines(text) : text\n    return this.reduceRanges((state, r) => {\n      let change = new Change(r.from, r.to, content)\n      return {transaction: state.change(change), range: new SelectionRange(r.from + change.length)}\n    })\n  }\n\n  reduceRanges(f: (transaction: Transaction, range: SelectionRange) => (Transaction | {transaction: Transaction, range: SelectionRange})): Transaction {\n    let tr: Transaction = this\n    let sel = tr.selection, start = tr.changes.length, newRanges: SelectionRange[] = []\n    for (let range of sel.ranges) {\n      range = range.map(tr.changes.partialMapping(start))\n      let result = f(tr, range)\n      if (result instanceof Transaction) {\n        tr = result\n        newRanges.push(range.map(tr.changes.partialMapping(tr.changes.length - 1)))\n      } else {\n        tr = result.transaction\n        newRanges.push(result.range)\n      }\n    }\n    return tr.setSelection(EditorSelection.create(newRanges, sel.primaryIndex))\n  }\n\n  mapRanges(f: (range: SelectionRange) => SelectionRange): Transaction {\n    return this.reduceRanges((tr, range) => ({transaction: tr, range: f(range)}))\n  }\n\n  setSelection(selection: EditorSelection): Transaction {\n    return new Transaction(this.startState, this.changes, this.docs,\n                           this.startState.multipleSelections ? selection : selection.asSingle(),\n                           this.meta, this.flags | FLAG_SELECTION_SET)\n  }\n\n  get selectionSet(): boolean {\n    return (this.flags & FLAG_SELECTION_SET) > 0\n  }\n\n  get docChanged(): boolean {\n    return this.changes.length > 0\n  }\n\n  scrollIntoView(): Transaction {\n    return new Transaction(this.startState, this.changes, this.docs, this.selection,\n                           this.meta, this.flags | FLAG_SCROLL_INTO_VIEW)\n  }\n\n  get scrolledIntoView(): boolean {\n    return (this.flags & FLAG_SCROLL_INTO_VIEW) > 0\n  }\n\n  apply(): EditorState {\n    return this.startState.applyTransaction(this)\n  }\n\n  invertedChanges(): ChangeSet<Change> {\n    if (!this.changes.length) return ChangeSet.empty\n    let changes: Change[] = [], set = this.changes\n    for (let i = set.length - 1; i >= 0; i--)\n      changes.push(set.changes[i].invert(i == 0 ? this.startState.doc : this.docs[i - 1]))\n    return new ChangeSet(changes, set.mirror.length ? set.mirror.map(i => set.length - i - 1) : set.mirror)\n  }\n}\n","import {joinLines, splitLines, Text} from \"../../doc/src\"\nimport {EditorSelection} from \"./selection\"\nimport {Plugin, StateField} from \"./plugin\"\nimport {Transaction, MetaSlot} from \"./transaction\"\n\nclass Configuration {\n  constructor(\n    readonly plugins: ReadonlyArray<Plugin>,\n    readonly fields: ReadonlyArray<StateField<any>>,\n    readonly multipleSelections: boolean,\n    readonly tabSize: number,\n    readonly lineSeparator: string | null) {}\n\n  static create(config: EditorStateConfig): Configuration {\n    let plugins = config.plugins || [], fields = [], multiple = !!config.multipleSelections\n    for (let plugin of plugins) {\n      if (plugin.spec.multipleSelections) multiple = true\n      let field = plugin.stateField\n      if (!field) continue\n      if (fields.indexOf(field) > -1)\n        throw new Error(`A state field (${field.key}) can only be added to a state once`)\n      fields.push(field)\n    }\n    return new Configuration(plugins, fields, multiple, config.tabSize || 4, config.lineSeparator || null)\n  }\n\n  updateTabSize(tabSize: number) {\n    return new Configuration(this.plugins, this.fields, this.multipleSelections, tabSize, this.lineSeparator)\n  }\n\n  updateLineSeparator(lineSep: string | null) {\n    return new Configuration(this.plugins, this.fields, this.multipleSelections, this.tabSize, lineSep)\n  }\n}\n\nexport interface EditorStateConfig {\n  doc?: string | Text\n  selection?: EditorSelection\n  plugins?: ReadonlyArray<Plugin>\n  tabSize?: number\n  lineSeparator?: string | null\n  multipleSelections?: boolean\n}\n\nexport class EditorState {\n  /** @internal */\n  constructor(private readonly config: Configuration,\n              readonly doc: Text,\n              readonly selection: EditorSelection = EditorSelection.default) {}\n\n  getField<T>(field: StateField<T>): T | undefined {\n    return (this as any)[field.key]\n  }\n\n  get plugins(): ReadonlyArray<Plugin> { return this.config.plugins }\n\n  getPluginWithField(field: StateField<any>): Plugin {\n    for (const plugin of this.config.plugins) {\n      if (plugin.stateField == field) return plugin\n    }\n    throw new Error(\"Plugin for field not configured\")\n  }\n\n  /** @internal */\n  applyTransaction(tr: Transaction): EditorState {\n    let $conf = this.config\n    let tabSize = tr.getMeta(MetaSlot.changeTabSize), lineSep = tr.getMeta(MetaSlot.changeLineSeparator)\n    if (tabSize !== undefined) $conf = $conf.updateTabSize(tabSize)\n    if (lineSep !== undefined) $conf = $conf.updateLineSeparator(lineSep)\n    let newState = new EditorState($conf, tr.doc, tr.selection)\n    for (let field of $conf.fields)\n      (newState as any)[field.key] = field.apply(tr, (this as any)[field.key], newState)\n    return newState\n  }\n\n  get transaction(): Transaction {\n    return Transaction.start(this)\n  }\n\n  get tabSize(): number { return this.config.tabSize }\n\n  get multipleSelections(): boolean { return this.config.multipleSelections }\n\n  joinLines(text: ReadonlyArray<string>): string { return joinLines(text, this.config.lineSeparator || undefined) }\n  splitLines(text: string): string[] { return splitLines(text, this.config.lineSeparator || undefined) }\n\n  static create(config: EditorStateConfig = {}): EditorState {\n    let $config = Configuration.create(config)\n    let doc = config.doc instanceof Text ? config.doc : Text.of(config.doc || \"\", config.lineSeparator || undefined)\n    let selection = config.selection || EditorSelection.default\n    if (!$config.multipleSelections) selection = selection.asSingle()\n    let state = new EditorState($config, doc, selection)\n    for (let field of $config.fields) (state as any)[field.key] = field.init(state)\n    return state\n  }\n}\n","let [nav, doc]: [any, any] = typeof navigator != \"undefined\"\n  ? [navigator, document]\n  : [{userAgent: \"\", vendor: \"\", platform: \"\"}, {}]\n\nconst ie_edge = /Edge\\/(\\d+)/.exec(nav.userAgent)\nconst ie_upto10 = /MSIE \\d/.test(nav.userAgent)\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent)\nconst ie = !!(ie_upto10 || ie_11up || ie_edge)\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(nav.userAgent)\nconst chrome = !ie && /Chrome\\/(\\d+)/.exec(nav.userAgent)\nconst webkit = !ie && 'WebkitAppearance' in doc.documentElement.style\n\nexport default {\n  mac: /Mac/.test(nav.platform),\n  ie,\n  ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n  gecko,\n  gecko_version: gecko ? +(/Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n  chrome: !!chrome,\n  chrome_version: chrome ? +chrome[1] : 0,\n  ios: !ie && /AppleWebKit/.test(nav.userAgent) && /Mobile\\/\\w+/.test(nav.userAgent),\n  android: /Android\\b/.test(nav.userAgent),\n  webkit,\n  safari: /Apple Computer/.test(nav.vendor),\n  webkit_version: webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0\n}\n","import browser from \"./browser\"\n\nexport let getRoot: (dom: HTMLElement) => Document = typeof document == \"undefined\" || (document as any).getRootNode\n  ? (dom: HTMLElement) => (dom as any).getRootNode()\n  : () => document\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport function selectionCollapsed(domSel: Selection) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function hasSelection(dom: HTMLElement): boolean {\n  let sel = getRoot(dom).getSelection()!\n  if (!sel.anchorNode) return false\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode! : sel.anchorNode)\n  } catch(_) {\n    return false\n  }\n}\n\nexport function clientRectsFor(dom: Node): DOMRectList {\n  if (dom.nodeType == 3) {\n    let range = document.createRange()\n    range.setEnd(dom, dom.nodeValue!.length)\n    range.setStart(dom, 0)\n    return range.getClientRects() as DOMRectList\n  } else if (dom.nodeType == 1) {\n    return (dom as HTMLElement).getClientRects() as DOMRectList\n  } else {\n    return [] as any as DOMRectList\n  }\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport function isEquivalentPosition(node: Node, off: number, targetNode: Node | null, targetOff: number): boolean {\n  return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n                       scanFor(node, off, targetNode, targetOff, 1)) : false\n}\n\nexport function domIndex(node: Node): number {\n  for (var index = 0;; index++) {\n    node = node.previousSibling!\n    if (!node) return index\n  }\n}\n\nfunction scanFor(node: Node, off: number, targetNode: Node, targetOff: number, dir: -1 | 1): boolean {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : maxOffset(node))) {\n      if (node.nodeName == \"DIV\" || node.nodeName == \"PRE\") return false\n      let parent = node.parentNode\n      if (!parent || parent.nodeType != 1) return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      off = dir < 0 ? maxOffset(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function maxOffset(node: Node): number {\n  return node.nodeType == 3 ? node.nodeValue!.length : node.childNodes.length\n}\n\nexport type Rect = {left: number, right: number, top: number, bottom: number}\n\nfunction windowRect(win: Window): Rect {\n  return {left: 0, right: win.innerWidth,\n          top: 0, bottom: win.innerHeight}\n}\n\nexport function scrollRectIntoView(dom: HTMLElement, rect: Rect) {\n  let scrollThreshold = 0, scrollMargin = 5\n  let doc = dom.ownerDocument!, win = doc.defaultView!\n  let gutterCover = 0, prev = dom.previousSibling\n  if (prev && getComputedStyle(prev as HTMLElement).position == \"sticky\") gutterCover = dom.offsetLeft\n\n  for (let cur: any = dom.parentNode; cur;) {\n    if (cur.nodeType == 1) { // Element or document\n      let bounding: Rect, top = cur == document.body\n      if (top) {\n        bounding = windowRect(win)\n      } else {\n        if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n          cur = cur.parentNode\n          continue\n        }\n        let rect = cur.getBoundingClientRect()\n        bounding = {left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight}\n      }\n\n      let moveX = 0, moveY = 0\n      if (rect.top < bounding.top + scrollThreshold)\n        moveY = -(bounding.top - rect.top + scrollMargin)\n      else if (rect.bottom > bounding.bottom - scrollThreshold)\n        moveY = rect.bottom - bounding.bottom + scrollMargin\n      if (rect.left < bounding.left + gutterCover + scrollThreshold)\n        moveX = -(bounding.left + gutterCover - rect.left + scrollMargin)\n      else if (rect.right > bounding.right - scrollThreshold)\n        moveX = rect.right - bounding.right + scrollMargin\n      if (moveX || moveY) {\n        if (top) {\n          win.scrollBy(moveX, moveY)\n        } else {\n          if (moveY) cur.scrollTop += moveY\n          if (moveX) cur.scrollLeft += moveX\n          rect = {left: rect.left - moveX, top: rect.top - moveY,\n                  right: rect.right - moveX, bottom: rect.bottom - moveY} as ClientRect\n        }\n      }\n      if (top) break\n      cur = cur.parentNode\n    } else if (cur.nodeType == 11) { // A shadow root\n      cur = cur.host\n    } else {\n      break\n    }\n  }\n}\n","import {Rect, maxOffset} from \"./dom\"\n\ndeclare global {\n  interface Node { cmView: ContentView | undefined; cmIgnore: boolean | undefined }\n}\n\nexport const enum dirty { not = 0, child = 1, node = 2 }\n\nconst none: any[] = []\n\nexport abstract class ContentView {\n  constructor(public parent: ContentView | null, public dom: Node | null) {\n    if (dom) dom.cmView = this\n  }\n\n  abstract length: number;\n  abstract children: ContentView[];\n  dirty: number = dirty.not;\n\n  get childGap() { return 0 }\n  get overrideDOMText(): ReadonlyArray<string> | null { return null }\n\n  get posAtStart(): number {\n    return this.parent ? this.parent.posBefore(this) : 0\n  }\n\n  get posAtEnd(): number {\n    return this.posAtStart + this.length\n  }\n\n  posBefore(view: ContentView): number {\n    let pos = this.posAtStart\n    for (let child of this.children) {\n      if (child == view) return pos\n      pos += child.length + this.childGap\n    }\n    throw new RangeError(\"Invalid child in posBefore\")\n  }\n\n  posAfter(view: ContentView): number {\n    return this.posBefore(view) + view.length\n  }\n\n  coordsAt(pos: number): Rect | null {\n    for (let off = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = off + child.length\n      if (end >= pos && (end != off || this.childGap)) return child.coordsAt(pos - off)\n      off = end + this.childGap\n    }\n    return null\n  }\n\n  syncInto(parent: HTMLElement, pos: Node | null): Node | null {\n    return syncNodeInto(parent, pos, this.dom!)\n  }\n\n  syncDOMChildren() {\n    let parent = this.dom as HTMLElement, pos: Node | null = parent.firstChild\n    for (let view of this.children) pos = view.syncInto(parent, pos)\n    while (pos) pos = rm(pos)\n  }\n\n  sync() {\n    if (this.dirty & dirty.node)\n      this.syncDOMChildren()\n    if (this.dirty & dirty.child)\n      for (let child of this.children) if (child.dirty) child.sync()\n    this.dirty = dirty.not\n  }\n\n  domFromPos(pos: number): {node: Node, offset: number} | null { return null }\n\n  localPosFromDOM(node: Node, offset: number): number {\n    let after: Node | null\n    if (node == this.dom) {\n      after = this.dom.childNodes[offset]\n    } else {\n      let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1\n      for (;;) {\n        let parent = node.parentNode!\n        if (parent == this.dom) break\n        if (bias == 0 && parent.firstChild != parent.lastChild) {\n          if (node == parent.firstChild) bias = -1\n          else bias = 1\n        }\n        node = parent\n      }\n      if (bias < 0) after = node\n      else after = node.nextSibling\n    }\n    if (after == this.dom.firstChild) return 0\n    while (after && !after.cmView) after = after.nextSibling\n    if (!after) return this.length\n\n    for (let i = 0, pos = 0;; i++) {\n      let child = this.children[i]\n      if (child.dom == after) return pos\n      pos += child.length + this.childGap\n    }\n  }\n\n  domBoundsAround(from: number, to: number, offset = 0): {startDOM: Node | null, endDOM: Node | null, from: number, to: number} | null {\n    let fromI = -1, fromStart = -1, toI = -1, toEnd = -1\n    for (let i = 0, pos = offset; i < this.children.length; i++) {\n      let child = this.children[i], end = pos + child.length\n      if (pos < from && end > to) return child.domBoundsAround(from, to, pos)\n      if (end >= from && fromI == -1) { fromI = i; fromStart = pos }\n      if (end >= to && toI == -1) { toI = i; toEnd = end; break }\n      pos = end + this.childGap\n    }\n    return {from: fromStart, to: toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom!.nextSibling : null) || this.dom!.firstChild,\n            endDOM: toI < this.children.length - 1 ? this.children[toI + 1].dom : null}\n  }\n\n  // FIXME track precise dirty ranges, to avoid full DOM sync on every touched node?\n  markDirty() {\n    if (this.dirty & dirty.node) return\n    this.dirty |= dirty.node\n    this.markParentsDirty()\n  }\n\n  markParentsDirty() {\n    for (let parent = this.parent; parent; parent = parent.parent) {\n      if (parent.dirty & dirty.child) return\n      parent.dirty |= dirty.child\n    }\n  }\n\n  setParent(parent: ContentView) {\n    this.parent = parent\n    if (this.dirty) this.markParentsDirty()\n  }\n\n  replaceChildren(from: number, to: number, children: ContentView[] = none) {\n    this.children.splice(from, to - from, ...children)\n    this.markDirty()\n  }\n\n  ignoreMutation(rec: MutationRecord): boolean { return false }\n  ignoreEvent(event: Event): boolean { return false }\n\n  childPos(pos: number, bias: number = 1): {i: number, off: number} {\n    return new ChildCursor(this.children, this.length, this.childGap).findPos(pos, bias)\n  }\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom: Node): Node {\n  let next = dom.nextSibling\n  dom.parentNode!.removeChild(dom)\n  return next!\n}\n\nexport function syncNodeInto(parent: HTMLElement, pos: Node | null, dom: Node): Node | null {\n  if (dom.parentNode == parent) {\n    while (pos != dom) pos = rm(pos!)\n    pos = dom.nextSibling\n  } else {\n    parent.insertBefore(dom, pos)\n  }\n  return pos\n}\n\nexport class ChildCursor {\n  off: number = 0\n\n  constructor(public children: ContentView[], public pos: number,\n              public gap: number = 0, public i: number = children.length) {\n    this.pos += gap\n  }\n\n  findPos(pos: number, bias: number = 1): this {\n    for (;;) {\n      if (pos > this.pos || pos == this.pos && (bias > 0 || this.i == 0)) {\n        this.off = pos - this.pos\n        return this\n      }\n      this.pos -= this.children[--this.i].length + this.gap\n    }\n  }\n}\n","import {ChangeSet, Change, ChangedRange} from \"../../state/src\"\n\ntype A<T> = ReadonlyArray<T>\n\nexport interface RangeValue {\n  map(mapping: ChangeSet, from: number, to: number): Range<any> | null\n  bias: number\n  collapsed?: boolean\n}\n\nexport interface RangeComparator<T extends RangeValue> {\n  compareRange(from: number, to: number, activeA: T[], activeB: T[]): void\n  compareCollapsed(from: number, to: number, byA: T, byB: T): void\n  comparePoints(pos: number, pointsA: T[], pointsB: T[]): void\n}\n\nexport interface RangeIterator<T extends RangeValue> {\n  advance(pos: number, active: A<T>): void\n  advanceCollapsed(pos: number, value: T): void\n  point(value: T): void\n  ignoreRange(value: T): boolean\n  ignorePoint(value: T): boolean\n}\n\ninterface Heapable { heapPos: number; value: RangeValue }\n\nexport class Range<T extends RangeValue> {\n  constructor(\n    readonly from: number,\n    readonly to: number,\n    readonly value: T\n  ) {}\n\n  /** @internal */\n  map(changes: ChangeSet, oldOffset: number, newOffset: number): Range<T> | null {\n    let mapped = this.value.map(changes, this.from + oldOffset, this.to + oldOffset)\n    if (mapped) {\n      ;(mapped as any).from -= newOffset\n      ;(mapped as any).to -= newOffset\n    }\n    return mapped\n  }\n\n  /** @internal */\n  move(offset: number): Range<T> {\n    return offset ? new Range(this.from + offset, this.to + offset, this.value) : this\n  }\n\n  /** @internal Here so that we can put active ranges on a heap\n   * and take them off at their end */\n  get heapPos() { return this.to }\n}\n\nconst none: A<any> = []\n\nfunction maybeNone<T>(array: A<T>): A<T> { return array.length ? array : none }\n\nconst BASE_NODE_SIZE_SHIFT = 5, BASE_NODE_SIZE = 1 << BASE_NODE_SIZE_SHIFT\n\nexport type RangeFilter<T> = (from: number, to: number, value: T) => boolean\n\nexport class RangeSet<T extends RangeValue> {\n  // @internal\n  constructor(\n    // @internal The text length covered by this set\n    public length: number,\n    // The number of ranges in the set\n    public size: number,\n    // @internal The locally stored ranges—which are all of them\n    // for leaf nodes, and the ones that don't fit in child sets for\n    // non-leaves. Sorted by start position, then bias.\n    public local: A<Range<T>>,\n    // @internal The child sets, in position order. Their total\n    // length may be smaller than .length if the end is empty (never\n    // greater)\n    public children: A<RangeSet<T>>\n  ) {}\n\n  update(added: A<Range<T>> = none,\n         filter: RangeFilter<T> | null = null,\n         filterFrom: number = 0,\n         filterTo: number = this.length): RangeSet<T> {\n    let maxLen = added.reduce((l, d) => Math.max(l, d.to), this.length)\n    return this.updateInner(added.length ? added.slice().sort(byPos) : added,\n                            filter, filterFrom, filterTo, 0, maxLen)\n  }\n\n  /** @internal */\n  updateInner(added: A<Range<T>>,\n              filter: RangeFilter<T> | null,\n              filterFrom: number, filterTo: number,\n              offset: number, length: number): RangeSet<T> {\n    // The new local ranges. Null means no changes were made yet\n    let local: Range<T>[] | null = filterRanges<T>(this.local, filter, filterFrom, filterTo, offset)\n    // The new array of child sets, if changed\n    let children: RangeSet<T>[] | null = null\n\n    let size = 0\n    let decI = 0, pos = offset\n    // Iterate over the child sets, applying filters and pushing added\n    // ranges into them\n    for (let i = 0; i < this.children.length; i++) {\n      let child = this.children[i]\n      let endPos = pos + child.length, localRanges: Range<T>[] | null = null\n      while (decI < added.length) {\n        let next = added[decI]\n        if (next.from >= endPos) break\n        decI++\n        if (next.to > endPos) {\n          if (!local) local = this.local.slice()\n          insertSorted(local, next.move(-offset))\n        } else {\n          (localRanges || (localRanges = [])).push(next)\n        }\n      }\n      let newChild = child\n      if (localRanges || filter && filterFrom <= endPos && filterTo >= pos)\n        newChild = newChild.updateInner(localRanges || none, filter, filterFrom, filterTo,\n                                        pos, newChild.length)\n      if (newChild != child)\n        (children || (children = this.children.slice(0, i))).push(newChild)\n      else if (children)\n        children.push(newChild)\n      size += newChild.size\n      pos = endPos\n    }\n\n    // If nothing was actually updated, return the existing object\n    if (!local && !children && decI == added.length) return this\n\n    // Compute final size\n    size += (local || this.local).length + added.length - decI\n\n    // This is a small node—turn it into a flat leaf\n    if (size <= BASE_NODE_SIZE)\n      return collapseSet(children || this.children, local || this.local.slice(),\n                         added, decI, offset, length)\n\n    let childSize = Math.max(BASE_NODE_SIZE, size >> BASE_NODE_SIZE_SHIFT)\n    if (decI < added.length) {\n      if (!children) children = this.children.slice()\n      if (!local) local = this.local.slice()\n      appendRanges<T>(local, children, added, decI, offset, length, pos, childSize)\n    }\n\n    if (children) {\n      if (!local) local = this.local.slice()\n      rebalanceChildren(local, children, childSize)\n    }\n\n    return new RangeSet<T>(length, size, maybeNone(local || this.local), maybeNone(children || this.children))\n  }\n\n  grow(length: number): RangeSet<T> {\n    return new RangeSet<T>(this.length + length, this.size, this.local, this.children)\n  }\n\n  // Collect all ranges in this set into the target array,\n  // offsetting them by `offset`\n  collect(target: Range<T>[], offset: number) {\n    for (let range of this.local) target.push(range.move(offset))\n    for (let child of this.children) {\n      child.collect(target, offset)\n      offset += child.length\n    }\n  }\n\n  map(changes: ChangeSet): RangeSet<T> {\n    if (changes.length == 0 || this == RangeSet.empty) return this\n    return this.mapInner(changes, 0, 0, changes.mapPos(this.length, 1)).set\n  }\n\n  // Child boundaries are always mapped forward. This may cause ranges\n  // at the start of a set to end up sticking out before its new\n  // start, if they map backward. Such ranges are returned in\n  // `escaped`.\n  private mapInner(changes: ChangeSet,\n                   oldStart: number, newStart: number,\n                   newEnd: number): {set: RangeSet<T>, escaped: Range<T>[] | null} {\n    let newLocal: Range<T>[] | null = null\n    let escaped: Range<T>[] | null = null\n    let newLength = newEnd - newStart, newSize = 0\n\n    for (let i = 0; i < this.local.length; i++) {\n      let range = this.local[i], mapped = range.map(changes, oldStart, newStart)\n      let escape = mapped != null && (mapped.from < 0 || mapped.to > newLength)\n      if (newLocal == null && (range != mapped || escape)) newLocal = this.local.slice(0, i)\n      if (escape) (escaped || (escaped = [])).push(mapped!)\n      else if (newLocal && mapped) newLocal.push(mapped)\n    }\n\n    let newChildren: RangeSet<T>[] | null = null\n    for (let i = 0, oldPos = oldStart, newPos = newStart; i < this.children.length; i++) {\n      let child = this.children[i], newChild = child\n      let oldChildEnd = oldPos + child.length\n      let newChildEnd = changes.mapPos(oldPos + child.length, 1)\n      let touch = touchesChanges(oldPos, oldChildEnd, changes.changes)\n      if (touch == touched.yes) {\n        let inner = child.mapInner(changes, oldPos, newPos, newChildEnd)\n        newChild = inner.set\n        if (inner.escaped) for (let range of inner.escaped) {\n          range = range.move(newPos - newStart)\n          if (range.from < 0 || range.to > newLength)\n            insertSorted(escaped || (escaped = []), range)\n          else\n            insertSorted(newLocal || (newLocal = this.local.slice()), range)\n        }\n      } else if (touch == touched.covered) {\n        newChild = RangeSet.empty.grow(newChildEnd - newPos)\n      }\n      if (newChild != child) {\n        if (newChildren == null) newChildren = this.children.slice(0, i)\n        // If the node's content was completely deleted by mapping,\n        // drop the node—which is complicated by the need to\n        // distribute its length to another child when it's not the\n        // last child\n        if (newChild.size == 0 && (newChild.length == 0 || newChildren.length || i == this.children.length)) {\n          if (newChild.length > 0 && i > 0) {\n            let last = newChildren.length - 1, lastChild = newChildren[last]\n            newChildren[last] = new RangeSet<T>(lastChild.length + newChild.length, lastChild.size, lastChild.local, lastChild.children)\n          }\n        } else {\n          newChildren.push(newChild)\n        }\n      } else if (newChildren) {\n        newChildren.push(newChild)\n      }\n      newSize += newChild.size\n      oldPos = oldChildEnd\n      newPos = newChildEnd\n    }\n\n    let set = newLength == this.length && newChildren == null && newLocal == null\n      ? this\n      : new RangeSet<T>(newLength, newSize + (newLocal || this.local).length,\n                        newLocal || this.local, newChildren || this.children)\n    return {set, escaped}\n  }\n\n  forEach(f: (from: number, to: number, value: T) => void) { this.forEachInner(f, 0) }\n\n  private forEachInner(f: (from: number, to: number, value: T) => void, offset: number) {\n    for (let range of this.local) f(range.from + offset, range.to + offset, range.value)\n    for (let child of this.children) { child.forEachInner(f, offset); offset += child.length }\n  }\n\n  iter(): {next: () => Range<T> | void} {\n    const heap: (Range<T> | LocalSet<T>)[] = []\n\n    if (this.size > 0) {\n      addIterToHeap(heap, [new IteratedSet(0, this)], 0)\n      if (this.local.length) addToHeap(heap, new LocalSet(0, this.local))\n    }\n\n    return {\n      next(): Range<T> | void {\n        if (heap.length == 0) return\n\n        const next = takeFromHeap(heap)\n        if (next instanceof LocalSet) {\n          const range = next.ranges[next.index].move(next.offset)\n\n          // Put the rest of the set back onto the heap\n          if (++next.index < next.ranges.length) addToHeap(heap, next)\n          else if (next.next) addIterToHeap(heap, next.next, 0)\n          return range\n        } else { // It is a range\n          return next\n        }\n      }\n    }\n  }\n\n  compare(other: RangeSet<T>, textDiff: A<ChangedRange>, comparator: RangeComparator<T>, oldLen: number) {\n    let oldPos = 0, newPos = 0\n    for (let range of textDiff) {\n      if (range.fromB > newPos && (this != other || oldPos != newPos))\n        new RangeSetComparison<T>(this, oldPos, other, newPos, range.fromB, comparator).run()\n      oldPos = range.toA\n      newPos = range.toB\n    }\n    if (oldPos < this.length || newPos < other.length)\n      new RangeSetComparison<T>(this, oldPos, other, newPos, newPos + (oldLen - oldPos), comparator).run()\n  }\n\n  static iterateSpans<T extends RangeValue>(sets: A<RangeSet<T>>, from: number, to: number, iterator: RangeIterator<T>) {\n    let heap: Heapable[] = []\n\n    for (let set of sets) if (set.size > 0) {\n      addIterToHeap(heap, [new IteratedSet(0, set)], from)\n      if (set.local.length) addToHeap(heap, new LocalSet(0, set.local))\n    }\n    let active: T[] = []\n\n    while (heap.length > 0) {\n      let next = takeFromHeap(heap)\n      if (next instanceof LocalSet) {\n        let range = next.ranges[next.index]\n        if (range.from + next.offset > to) break\n\n        if (range.to + next.offset >= from) {\n          if (range.from < range.to && !iterator.ignoreRange(range.value)) {\n            range = range.move(next.offset)\n\n            iterator.advance(range.from, active)\n            let collapsed = range.value.collapsed\n            if (collapsed) {\n              from = range.to\n              iterator.advanceCollapsed(Math.min(from, to), range.value)\n            } else {\n              active.push(range.value)\n              addToHeap(heap, range)\n            }\n          } else if (range.from == range.to && !iterator.ignorePoint(range.value)) {\n            iterator.advance(range.from, active)\n            iterator.point(range.value)\n          }\n        }\n        // Put the rest of the set back onto the heap\n        if (++next.index < next.ranges.length) addToHeap(heap, next)\n        else if (next.next) addIterToHeap(heap, next.next, from)\n      } else { // It is a range that ends here\n        let range = next as Range<T>\n          if (range.to >= to) break\n        iterator.advance(range.to, active)\n        active.splice(active.indexOf(range.value), 1)\n      }\n    }\n    iterator.advance(to, active)\n  }\n\n  static of<T extends RangeValue>(ranges: A<Range<T>> | Range<T>): RangeSet<T> {\n    return RangeSet.empty.update(ranges instanceof Range ? [ranges] : ranges)\n  }\n\n  static empty = new RangeSet<any>(0, 0, none, none)\n}\n\n// Stack element for iterating over a range set\nclass IteratedSet<T extends RangeValue> {\n  // Index == -1 means the set's locals have not been yielded yet.\n  // Otherwise this is an index in the set's child array.\n  index: number = 0\n  constructor(public offset: number,\n              public set: RangeSet<T>) {}\n}\n\n// Cursor into a node-local set of ranges\nclass LocalSet<T extends RangeValue> {\n  public index: number = 0\n  constructor(public offset: number,\n              public ranges: A<Range<T>>,\n              public next: IteratedSet<T>[] | null = null) {}\n\n  // Used to make this conform to Heapable\n  get heapPos(): number { return this.ranges[this.index].from + this.offset }\n  get value(): T { return this.ranges[this.index].value }\n}\n\nfunction iterRangeSet<T extends RangeValue>(stack: IteratedSet<T>[], skipTo: number = 0) {\n  for (;;) {\n    if (stack.length == 0) break\n    let top = stack[stack.length - 1]\n    if (top.index == top.set.children.length) {\n      stack.pop()\n    } else {\n      let next = top.set.children[top.index], start = top.offset\n      top.index++\n      top.offset += next.length\n      if (top.offset >= skipTo) {\n        stack.push(new IteratedSet(start, next))\n        break\n      }\n    }\n  }\n}\nfunction compareHeapable(a: Heapable, b: Heapable): number {\n  return a.heapPos - b.heapPos || a.value.bias - b.value.bias\n}\n\nfunction addIterToHeap<T extends RangeValue>(heap: Heapable[], stack: IteratedSet<T>[], skipTo: number = 0) {\n  for (;;) {\n    iterRangeSet<T>(stack, skipTo)\n    if (stack.length == 0) break\n    let next = stack[stack.length - 1], local = next.set.local\n    let leaf = next.set.children.length ? null : stack\n    if (local.length) addToHeap(heap, new LocalSet<T>(next.offset, local, leaf))\n    if (leaf) break\n  }\n}\n\nfunction addToHeap(heap: Heapable[], elt: Heapable) {\n  let index = heap.push(elt) - 1\n  while (index > 0) {\n    let parentIndex = index >> 1, parent = heap[parentIndex]\n    if (compareHeapable(elt, parent) >= 0) break\n    heap[index] = parent\n    heap[parentIndex] = elt\n    index = parentIndex\n  }\n}\n\nfunction takeFromHeap<T extends Heapable>(heap: T[]): T {\n  let elt = heap[0], replacement = heap.pop()!\n  if (heap.length == 0) return elt\n  heap[0] = replacement\n  for (let index = 0;;) {\n    let childIndex = (index << 1) + 1\n    if (childIndex >= heap.length) break\n    let child = heap[childIndex]\n    if (childIndex + 1 < heap.length && compareHeapable(child, heap[childIndex + 1]) >= 0) {\n      child = heap[childIndex + 1]\n      childIndex++\n    }\n    if (compareHeapable(replacement, child) < 0) break\n    heap[childIndex] = replacement\n    heap[index] = child\n    index = childIndex\n  }\n  return elt\n}\n\nfunction byPos(a: Range<RangeValue>, b: Range<RangeValue>): number {\n  return a.from - b.from || a.value.bias - b.value.bias\n}\n\nfunction insertSorted(target: Range<RangeValue>[], range: Range<RangeValue>) {\n  let i = target.length\n  while (i > 0 && byPos(target[i - 1], range) >= 0) i--\n  target.splice(i, 0, range)\n}\n\nfunction filterRanges<T extends RangeValue>(ranges: A<Range<T>>,\n                                            filter: RangeFilter<T> | null,\n                                            filterFrom: number, filterTo: number,\n                                            offset: number): Range<T>[] | null {\n  if (!filter) return null\n  let copy: Range<T>[] | null = null\n  for (let i = 0; i < ranges.length; i++) {\n    let range = ranges[i], from = range.from + offset, to = range.to + offset\n    if (filterFrom > to || filterTo < from || filter(from, to, range.value)) {\n      if (copy != null) copy.push(range)\n    } else {\n      if (copy == null) copy = ranges.slice(0, i)\n    }\n  }\n  return copy\n}\n\nfunction collapseSet<T extends RangeValue>(\n  children: A<RangeSet<T>>, local: Range<T>[],\n  add: A<Range<T>>, start: number, offset: number, length: number\n): RangeSet<T> {\n  let mustSort = local.length > 0 && add.length > 0, off = 0\n  for (let child of children) {\n    child.collect(local, -off)\n    off += child.length\n  }\n  for (let added of add) local.push(added.move(-offset))\n  if (mustSort) local.sort(byPos)\n\n  return new RangeSet<T>(length, local.length, local, none)\n}\n\nfunction appendRanges<T extends RangeValue>(local: Range<T>[], children: RangeSet<T>[],\n                                            ranges: A<Range<T>>, start: number,\n                                            offset: number, length: number, pos: number, childSize: number) {\n  // Group added ranges after the current children into new\n  // children (will usually only happen when initially creating a\n  // node or adding stuff to the top-level node)\n  for (let i = start; i < ranges.length;) {\n    let add: Range<T>[] = []\n    let end = Math.min(i + childSize, ranges.length)\n    let endPos = end == ranges.length ? offset + length : ranges[end].from\n    for (; i < end; i++) {\n      let range = ranges[i]\n      if (range.to > endPos) insertSorted(local, range.move(-offset))\n      else add.push(range)\n    }\n    // Move locals that fit in this new child from `local` to `add`\n    for (let i = 0; i < local.length; i++) {\n      let range = local[i]\n      if (range.from >= pos && range.to <= endPos) {\n        local.splice(i--, 1)\n        insertSorted(add, range.move(offset))\n      }\n    }\n    if (add.length) {\n      if (add.length == ranges.length)\n        children.push(new RangeSet(endPos - pos, add.length, add.map(r => r.move(-pos)), none))\n      else\n        children.push(RangeSet.empty.updateInner(add, null, 0, 0, pos, endPos - pos))\n      pos = endPos\n    }\n  }\n}\n\n// FIXME try to clean this up\nfunction rebalanceChildren<T extends RangeValue>(local: Range<T>[], children: RangeSet<T>[], childSize: number) {\n  for (let i = 0, off = 0; i < children.length;) {\n    let child = children[i], next\n    if (child.size == 0 && (i > 0 || children.length == 1)) {\n      // Drop empty node\n      children.splice(i--, 1)\n      if (i >= 0) children[i] = children[i].grow(child.length)\n    } else if (child.size > (childSize << 1) && child.local.length < (child.length >> 1)) {\n      // Unwrap an overly big node\n      for (let range of child.local) insertSorted(local, range.move(off))\n      children.splice(i, 1, ...child.children)\n    } else if (child.children.length == 0 && i < children.length - 1 &&\n               (next = children[i + 1]).size + child.size <= BASE_NODE_SIZE &&\n               next.children.length == 0) {\n      // Join two small leaf nodes\n      children.splice(i, 2, new RangeSet<T>(child.length + next.length,\n                                            child.size + next.size,\n                                            child.local.concat(next.local.map(d => d.move(child.length))),\n                                            none))\n    } else {\n      // Join a number of nodes into a wrapper node\n      let joinTo = i + 1, size = child.size, length = child.length\n      if (child.size < (childSize >> 1)) {\n        for (; joinTo < children.length; joinTo++) {\n          let next = children[joinTo], totalSize = size + next.size\n          if (totalSize > childSize) break\n          size = totalSize\n          length += next.length\n        }\n      }\n      if (joinTo > i + 1) {\n        let joined = new RangeSet<T>(length, size, none, children.slice(i, joinTo))\n        let joinedLocals = []\n        for (let j = 0; j < local.length; j++) {\n          let range = local[j]\n          if (range.from >= off && range.to <= off + length) {\n            local.splice(j--, 1)\n            joinedLocals.push(range.move(-off))\n          }\n        }\n        if (joinedLocals.length) joined = joined.update(joinedLocals.sort(byPos))\n        children.splice(i, joinTo - i, joined)\n        i++\n        off += length\n      } else {\n        i++\n        off += child.length\n      }\n    }\n  }\n}\n\nconst SIDE_A = 1, SIDE_B = 2\n\nclass ComparisonSide<T extends RangeValue> {\n  heap: LocalSet<T>[] = []\n  active: T[] = []\n  activeTo: number[] = []\n  points: T[] = []\n  tip: LocalSet<T> | null = null\n  collapsedBy: T | null = null\n  collapsedTo: number = -1\n\n  constructor(readonly stack: IteratedSet<T>[]) {}\n\n  forward(start: number, next: IteratedSet<T>): boolean {\n    let newTip = false\n    if (next.set.local.length) {\n      let local = new LocalSet(next.offset, next.set.local)\n      addToHeap(this.heap, local)\n      if (!next.set.children.length) {\n        this.tip = local\n        newTip = true\n      }\n    }\n    iterRangeSet(this.stack, start)\n    return newTip\n  }\n\n  findActive(to: number, value: T): number {\n    for (let i = 0; i < this.active.length; i++)\n      if (this.activeTo[i] == to && this.active[i] == value) return i\n    return -1\n  }\n}\n\nclass RangeSetComparison<T extends RangeValue> {\n  a: ComparisonSide<T>\n  b: ComparisonSide<T>\n  pos: number\n  end: number\n\n  constructor(a: RangeSet<T>, startA: number,\n              b: RangeSet<T>, startB: number, endB: number,\n              private comparator: RangeComparator<T>) {\n    this.a = new ComparisonSide<T>([new IteratedSet<T>(startB - startA, a)])\n    this.b = new ComparisonSide<T>([new IteratedSet<T>(0, b)])\n    this.pos = startB\n    this.end = endB\n    this.forwardIter(SIDE_A | SIDE_B)\n  }\n\n  forwardIter(side: number) {\n    for (; side > 0;) {\n      let nextA = this.a.stack.length ? this.a.stack[this.a.stack.length - 1] : null\n      let nextB = this.b.stack.length ? this.b.stack[this.b.stack.length - 1] : null\n      if (nextA && nextB && nextA.offset == nextB.offset && nextA.set == nextB.set) {\n        iterRangeSet<T>(this.a.stack, this.pos)\n        iterRangeSet<T>(this.b.stack, this.pos)\n      } else if (nextA && (!nextB || (nextA.offset < nextB.offset ||\n                                      nextA.offset == nextB.offset && (this.a.stack.length == 1 ||\n                                                                       nextA.set.length >= nextB.set.length)))) {\n        if (this.a.forward(this.pos, nextA)) side = side & ~SIDE_A\n      } else if (nextB) {\n        if (this.b.forward(this.pos, nextB)) side = side & ~SIDE_B\n      } else {\n        break\n      }\n    }\n  }\n\n  run() {\n    let heapA = this.a.heap, heapB = this.b.heap\n    for (;;) {\n      if (heapA.length && (!heapB.length || compareHeapable(heapA[0], heapB[0]) < 0)) {\n        this.advance(this.a, this.b)\n      } else if (heapB.length) {\n        this.advance(this.b, this.a)\n      } else {\n        this.comparator.comparePoints(this.pos, this.a.points, this.b.points)\n        break\n      }\n    }\n  }\n\n  advancePos(pos: number) {\n    if (pos > this.end) pos = this.end\n    if (pos <= this.pos) return\n    this.handlePoints()\n    this.comparator.compareRange(this.pos, pos, this.a.active, this.b.active)\n    this.pos = pos\n  }\n\n  handlePoints() {\n    if (this.a.points.length || this.b.points.length) {\n      this.comparator.comparePoints(this.pos, this.a.points, this.b.points)\n      this.a.points.length = this.b.points.length = 0\n    }\n  }\n\n  advance(side: ComparisonSide<T>, otherSide: ComparisonSide<T>) {\n    let next = takeFromHeap(side.heap)!\n    if (next instanceof LocalSet) {\n      let range = next.ranges[next.index++]\n      if (range.from + next.offset > this.end) {\n        side.heap.length = 0\n        this.pos = this.end\n        return\n      }\n      if (range.from < range.to && range.to + next.offset > this.pos) {\n        this.advancePos(range.from + next.offset)\n        let collapsed = range.value.collapsed\n        if (collapsed) {\n          side.collapsedBy = range.value\n          side.collapsedTo = Math.max(side.collapsedTo, range.to + next.offset)\n          // Skip regions that are collapsed on both sides\n          let collapsedTo = Math.min(this.a.collapsedTo, this.b.collapsedTo)\n          if (collapsedTo > this.pos) {\n            this.handlePoints()\n            this.comparator.compareCollapsed(this.pos, collapsedTo, this.a.collapsedBy!, this.b.collapsedBy!)\n            this.pos = collapsedTo\n          }\n        }\n        this.addActiveRange(Math.min(this.end, range.to + next.offset), range.value, side, otherSide)\n      } else if (range.from == range.to) {\n        this.advancePos(range.from + next.offset)\n        let found = otherSide.points.indexOf(range.value)\n        if (found > -1) remove(otherSide.points, found)\n        else side.points.push(range.value)\n      }\n      if (next.index < next.ranges.length) addToHeap(side.heap, next)\n      else if (next == this.a.tip) this.forwardIter(SIDE_A)\n      else if (next == this.b.tip) this.forwardIter(SIDE_B)\n    } else {\n      let range = next as Range<T>\n      this.advancePos(range.to)\n      let found = side.findActive(range.to, range.value)\n      if (found > -1) { remove(side.active, found); remove(side.activeTo, found) }\n    }\n  }\n\n  addActiveRange(to: number, value: T, side: ComparisonSide<T>, otherSide: ComparisonSide<T>) {\n    let found = otherSide.findActive(to, value)\n    if (found > -1) {\n      remove(otherSide.active, found)\n      remove(otherSide.activeTo, found)\n    } else {\n      side.active.push(value)\n      side.activeTo.push(to)\n      addToHeap(side.heap, new Range(this.pos, to, value))\n    }\n  }\n}\n\nfunction remove<T>(array: T[], index: number) {\n  let last = array.pop()!\n  if (index != array.length) array[index] = last\n}\n\nconst enum touched {yes, no, covered}\n\nfunction touchesChanges(from: number, to: number, changes: A<Change>): touched {\n  let result = touched.no\n  for (let change of changes) {\n    if (change.to >= from && change.from <= to) {\n      if (change.from < from && change.to > to) result = touched.covered\n      else if (result == touched.no) result = touched.yes\n    }\n    let diff = change.length - (change.to - change.from)\n    if (from > change.from) from += diff\n    if (to > change.to) to += diff\n  }\n  return result\n}\n","import {ChangeSet, ChangedRange} from \"../../state/src\"\nimport {RangeValue, Range, RangeSet, RangeComparator, RangeIterator} from \"../../rangeset/src/rangeset\"\nimport {Text} from \"../../doc/src/\"\n\nexport interface RangeDecorationSpec {\n  inclusiveStart?: boolean\n  inclusiveEnd?: boolean\n  attributes?: {[key: string]: string}\n  // Shorthand for {attributes: {class: value}}\n  class?: string\n  tagName?: string\n  collapsed?: boolean | WidgetType<any>\n}\n\nexport interface WidgetDecorationSpec {\n  widget: WidgetType<any>\n  side?: number\n}\n\nexport interface LineDecorationSpec {\n  attributes?: {[key: string]: string}\n  widget?: WidgetType<any>\n  side?: number\n}\n\nexport abstract class WidgetType<T> {\n  constructor(readonly value: T) {}\n  abstract toDOM(): HTMLElement;\n  eq(value: T): boolean { return this.value === value }\n\n  /** @internal */\n  compare(other: WidgetType<any>): boolean {\n    return this == other || this.constructor == other.constructor && this.eq(other.value)\n  }\n\n  get estimatedHeight(): number { return -1 }\n  ignoreEvent(event: Event): boolean { return true }\n}\n\nexport type DecorationSet = RangeSet<Decoration>\nexport type DecoratedRange = Range<Decoration>\n\nexport abstract class Decoration implements RangeValue {\n  // @internal\n  constructor(\n    // @internal\n    readonly bias: number,\n    // @internal\n    readonly widget: WidgetType<any> | null,\n    readonly spec: any) {}\n\n  abstract map(mapping: ChangeSet, from: number, to: number): DecoratedRange | null;\n\n  static range(from: number, to: number, spec: RangeDecorationSpec): DecoratedRange {\n    if (from >= to) throw new RangeError(\"Range decorations may not be empty\")\n    return new Range(from, to, new RangeDecoration(spec))\n  }\n\n  static widget(pos: number, spec: WidgetDecorationSpec): DecoratedRange {\n    return new Range(pos, pos, new WidgetDecoration(spec))\n  }\n\n  static line(pos: number, spec: LineDecorationSpec): DecoratedRange {\n    return new Range(pos, pos, new LineDecoration(spec))\n  }\n\n  static set(of: DecoratedRange | ReadonlyArray<DecoratedRange>): DecorationSet {\n    return RangeSet.of<Decoration>(of)\n  }\n\n  static none = RangeSet.empty as DecorationSet\n\n  // @internal\n  abstract sameEffect(other: Decoration): boolean\n}\n\nconst BIG_BIAS = 2e9\n\nexport class RangeDecoration extends Decoration {\n  readonly endBias: number\n  readonly collapsed: boolean\n\n  constructor(readonly spec: RangeDecorationSpec) {\n    super(spec.inclusiveStart === true ? -BIG_BIAS : BIG_BIAS,\n          spec.collapsed instanceof WidgetType ? spec.collapsed : null, spec)\n    this.endBias = spec.inclusiveEnd == true ? BIG_BIAS : -BIG_BIAS\n    this.collapsed = !!spec.collapsed\n  }\n\n  map(mapping: ChangeSet, from: number, to: number): DecoratedRange | null {\n    let newFrom = mapping.mapPos(from, this.bias, true), newTo = mapping.mapPos(to, this.endBias, true)\n    if (newFrom < 0) {\n      if (newTo < 0) return null\n      newFrom = this.bias >= 0 ? -(newFrom + 1) : mapping.mapPos(from, 1)\n    } else if (newTo < 0) {\n      newTo = this.endBias < 0 ? -(newTo + 1) : mapping.mapPos(to, -1)\n    }\n    return newFrom < newTo ? new Range(newFrom, newTo, this) : null\n  }\n\n  sameEffect(other: RangeDecoration): boolean {\n    return this == other ||\n      this.spec.tagName == other.spec.tagName &&\n      this.spec.class == other.spec.class &&\n      this.collapsed == other.collapsed &&\n      widgetsEq(this.widget, other.widget) &&\n      attrsEq(this.spec.attributes, other.spec.attributes)\n  }\n}\n\nexport class WidgetDecoration extends Decoration {\n  widget!: WidgetType<any>\n\n  constructor(readonly spec: WidgetDecorationSpec) {\n    super(spec.side || 0, spec.widget || null, spec)\n  }\n\n  map(mapping: ChangeSet, pos: number): DecoratedRange | null {\n    pos = mapping.mapPos(pos, this.bias, true)\n    return pos < 0 ? null : new Range(pos, pos, this)\n  }\n\n  sameEffect(other: Decoration): boolean {\n    return other instanceof WidgetDecoration && widgetsEq(this.widget, other.widget) && this.bias == other.bias\n  }\n}\n\nexport class LineDecoration extends Decoration {\n  constructor(spec: LineDecorationSpec) {\n    super(-BIG_BIAS, spec.widget || null, spec)\n  }\n\n  map(mapping: ChangeSet, pos: number): DecoratedRange | null {\n    for (let change of mapping.changes) {\n      // If the line break before was deleted, drop this decoration\n      if (change.from <= pos - 1 && change.to >= pos) return null\n      if (change.from < pos) pos += change.length - (change.to - change.from)\n    }\n    return new Range(pos, pos, this)\n  }\n\n  sameEffect(other: Decoration): boolean {\n    return other instanceof LineDecoration &&\n      attrsEq(this.spec.attributes, other.spec.attributes) &&\n      widgetsEq(this.widget, other.widget) &&\n      this.side == other.side\n  }\n\n  get side() { return this.spec.side || 0 }\n}\n\nexport function attrsEq(a: any, b: any): boolean {\n  if (a == b) return true\n  if (!a || !b) return false\n  let keysA = Object.keys(a), keysB = Object.keys(b)\n  if (keysA.length != keysB.length) return false\n  for (let key of keysA) {\n    if (keysB.indexOf(key) == -1 || a[key] !== b[key]) return false\n  }\n  return true\n}\n\nexport function widgetsEq(a: WidgetType<any> | null, b: WidgetType<any> | null): boolean {\n  return a == b || !!(a && b && a.compare(b))\n}\n\nfunction compareSets(setA: Decoration[], setB: Decoration[]): boolean {\n  if (setA.length != setB.length) return false\n  search: for (let value of setA) {\n    for (let valueB of setB) if (value.sameEffect(valueB)) continue search\n    return false\n  }\n  return true\n}\n\nconst MIN_RANGE_GAP = 4\n\nfunction addRange(from: number, to: number, ranges: number[]) {\n  if (ranges[ranges.length - 1] + MIN_RANGE_GAP > from) ranges[ranges.length - 1] = to\n  else ranges.push(from, to)\n}\n\nexport function joinRanges(a: number[], b: number[]): number[] {\n  if (a.length == 0) return b\n  if (b.length == 0) return a\n  let result: number[] = []\n  for (let iA = 0, iB = 0;;) {\n    if (iA < a.length && (iB == b.length || a[iA] < b[iB]))\n      addRange(a[iA++], a[iA++], result)\n    else if (iB < b.length)\n      addRange(b[iB++], b[iB++], result)\n    else\n      break\n  }\n  return result\n}\n\nclass Changes {\n  content: number[] = []\n  height: number[] = []\n}\n\nclass DecorationComparator implements RangeComparator<Decoration> {\n  changes: Changes = new Changes\n  constructor() {}\n\n  compareRange(from: number, to: number, activeA: Decoration[], activeB: Decoration[]) {\n    if (!compareSets(activeA, activeB))\n      addRange(from, to, this.changes.content)\n  }\n\n  compareCollapsed(from: number, to: number, byA: Decoration, byB: Decoration) {\n    if (!widgetsEq(byA.widget, byB.widget)) {\n      addRange(from, to, this.changes.content)\n      addRange(from, to, this.changes.height)\n    }\n  }\n\n  comparePoints(pos: number, pointsA: Decoration[], pointsB: Decoration[]) {\n    if (!compareSets(pointsA, pointsB)) {\n      addRange(pos, pos, this.changes.content)\n      if (pointsA.some(d => !!(d.widget && d.widget.estimatedHeight > -1)) ||\n          pointsB.some(d => !!(d.widget && d.widget.estimatedHeight > -1)))\n        addRange(pos, pos, this.changes.height)\n    }\n  }\n}\n\nexport function findChangedRanges(a: DecorationSet, b: DecorationSet, diff: ReadonlyArray<ChangedRange>, docA: Text): Changes {\n  let comp = new DecorationComparator()\n  a.compare(b, diff, comp, docA.length)\n  return comp.changes\n}\n\nclass HeightDecoScanner implements RangeIterator<Decoration> {\n  ranges: number[] = []\n  pos: number = 0\n\n  advance(pos: number, active: ReadonlyArray<Decoration>) { this.pos = pos }\n  advanceCollapsed(pos: number) { addRange(this.pos, pos, this.ranges); this.pos = pos }\n  point(value: Decoration) { addRange(this.pos, this.pos, this.ranges) }\n  ignoreRange(value: Decoration) { return true }\n  ignorePoint(value: Decoration) { return !value.widget }\n}\n\nexport function heightRelevantDecorations(decorations: DecorationSet[], ranges: ReadonlyArray<ChangedRange>): number[] {\n  let scanner = new HeightDecoScanner\n  for (let {fromB, toB} of ranges) if (fromB < toB) {\n    scanner.pos = fromB\n    RangeSet.iterateSpans(decorations, fromB, toB, scanner)\n  }\n  return scanner.ranges\n}\n","import {ContentView, dirty} from \"./contentview\"\nimport {WidgetType, attrsEq, DecorationSet, Decoration, RangeDecoration, WidgetDecoration, LineDecoration} from \"./decoration\"\nimport {LineWidget} from \"./lineview\"\nimport {Text, TextIterator} from \"../../doc/src\"\nimport {RangeIterator, RangeSet} from \"../../rangeset/src/rangeset\"\nimport {Rect} from \"./dom\"\nimport browser from \"./browser\"\n\nconst none: any[] = []\n\nexport abstract class InlineView extends ContentView {\n  abstract merge(other: InlineView, from?: number, to?: number): boolean\n  get children() { return none }\n  finish(parent: ContentView) {}\n  cut(from: number, to?: number) {}\n  abstract slice(from: number, to?: number): InlineView\n  getSide() { return 0 }\n\n  static appendInline(a: InlineView[], b: InlineView[]): InlineView[] {\n    let i = 0\n    if (b.length && a.length) {\n      let last = a[a.length - 1]\n      if (last.merge(b[0], last.length)) i++\n    }\n    for (; i < b.length; i++) a.push(b[i])\n    return a\n  }\n}\n\nconst MAX_JOIN_LEN = 256\n\nexport class TextView extends InlineView {\n  textDOM: Node | null = null;\n  class: string | null;\n\n  constructor(public text: string,\n              public tagName: string | null,\n              clss: string | null,\n              public attrs: {[key: string]: string} | null) {\n    super(null, null)\n    this.class = clss\n  }\n\n  finish(parent: ContentView) {\n    this.setParent(parent)\n    if (this.dom) return\n    this.textDOM = document.createTextNode(this.text)\n    let tagName = this.tagName || (this.attrs || this.class ? \"span\" : null)\n    if (tagName) {\n      this.dom = document.createElement(tagName)\n      this.dom.appendChild(this.textDOM)\n      if (this.class) (this.dom as HTMLElement).className = this.class\n      if (this.attrs) for (let name in this.attrs) (this.dom as HTMLElement).setAttribute(name, this.attrs[name])\n    } else {\n      this.dom = this.textDOM\n    }\n    this.markDirty()\n    this.dom.cmView = this\n  }\n\n  get length() { return this.text.length }\n\n  sync() {\n    if (this.dirty & dirty.node) {\n      if (this.textDOM!.nodeValue != this.text) this.textDOM!.nodeValue = this.text\n      let dom = this.dom!\n      if (this.textDOM != dom && (this.dom!.firstChild != this.textDOM || dom.lastChild != this.textDOM)) {\n        while (dom.firstChild) dom.removeChild(dom.firstChild)\n        dom.appendChild(this.textDOM!)\n      }\n    }\n    this.dirty = dirty.not\n  }\n\n  merge(other: InlineView, from: number = 0, to: number = this.length): boolean {\n    if (!(other instanceof TextView) ||\n        other.tagName != this.tagName || other.class != this.class ||\n        !attrsEq(other.attrs, this.attrs) || this.length - (to - from) + other.length > MAX_JOIN_LEN)\n      return false\n    this.text = this.text.slice(0, from) + other.text + this.text.slice(to)\n    this.markDirty()\n    return true\n  }\n\n  cut(from: number, to: number = this.length) {\n    this.text = this.text.slice(0, from) + this.text.slice(to)\n    this.markDirty()\n  }\n\n  slice(from: number, to: number = this.length) {\n    return new TextView(this.text.slice(from, to), this.tagName, this.class, this.attrs)\n  }\n\n  localPosFromDOM(node: Node, offset: number): number {\n    return node == this.textDOM ? offset : offset ? this.text.length : 0\n  }\n\n  domFromPos(pos: number) { return {node: this.textDOM!, offset: pos} }\n\n  domBoundsAround(from: number, to: number, offset: number) {\n    return {from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom!.nextSibling}\n  }\n\n  coordsAt(pos: number): Rect {\n    let range = document.createRange()\n    if (browser.chrome || browser.gecko) {\n      // These browsers reliably return valid rectangles for empty ranges\n      range.setEnd(this.textDOM!, pos)\n      range.setStart(this.textDOM!, pos)\n      return range.getBoundingClientRect()\n    } else {\n      // Otherwise, get the rectangle around a character and take one side\n      let extend = pos == 0 ? 1 : -1\n      range.setEnd(this.textDOM!, pos + (extend > 0 ? 1 : 0))\n      range.setStart(this.textDOM!, pos - (extend < 0 ? 1 : 0))\n      let rect = range.getBoundingClientRect()\n      let x = extend < 0 ? rect.right : rect.left\n      return {left: x, right: x, top: rect.top, bottom: rect.bottom}\n    }\n  }\n}\n\n// Also used for collapsed ranges that don't have a placeholder widget!\nexport class WidgetView extends InlineView {\n  dom!: HTMLElement | null\n\n  constructor(public length: number, readonly widget: WidgetType<any> | null, readonly side: number) {\n    super(null, null)\n  }\n\n  finish(parent: ContentView) {\n    this.setParent(parent)\n    if (!this.dom) {\n      this.dom = this.widget ? this.widget.toDOM() : document.createElement(\"span\")\n      this.dom.contentEditable = \"false\"\n      this.dom.cmView = this\n    }\n    this.markDirty()\n  }\n\n  cut(from: number, to: number = this.length) { this.length -= to - from }\n  slice(from: number, to: number = this.length) { return new WidgetView(to - from, this.widget, this.side) }\n\n  sync() { this.dirty = dirty.not }\n\n  getSide() { return this.side }\n\n  merge(other: InlineView, from: number = 0, to: number = this.length): boolean {\n    if (!(other instanceof WidgetView) || this.widget || other.widget) return false\n    this.length = from + other.length + (this.length - to)\n    return true\n  }\n\n  ignoreMutation(): boolean { return true }\n  ignoreEvent(event: Event): boolean { return this.widget ? this.widget.ignoreEvent(event) : false }\n\n  get overrideDOMText() {\n    if (this.length == 0) return [\"\"]\n    let top: ContentView = this\n    while (top.parent) top = top.parent\n    let text: Text = (top as any).text, start = this.posAtStart\n    return text ? text.sliceLines(start, start + this.length) : [\"\"]\n  }\n\n  domBoundsAround() { return null }\n\n  coordsAt(pos: number): Rect | null {\n    let rects = this.dom!.getClientRects()\n    for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n      let rect = rects[i]\n      if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom) return rects[i]\n    }\n    return null\n  }\n}\n\nexport class LineContent {\n  elements: InlineView[] = []\n  attrs: null | {[attr: string]: string} = null\n  widgets: LineWidget[] = none\n  constructor(public atStart: boolean = true) {}\n\n  add(inline: InlineView) {\n    this.elements.push(inline)\n    if (this.atStart && inline instanceof TextView) this.atStart = false\n  }\n\n  addLineDeco(deco: LineDecoration) {\n    let attrs = deco.spec.attributes\n    if (attrs) {\n      if (!this.attrs) this.attrs = {}\n      for (let name in attrs) {\n        if (name == \"class\" && Object.prototype.hasOwnProperty.call(this.attrs, \"class\"))\n          this.attrs.class += \" \" + attrs.class\n        else if (name == \"style\" && Object.prototype.hasOwnProperty.call(this.attrs, \"style\"))\n          this.attrs.style += \";\" + attrs.style\n        else\n          this.attrs[name] = attrs[name]\n      }\n    }\n    if (deco.widget) {\n      if (this.widgets == none) this.widgets = []\n      let pos = 0\n      while (pos < this.widgets.length && this.widgets[pos].side <= deco.side) pos++\n      this.widgets.splice(pos, 0, new LineWidget(deco.widget, deco.side))\n    }\n  }\n}\n\nexport class InlineBuilder implements RangeIterator<Decoration> {\n  lines: LineContent[]\n  cursor: TextIterator\n  text: string = \"\"\n  skip: number\n  textOff: number = 0\n\n  constructor(text: Text, public pos: number) {\n    this.cursor = text.iter()\n    this.skip = pos\n    this.lines = [new LineContent(text.lineAt(pos).start == pos)]\n  }\n\n  buildText(length: number, tagName: string | null, clss: string | null, attrs: {[key: string]: string} | null, ranges: Decoration[]) {\n    while (length > 0) {\n      if (this.textOff == this.text.length) {\n        let {value, lineBreak, done} = this.cursor.next(this.skip)\n        this.skip = 0\n        if (done) throw new Error(\"Ran out of text content when drawing inline views\")\n        if (lineBreak) {\n          this.lines.push(new LineContent)\n          length--\n          continue\n        } else {\n          this.text = value\n          this.textOff = 0\n        }\n      }\n      let take = Math.min(this.text.length - this.textOff, length)\n      this.curLine.add(new TextView(this.text.slice(this.textOff, this.textOff + take), tagName, clss, attrs))\n      length -= take\n      this.textOff += take\n    }\n  }\n\n  advance(pos: number, active: Decoration[]) {\n    if (pos <= this.pos) return\n\n    let tagName = null, clss = null\n    let attrs: {[key: string]: string} | null = null\n    for (let {spec} of active as RangeDecoration[]) {\n      if (spec.tagName) tagName = spec.tagName\n      if (spec.class) clss = clss ? clss + \" \" + spec.class : spec.class\n      if (spec.attributes) for (let name in spec.attributes) {\n        let value = spec.attributes[name]\n        if (value == null) continue\n        if (name == \"class\") {\n          clss = clss ? clss + \" \" + value : value\n        } else {\n          if (!attrs) attrs = {}\n          if (name == \"style\" && attrs.style) value = attrs.style + \";\" + value\n          attrs[name] = value\n        }\n      }\n    }\n\n    this.buildText(pos - this.pos, tagName, clss, attrs, active)\n    this.pos = pos\n  }\n\n  advanceCollapsed(pos: number, deco: Decoration) {\n    if (pos <= this.pos) return\n\n    let line = this.curLine\n    let widgetView = new WidgetView(pos - this.pos, deco.widget, 0)\n    if (!line.elements.length || !line.elements[line.elements.length - 1].merge(widgetView))\n      line.add(widgetView)\n\n    // Advance the iterator past the collapsed content\n    let length = pos - this.pos\n    if (this.textOff + length <= this.text.length) {\n      this.textOff += length\n    } else {\n      this.skip += length - (this.text.length - this.textOff)\n      this.text = \"\"\n      this.textOff = 0\n    }\n\n    this.pos = pos\n  }\n\n  point(deco: Decoration) {\n    if (deco instanceof WidgetDecoration)\n      this.curLine.add(new WidgetView(0, deco.widget, deco.bias))\n    else if (this.curLine.atStart)\n      this.curLine.addLineDeco(deco as LineDecoration)\n  }\n\n  get curLine() { return this.lines[this.lines.length - 1] }\n\n  ignoreRange(deco: RangeDecoration): boolean { return false }\n  ignorePoint(deco: Decoration): boolean { return false }\n\n  static build(text: Text, from: number, to: number, decorations: ReadonlyArray<DecorationSet>): LineContent[] {\n    let builder = new InlineBuilder(text, from)\n    RangeSet.iterateSpans(decorations, from, to, builder)\n    return builder.lines\n  }\n}\n","import {ContentView, ChildCursor, syncNodeInto} from \"./contentview\"\nimport {DocView} from \"./docview\"\nimport {InlineView, TextView, LineContent} from \"./inlineview\"\nimport {clientRectsFor, Rect, domIndex} from \"./dom\"\nimport {attrsEq, WidgetType} from \"./decoration\"\n\nexport class LineView extends ContentView {\n  children: InlineView[]\n  widgets: LineWidget[] = none\n  length: number\n  dom!: HTMLElement\n  prevAttrs: {[name: string]: string} | null | undefined = undefined\n  attrs: {[name: string]: string} | null = null\n\n  constructor(parent: DocView, content?: LineContent, tail?: InlineView[]) {\n    super(parent, document.createElement(\"div\"))\n    this.length = 0\n    this.children = []\n    if (content) this.update(0, 0, content, tail)\n    this.markDirty()\n  }\n\n  setDeco(content: LineContent) {\n    if (!attrsEq(this.attrs, content.attrs)) {\n      this.prevAttrs = this.attrs\n      this.attrs = content.attrs\n      this.markDirty()\n    }\n    // Reconcile the new widgets with the existing ones\n    for (let i = 0, j = 0;;) {\n      let a = i == this.widgets.length ? null : this.widgets[i]\n      let b = j == content.widgets.length ? null : content.widgets[j]\n      if (!a && !b) break\n      if (a && b && a.eq(b)) {\n        i++; j++\n      } else if (!a || (b && b.side <= a.side)) {\n        if (this.widgets == none) this.widgets = []\n        this.widgets.splice(i++, 0, b!.finish())\n        this.parent!.markDirty()\n        j++\n      } else {\n        this.widgets.splice(i, 1)\n        this.parent!.markDirty()\n      }\n    }\n  }\n\n  update(from: number, to: number = this.length, content: LineContent, tail?: InlineView[]) {\n    if (from == 0) this.setDeco(content)\n    let elts = tail ? InlineView.appendInline(content.elements, tail) : content.elements\n    let cur = new ChildCursor(this.children, this.length)\n    let {i: toI, off: toOff} = cur.findPos(to, 1)\n    let {i: fromI, off: fromOff} = cur.findPos(from, -1)\n    let dLen = from - to\n    for (let view of elts) dLen += view.length\n    this.length += dLen\n\n    // Both from and to point into the same text view\n    if (fromI == toI && fromOff) {\n      let start = this.children[fromI]\n      // Maybe just update that view and be done\n      if (elts.length == 1 && start.merge(elts[0], fromOff, toOff)) return\n      if (elts.length == 0) return start.cut(fromOff, toOff)\n      // Otherwise split it, so that we don't have to worry about aliasting front/end afterwards\n      InlineView.appendInline(elts, [start.slice(toOff)])\n      toI++\n      toOff = 0\n    }\n\n    // Make sure start and end positions fall on node boundaries\n    // (fromOff/toOff are no longer used after this), and that if the\n    // start or end of the elts can be merged with adjacent nodes,\n    // this is done\n    if (toOff) {\n      let end = this.children[toI]\n      if (elts.length && end.merge(elts[elts.length - 1], 0, toOff)) elts.pop()\n      else end.cut(0, toOff)\n    } else if (toI < this.children.length && elts.length &&\n               this.children[toI].merge(elts[elts.length - 1], 0, 0)) {\n      elts.pop()\n    }\n    if (fromOff) {\n      let start = this.children[fromI]\n      if (elts.length && start.merge(elts[0], fromOff)) elts.shift()\n      else start.cut(fromOff)\n      fromI++\n    } else if (fromI && elts.length && this.children[fromI - 1].merge(elts[0], this.children[fromI - 1].length)) {\n      elts.shift()\n    }\n\n    // Then try to merge any mergeable nodes at the start and end of\n    // the changed range\n    while (fromI < toI && elts.length && this.children[toI - 1].merge(elts[elts.length - 1])) {\n      elts.pop()\n      toI--\n    }\n    while (fromI < toI && elts.length && this.children[fromI].merge(elts[0])) {\n      elts.shift()\n      fromI++\n    }\n\n    // And if anything remains, splice the child array to insert the new elts\n    if (elts.length || fromI != toI) {\n      for (let view of elts) view.finish(this)\n      this.replaceChildren(fromI, toI, elts)\n    }\n  }\n\n  detachTail(from: number): InlineView[] {\n    let result: InlineView[] = []\n    if (this.length == 0) return result\n    let {i, off} = new ChildCursor(this.children, this.length).findPos(from)\n    if (off > 0) {\n      let child = this.children[i]\n      result.push(child.slice(off))\n      child.cut(off)\n      i++\n    }\n    if (i < this.children.length) {\n      for (let j = i; j < this.children.length; j++) result.push(this.children[j])\n      this.replaceChildren(i, this.children.length)\n    }\n    this.length = from\n    return result\n  }\n\n  domFromPos(pos: number): {node: Node, offset: number} {\n    let {i, off} = new ChildCursor(this.children, this.length).findPos(pos)\n    if (off) {\n      let child = this.children[i]\n      if (child instanceof TextView) return {node: child.textDOM!, offset: off}\n    }\n    while (i > 0 && (this.children[i - 1].getSide() > 0 || this.children[i - 1].dom!.parentNode != this.dom)) i--\n    return {node: this.dom, offset: i ? domIndex(this.children[i - 1].dom!) + 1 : 0}\n  }\n\n  syncInto(parent: HTMLElement, pos: Node | null): Node | null {\n    for (let i = 0, main = false;; i++) {\n      let widget = i == this.widgets.length ? null : this.widgets[i]\n      if (!main && (!widget || widget.side > 0)) {\n        main = true\n        pos = syncNodeInto(parent, pos, this.dom!)\n      }\n      if (!widget) break\n      pos = syncNodeInto(parent, pos, widget.dom!)\n    }\n    return pos\n  }\n\n  // FIXME might need another hack to work around Firefox's behavior\n  // of not actually displaying the cursor even though it's there in\n  // the DOM\n  sync() {\n    super.sync()\n    if (this.prevAttrs !== undefined) {\n      removeAttrs(this.dom, this.prevAttrs)\n      setAttrs(this.dom, this.attrs)\n      this.prevAttrs = undefined\n    }\n    let last = this.dom.lastChild\n    if (!last || last.nodeName == \"BR\") {\n      let hack = document.createElement(\"BR\")\n      hack.cmIgnore = true\n      this.dom.appendChild(hack)\n    }\n  }\n\n  measureTextSize(): {lineHeight: number, charWidth: number} | null {\n    if (this.children.length == 0 || this.length > 20) return null\n    let totalWidth = 0\n    for (let child of this.children) {\n      if (!(child instanceof TextView)) return null\n      let rects = clientRectsFor(child.dom!)\n      if (rects.length != 1) return null\n      totalWidth += rects[0].width\n    }\n    return {lineHeight: this.dom.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length}\n  }\n\n  coordsAt(pos: number): Rect | null {\n    if (this.length == 0) return (this.dom.lastChild as HTMLElement).getBoundingClientRect()\n    return super.coordsAt(pos)\n  }\n\n  // Ignore mutations in line widgets\n  ignoreMutation(rec: MutationRecord): boolean {\n    return !this.dom.contains(rec.target.nodeType == 1 ? rec.target : rec.target.parentNode!)\n  }\n\n  // Find the appropriate widget, and ask it whether an event needs to be ignored\n  ignoreEvent(event: Event): boolean {\n    if (this.widgets.length == 0 || this.dom.contains(event.target as Node)) return false\n    for (let widget of this.widgets)\n      if (widget.dom!.contains(event.target as Node))\n        return widget.widget.ignoreEvent(event)\n    return true\n  }\n}\n\nexport class LineWidget {\n  dom: HTMLElement | null = null\n  constructor(readonly widget: WidgetType<any>, readonly side: number) {}\n  eq(other: LineWidget) {\n    return this.widget.compare(other.widget) && this.side == other.side\n  }\n  finish() {\n    this.dom = this.widget.toDOM()\n    this.dom.cmIgnore = true\n    return this\n  }\n}\n\nconst none: any[] = []\n\nfunction setAttrs(dom: HTMLElement, attrs: {[name: string]: string} | null) {\n  if (attrs) for (let name in attrs) dom.setAttribute(name, attrs[name])\n}\n\nfunction removeAttrs(dom: HTMLElement, attrs: {[name: string]: string} | null) {\n  if (attrs) for (let name in attrs) dom.removeAttribute(name)\n}\n","import {Text} from \"../../doc/src\"\nimport {HeightMap} from \"./heightmap\"\n\nfunction visiblePixelRange(dom: HTMLElement, paddingTop: number): {top: number, bottom: number} {\n  let rect = dom.getBoundingClientRect()\n  let top = Math.max(0, Math.min(innerHeight, rect.top)), bottom = Math.max(0, Math.min(innerHeight, rect.bottom))\n  for (let parent = dom.parentNode as any; parent;) { // (Cast to any because TypeScript is useless with Node types)\n    if (parent.nodeType == 1) {\n      if (parent.scrollHeight > parent.clientHeight) {\n        let parentRect = parent.getBoundingClientRect()\n        top = Math.min(parentRect.bottom, Math.max(parentRect.top, top))\n        bottom = Math.min(parentRect.bottom, Math.max(parentRect.top, bottom))\n      }\n      parent = parent.parentNode\n    } else if (parent.nodeType == 11) { // Shadow root\n      parent = parent.host\n    } else {\n      break\n    }\n  }\n  return {top: top - (rect.top + paddingTop), bottom: bottom - (rect.top + paddingTop)}\n}\n\nconst VIEWPORT_MARGIN = 1000 // FIXME look into appropriate value of this through benchmarking etc\nconst MIN_COVER_MARGIN = 10  // coveredBy requires at least this many extra pixels to be covered\nconst MAX_COVER_MARGIN = VIEWPORT_MARGIN / 4\n\nexport class ViewportState {\n  top: number = 0;\n  bottom: number = 0;\n\n  updateFromDOM(dom: HTMLElement, paddingTop: number): number {\n    let {top, bottom} = visiblePixelRange(dom, paddingTop)\n    let dTop = top - this.top, dBottom = bottom - this.bottom, bias = 0\n    if (dTop > 0 && dBottom > 0) bias = Math.max(dTop, dBottom)\n    else if (dTop < 0 && dBottom < 0) bias = Math.min(dTop, dBottom)\n    this.top = top; this.bottom = bottom\n    return bias\n  }\n\n  coverEverything() {\n    this.top = -2e9\n    this.bottom = 2e9\n  }\n\n  getViewport(doc: Text, heightMap: HeightMap, bias: number, scrollTo: number): Viewport {\n    // This will divide VIEWPORT_MARGIN between the top and the\n    // bottom, depending on the bias (the change in viewport position\n    // since the last update). It'll hold a number between 0 and 1\n    let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / VIEWPORT_MARGIN / 2))\n    let viewport = new Viewport(heightMap.lineAt(this.top - marginTop * VIEWPORT_MARGIN, doc).start,\n                                heightMap.lineAt(this.bottom + (1 - marginTop) * VIEWPORT_MARGIN, doc).end)\n    // If scrollTo is > -1, make sure the viewport includes that position\n    if (scrollTo > -1) {\n      if (scrollTo < viewport.from) {\n        let top = heightMap.heightAt(scrollTo, doc, -1)\n        viewport = new Viewport(heightMap.lineAt(top - VIEWPORT_MARGIN / 2, doc).start,\n                                heightMap.lineAt(top + (this.bottom - this.top) + VIEWPORT_MARGIN / 2, doc).end)\n      } else if (scrollTo > viewport.to) {\n        let bottom = heightMap.heightAt(scrollTo, doc, 1)\n        viewport = new Viewport(heightMap.lineAt(bottom - (this.bottom - this.top) - VIEWPORT_MARGIN / 2, doc).start,\n                                heightMap.lineAt(bottom + VIEWPORT_MARGIN / 2, doc).end)\n      }\n    }\n    return viewport\n  }\n\n  coveredBy(doc: Text, viewport: Viewport, heightMap: HeightMap, bias = 0) {\n    let top = heightMap.heightAt(viewport.from, doc, -1), bottom = heightMap.heightAt(viewport.to, doc, 1)\n    return (viewport.from == 0 || top <= this.top - Math.max(MIN_COVER_MARGIN, Math.min(-bias, MAX_COVER_MARGIN))) &&\n      (viewport.to == doc.length || bottom >= this.bottom + Math.max(MIN_COVER_MARGIN, Math.min(bias, MAX_COVER_MARGIN)))\n  }\n}\n\nexport class Viewport {\n  constructor(readonly from: number, readonly to: number) {}\n  clip(pos: number): number { return Math.max(this.from, Math.min(this.to, pos)) }\n  static empty = new Viewport(0, 0)\n}\n","import browser from \"./browser\"\nimport {ContentView} from \"./contentview\"\nimport {DocView} from \"./docview\"\nimport {hasSelection, getRoot} from \"./dom\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  subtree: true,\n  characterDataOldValue: true\n}\n\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nexport class DOMObserver {\n  observer: MutationObserver\n  onCharData: any\n  charDataQueue: MutationRecord[] = []\n  charDataTimeout: any = null\n  scrollTargets: HTMLElement[] = []\n  intersection: IntersectionObserver | null = null\n  intersecting: boolean = true\n  active: boolean = false\n  selectionActive: boolean = true\n  dom: HTMLElement\n\n  constructor(private docView: DocView,\n              private onDOMChange: (from: number, to: number, typeOver: boolean) => void,\n              private onSelectionChange: () => void,\n              private onScrollChanged: () => void) {\n    this.dom = docView.dom\n    this.observer = new MutationObserver(mutations => this.applyMutations(mutations))\n    if (useCharData)\n      this.onCharData = (event: MutationEvent) => {\n        this.charDataQueue.push({target: event.target,\n                                 type: \"characterData\",\n                                 oldValue: event.prevValue} as MutationRecord)\n        if (this.charDataTimeout == null) this.charDataTimeout = setTimeout(() => this.flush(), 20)\n      }\n    this.readSelection = this.readSelection.bind(this)\n    this.listenForSelectionChanges()\n    this.onScroll = this.onScroll.bind(this)\n    window.addEventListener(\"scroll\", this.onScroll)\n    if (typeof IntersectionObserver == \"function\") {\n      this.intersection = new IntersectionObserver(entries => {\n        if (entries[entries.length - 1].intersectionRatio > 0 != this.intersecting) {\n          this.intersecting = !this.intersecting\n          this.onScroll()\n        }\n      }, {})\n      this.intersection.observe(this.dom)\n    }\n    this.listenForScroll()\n    this.start()\n  }\n\n  listenForSelectionChanges() {\n    let listening = false\n    this.dom.addEventListener(\"focus\", () => {\n      if (listening) return\n      this.dom.ownerDocument!.addEventListener(\"selectionchange\", this.readSelection)\n      listening = true\n      if (hasSelection(this.dom)) this.readSelection()\n    })\n    this.dom.addEventListener(\"blur\", () => {\n      if (!listening) return\n      this.dom.ownerDocument!.removeEventListener(\"selectionchange\", this.readSelection)\n      listening = false\n    })\n  }\n\n  onScroll() {\n    if (this.intersecting) {\n      this.readSelection()\n      this.onScrollChanged()\n    }\n  }\n\n  listenForScroll() {\n    let i = 0, changed: HTMLElement[] | null = null\n    for (let dom = this.dom as any; dom;) {\n      if (dom.nodeType == 1) {\n        if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom) i++\n        else if (!changed) changed = this.scrollTargets.slice(0, i)\n        if (changed) changed.push(dom)\n        dom = dom.parentNode\n      } else if (dom.nodeType == 11) { // Shadow root\n        dom = dom.host\n      } else {\n        break\n      }\n    }\n    if (i < this.scrollTargets.length) changed = this.scrollTargets.slice(0, i)\n    if (changed) {\n      for (let dom of this.scrollTargets) dom.removeEventListener(\"scroll\", this.onScroll)\n      for (let dom of this.scrollTargets = changed) dom.addEventListener(\"scroll\", this.onScroll)\n    }\n  }\n\n  withoutListening<T>(f: () => T): T {\n    try {\n      this.stop()\n      return f()\n    } finally {\n      this.start()\n    }\n  }\n\n  withoutSelectionListening<T>(f: () => T): T {\n    try {\n      this.selectionActive = false\n      return f()\n    } finally {\n      this.selectionActive = true\n    }\n  }\n\n  start() {\n    if (this.active) return\n    this.observer.observe(this.dom, observeOptions)\n    if (useCharData)\n      this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.active = true\n  }\n\n  stop() {\n    if (!this.active) return\n    this.active = false\n    // FIXME we're throwing away DOM events when flushing like this,\n    // to avoid recursively calling `setState` when setting a new\n    // state, but that could in some circumstances drop information\n    this.observer.takeRecords()\n    this.charDataQueue.length = 0\n    this.observer.disconnect()\n    if (useCharData)\n      this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n  }\n\n  getMutations() {\n    let records = this.observer.takeRecords()\n    if (this.charDataQueue.length) {\n      clearTimeout(this.charDataTimeout)\n      this.charDataTimeout = null\n      records = records.concat(this.charDataQueue)\n      this.charDataQueue.length = 0\n    }\n    return records\n  }\n\n  flush(): boolean {\n    return this.applyMutations(this.getMutations())\n  }\n\n  applyMutations(records: MutationRecord[]): boolean {\n    if (records.length == 0) return false\n\n    let from = -1, to = -1, typeOver = false\n    for (let record of records) {\n      let range = this.readMutation(record)\n      if (!range) continue\n      if (range.typeOver) typeOver = true\n      if (from == -1) {\n        ;({from, to} = range)\n      } else {\n        from = Math.min(range.from, from)\n        to = Math.max(range.to, to)\n      }\n    }\n\n    let apply = from > -1 && this.active\n    if (apply) this.onDOMChange(from, to, typeOver)\n    if (this.docView.dirty) this.docView.sync()\n    return apply\n  }\n\n  readMutation(rec: MutationRecord): {from: number, to: number, typeOver: boolean} | null {\n    let cView = this.docView.nearest(rec.target)\n    if (!cView || cView.ignoreMutation(rec)) return null\n    cView.markDirty()\n\n    if (rec.type == \"childList\") {\n      let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1)\n      let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1)\n      return {from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n              to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false}\n    } else { // \"characterData\"\n      return {from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue}\n    }\n  }\n\n  readSelection() {\n    let root = getRoot(this.dom)\n    if (!this.active || !this.selectionActive || root.activeElement != this.dom || !hasSelection(this.dom) ||\n        this.docView.drawnSelection.eq(root.getSelection()!)) return\n    if (!this.flush()) this.onSelectionChange()\n  }\n\n  destroy() {\n    this.stop()\n    if (this.intersection) this.intersection.disconnect()\n    this.dom.ownerDocument!.removeEventListener(\"selectionchange\", this.readSelection)\n    for (let dom of this.scrollTargets) dom.removeEventListener(\"scroll\", this.onScroll)\n    window.removeEventListener(\"scroll\", this.onScroll)\n  }\n}\n\nfunction findChild(cView: ContentView, dom: Node | null, dir: number): ContentView | null {\n  while (dom) {\n    let curView = dom.cmView\n    if (curView && curView.parent == cView) return curView\n    let parent = dom.parentNode\n    dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling\n  }\n  return null\n}\n","import {Text} from \"../../doc/src\"\nimport {ChangedRange} from \"../../state/src\"\nimport {RangeSet, RangeIterator} from \"../../rangeset/src/rangeset\"\nimport {DecorationSet, RangeDecoration, Decoration, LineDecoration} from \"./decoration\"\nimport {Viewport} from \"./viewport\"\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\"]\n\nexport class HeightOracle {\n  doc: Text = Text.of([\"\"])\n  lineWrapping: boolean = false\n  heightSamples: {[key: number]: boolean} = {}\n  lineHeight: number = 14\n  charWidth: number = 7\n  lineLength: number = 30\n  // Used to track, during updateHeight, if any actual heights changed\n  heightChanged: boolean = false\n\n  heightForGap(from: number, to: number): number {\n    let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1\n    if (this.lineWrapping)\n      lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength)\n    return this.lineHeight * lines\n  }\n\n  heightForLine(length: number): number {\n    if (!this.lineWrapping) return this.lineHeight\n    let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)))\n    return lines * this.lineHeight\n  }\n\n  setDoc(doc: Text): this { this.doc = doc; return this }\n\n  mustRefresh(lineHeights: number[]): boolean {\n    let newHeight = false\n    for (let i = 0; i < lineHeights.length; i++) {\n      let h = lineHeights[i]\n      if (h < 0) {\n        i++\n      } else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n        newHeight = true\n        this.heightSamples[Math.floor(h * 10)] = true\n      }\n    }\n    return newHeight\n  }\n\n  refresh(whiteSpace: string, lineHeight: number, charWidth: number, lineLength: number, knownHeights: number[]): boolean {\n    let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1\n    let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping\n    this.lineWrapping = lineWrapping\n    this.lineHeight = lineHeight\n    this.charWidth = charWidth\n    this.lineLength = lineLength\n    if (changed) {\n      this.heightSamples = {}\n      for (let i = 0; i < knownHeights.length; i++) {\n        let h = knownHeights[i]\n        if (h < 0) i++\n        else this.heightSamples[Math.floor(h * 10)] = true\n      }\n    }\n    return changed\n  }\n}\n\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right lines. The `heights` array is a sequence of\n// line heights, starting from position `from`. When the lines have\n// line widgets, their height may be followed by a -1 or -2\n// (indicating whether the height is below or above the line) and then\n// a total widget height.\nexport class MeasuredHeights {\n  public index = 0\n  constructor(readonly from: number, readonly heights: number[]) {}\n  get more() { return this.index < this.heights.length }\n}\n\nexport class LineHeight {\n  constructor(readonly start: number, readonly end: number,\n              readonly top: number, readonly height: number,\n              // @internal\n              readonly line: HeightMapLine | null) {}\n\n  get bottom() { return this.top + this.height }\n  get textTop() { return this.top + (this.line ? lineWidgetHeight(this.line.deco, -2) : 0) }\n  get textBottom() { return this.bottom - (this.line ? lineWidgetHeight(this.line.deco, -1) : 0) }\n  get hasCollapsedRanges() {\n    if (this.line)\n      for (let i = 1; i < this.line.deco.length; i += 2)\n        if (this.line.deco[i] < 0) return true\n    return false\n  }\n}\n\nexport abstract class HeightMap {\n  constructor(\n    public length: number, // The number of characters covered\n    public height: number, // Height of this part of the document\n    public outdated: boolean = true // Tracks whether the height needs to be recomputed\n  ) {}\n\n  abstract size: number\n\n  abstract heightAt(pos: number, doc: Text, bias?: -1 | 1, offset?: number): number\n  abstract lineAt(height: number, doc: Text, offset?: number): LineHeight\n  abstract lineViewport(pos: number, doc: Text, offset?: number): Viewport\n  abstract decomposeLeft(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newTo: number): void\n  abstract decomposeRight(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newFrom: number): void\n  abstract updateHeight(oracle: HeightOracle, offset?: number, force?: boolean, measured?: MeasuredHeights): HeightMap\n  abstract toString(): void\n  abstract forEachLine(from: number, to: number, offset: number, oracle: HeightOracle, f: (height: LineHeight) => void): void\n\n  setHeight(oracle: HeightOracle, height: number) {\n    if (this.height != height) {\n      this.height = height\n      oracle.heightChanged = true\n    }\n  }\n\n  // from/to are node-relative positions pointing into the node itself\n  // newFrom/newTo are document-relative positions in the updated\n  // document, used for querying line endings and such\n  replace(from: number, to: number, nodes: HeightMap[], oracle: HeightOracle, newFrom: number, newTo: number): HeightMap {\n    let result: HeightMap[] = []\n    this.decomposeLeft(from, result, nodes[0], oracle, newFrom)\n    let last\n    if (nodes.length == 1) {\n      last = result.pop()!\n    } else {\n      for (let i = 1; i < nodes.length - 1; i++) result.push(nodes[i])\n      last = nodes[nodes.length - 1]\n    }\n    this.decomposeRight(to, result, last, oracle, newTo)\n    return HeightMap.of(result)\n  }\n\n  applyChanges(decorations: ReadonlyArray<DecorationSet>, oracle: HeightOracle, changes: ReadonlyArray<ChangedRange>): HeightMap {\n    let me: HeightMap = this, off = 0\n    for (let i = 0; i < changes.length; i++) {\n      let range = changes[i]\n      let nodes = buildChangedNodes(oracle, decorations, range.fromB, range.toB)\n      me = me.replace(range.fromA + off, range.toA + off, nodes, oracle, range.fromB, range.toB)\n      off += (range.toB - range.fromB) - (range.toA - range.fromA)\n    }\n    return me\n  }\n\n  static empty() { return new HeightMapLine(0, 0) }\n\n  static of(nodes: HeightMap[]): HeightMap {\n    if (nodes.length == 1) return nodes[0]\n\n    let i = 0, j = nodes.length, before = 0, after = 0\n    while (i < j) {\n      if (before < after) before += nodes[i++].size\n      else after += nodes[--j].size\n    }\n    for (;;) {\n      if (before > after * 2) {\n        let {left, right} = nodes[i - 1] as HeightMapBranch\n        nodes.splice(i - 1, 1, left, right)\n        before -= right.size\n        after += right.size\n      } else if (after > before * 2) {\n        let {left, right} = nodes[i] as HeightMapBranch\n        nodes.splice(i++, 1, left, right)\n        after -= left.size\n        before += left.size\n      } else {\n        break\n      }\n    }\n    return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), HeightMap.of(nodes.slice(i)))\n  }\n}\n\nconst noDeco: number[] = []\n\nclass HeightMapLine extends HeightMap {\n  // Decoration information is stored in a somewhat obscure format—the\n  // array of numbers in `deco` encodes all of collapsed ranges,\n  // inline widgets, and widgets above/below the line. It contains a\n  // series of pairs of numbers.\n  //\n  //  - The first number indicates the position of the decoration, or\n  //    -2 for widget height above the line, or -1 for widget height\n  //    below the line (see `lineWidgetHeight` and\n  //    `setLineWidgetHeight`)\n  //\n  //  - The second number is the height of a widget when positive, or\n  //    the number of collapse code points if negative.\n  //\n  // These are the pieces of information that need to be stored about\n  // lines to somewhat effectively estimate their height when they are\n  // not actually in view and thus can not be measured. Widget size\n  // above/below is also necessary in heightAt, to skip it.\n  //\n  // The somewhat awkward format is there to reduce the amount of\n  // space required—you can have a huge number of line heightmap\n  // objects when scrolling through a big document, and most of them\n  // don't need any extra data, and thus can just store a single\n  // pointer to `noDeco`.\n  constructor(length: number, height: number, public deco: number[] = noDeco) { super(length, height) }\n\n  get size(): number { return 1 }\n\n  heightAt(pos: number, doc: Text, bias: 1 | -1): number {\n    return bias < 0 ? lineWidgetHeight(this.deco, -2) : this.height - lineWidgetHeight(this.deco, -1)\n  }\n\n  lineAt(height: number, doc: Text, offset: number = 0) {\n    return new LineHeight(offset, offset + this.length, -height, this.height, this)\n  }\n\n  lineViewport(pos: number, doc: Text, offset: number = 0): Viewport {\n    return new Viewport(offset, offset + this.length)\n  }\n\n  replace(from: number, to: number, nodes: HeightMap[], oracle: HeightOracle, newFrom: number, newTo: number): HeightMap {\n    if (nodes.length != 1 || (nodes[0] instanceof HeightMapGap && oracle.doc.lineAt(newFrom).end < newTo))\n      return super.replace(from, to, nodes, oracle, newFrom, newTo)\n    this.deco = offsetDeco(this.deco, from, to, nodes[0].length)\n    if (nodes[0] instanceof HeightMapLine) this.deco = insertDeco(this.deco, (nodes[0] as HeightMapLine).deco, from)\n    this.length += nodes[0].length - (to - from)\n    this.outdated = true\n    return this\n  }\n\n  decomposeLeft(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newTo: number) {\n    if (to == 0) {\n      target.push(node)\n    } else if (node instanceof HeightMapLine) {\n      target.push(this.joinLine(to, this.length, node))\n    } else {\n      let nextEnd = oracle.doc.lineAt(newTo).end, breakInside = nextEnd < newTo + node.length\n      let newLen = to + (breakInside ? nextEnd - newTo : node.length)\n      target.push(new HeightMapLine(newLen, this.height, offsetDeco(this.deco, to, this.length, 0)))\n      if (breakInside)\n        target.push(new HeightMapGap(nextEnd + 1, newTo + node.length, oracle))\n    }\n  }\n\n  decomposeRight(from: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newFrom: number) {\n    if (from == this.length) {\n      target.push(node)\n    } else if (node instanceof HeightMapLine) {\n      target.push(this.joinLine(0, from, node))\n    } else {\n      let prevStart = oracle.doc.lineAt(newFrom).start, breakInside = prevStart > newFrom - node.length\n      if (breakInside)\n        target.push(new HeightMapGap(newFrom - node.length, prevStart - 1, oracle))\n      let newLen = (breakInside ? newFrom - prevStart : node.length) + (this.length - from)\n      target.push(new HeightMapLine(newLen, this.height, offsetDeco(this.deco, 0, from, newLen - this.length)))\n    }\n  }\n\n  joinLine(from: number, to: number, node: HeightMapLine): HeightMap {\n    let deco = insertDeco(offsetDeco(this.deco, from, to, node.length), node.deco, from)\n    return new HeightMapLine(this.length + node.length - (to - from), Math.max(this.height, node.height), deco)\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights) {\n    if (measured && measured.from <= offset && measured.more) {\n      let height = measured.heights[measured.index++]\n      // If either this line's deco data or the measured heights contain info about \n      if (this.deco.length && this.deco[0] < 0 || measured.more && measured.heights[measured.index] < 0) {\n        let above = measured.more && measured.heights[measured.index] == -2\n          ? measured.heights[(measured.index += 2) - 1] : 0\n        let below = measured.more && measured.heights[measured.index] == -1\n          ? measured.heights[(measured.index += 2) - 1] : 0\n        this.deco = setLineWidgetHeight(setLineWidgetHeight(this.deco.slice(), -2, above), -1, below)\n        height += above + below\n      }\n      this.setHeight(oracle, height)\n    } else if (force || this.outdated) {\n      let len = this.length, minH = 0, add = 0\n      for (let i = 1; i < this.deco.length; i += 2) {\n        let val = this.deco[i]\n        if (val < 0) len += val\n        else if (this.deco[i - 1] < 0) add += val\n        else minH = Math.max(val, minH)\n      }\n      this.setHeight(oracle, Math.max(oracle.heightForLine(len), minH) + add)\n    }\n    this.outdated = false\n    return this\n  }\n\n  toString() { return `line(${this.length}${this.deco.length ? \":\" + this.deco.join(\",\") : \"\"})` }\n\n  forEachLine(from: number, to: number, offset: number, oracle: HeightOracle, f: (height: LineHeight) => void) {\n    f(new LineHeight(offset, offset + this.length, 0, this.height, this))\n  }\n\n  get hasCollapsedRanges(): boolean {\n    for (let i = 1; i < this.deco.length; i += 2) if (this.deco[i] < 0) return true\n    return false\n  }\n}\n\nfunction offsetDeco(deco: number[], from: number, to: number, length: number): number[] {\n  let result: number[] | null = null\n  let off = length - (to - from)\n  for (let i = 0; i < deco.length; i += 2) {\n    let pos = deco[i]\n    if (Math.max(0, pos) < from || pos > to && off == 0) continue\n    if (!result) result = deco.slice(0, i)\n    if (pos > to) result.push(pos + off, deco[i + 1])\n  }\n  return !result ? deco : result.length ? result : noDeco\n}\n\nfunction insertDeco(deco: number[], newDeco: number[], pos: number): number[] {\n  if (newDeco.length == 0) return deco\n  let result = [], inserted = false\n  for (let i = 0;; i += 2) {\n    let next = i == deco.length ? 2e9 : deco[i]\n    if (!inserted && next > pos) {\n      for (let j = 0; j < newDeco.length; j += 2)\n        if (pos == 0 || newDeco[j] >= 0) result.push(newDeco[j] + pos, newDeco[j + 1])\n      inserted = true\n    }\n    if (next == 2e9) return result\n    result.push(next, deco[i + 1])\n  }\n}\n\nfunction lineWidgetHeight(deco: number[], type: -1 | -2) {\n  for (let i = 0; i < deco.length; i += 2) {\n    let pos = deco[i]\n    if (pos >= 0) break\n    if (pos == type) return deco[i + 1]\n  }\n  return 0\n}\n\nfunction setLineWidgetHeight(deco: number[], type: -1 | -2, height: number): number[] {\n  let i = 0\n  for (; i < deco.length; i += 2) {\n    let pos = deco[i]\n    if (pos > type) break\n    if (pos == type) {\n      deco[i + 1] = height\n      return deco\n    }\n  }\n  if (height > 0) deco.splice(i, 0, type, height)\n  return deco\n}\n\nclass HeightMapGap extends HeightMap {\n  constructor(from: number, to: number, oracle: HeightOracle) {\n    super(to - from, oracle.heightForGap(from, to), false)\n  }\n\n  get size(): number { return 1 }\n\n  heightAt(pos: number, doc: Text, bias: 1 | -1, offset: number = 0) {\n    let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number\n    let lines = lastLine - firstLine + 1\n    return (doc.lineAt(pos).number - firstLine + (bias > 0 ? 1 : 0)) * (this.height / lines)\n  }\n\n  lineAt(height: number, doc: Text, offset: number = 0) {\n    let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number\n    let lines = lastLine - firstLine, line = Math.floor(lines * Math.max(0, Math.min(1, height / this.height)))\n    let heightPerLine = this.height / (lines + 1), top = heightPerLine * line - height\n    let {start, end} = doc.line(firstLine + line)\n    return new LineHeight(start, end, top, heightPerLine, null)\n  }\n\n  lineViewport(pos: number, doc: Text, offset: number = 0): Viewport {\n    let {start, end} = doc.lineAt(pos + offset)\n    return new Viewport(start, end)\n  }\n\n  replace(from: number, to: number, nodes: HeightMap[], oracle: HeightOracle, newFrom: number, newTo: number): HeightMap {\n    if (nodes.length != 1 || !(nodes[0] instanceof HeightMapGap))\n      return super.replace(from, to, nodes, oracle, newFrom, newTo)\n    this.length += (newTo - newFrom) - (to - from)\n    let newStart = newFrom - from\n    // FIXME the Math.min is a kludge to deal with the fact that, if\n    // there are further changes that'll be applied by applyChanges,\n    // the estimated length here may extend past the end of the document\n    this.setHeight(oracle, oracle.heightForGap(newStart, Math.min(oracle.doc.length, newStart + this.length)))\n    return this\n  }\n\n  decomposeLeft(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newTo: number) {\n    let newOffset = newTo - to\n    if (node instanceof HeightMapGap) {\n      target.push(new HeightMapGap(newOffset, newTo + node.length, oracle))\n    } else {\n      let lineStart = oracle.doc.lineAt(newTo).start\n      if (lineStart > newOffset) target.push(new HeightMapGap(newOffset, lineStart - 1, oracle))\n      let deco = offsetDeco((node as HeightMapLine).deco, 0, 0, newTo - lineStart)\n      target.push(new HeightMapLine(newTo + node.length - lineStart, node.height, deco))\n    }\n  }\n\n  decomposeRight(from: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newFrom: number) {\n    let newEnd = newFrom + (this.length - from)\n    if (node instanceof HeightMapGap) {\n      target.push(new HeightMapGap(newFrom - node.length, newEnd, oracle))\n    } else {\n      let lineEnd = oracle.doc.lineAt(newFrom).end\n      target.push(new HeightMapLine(node.length + (lineEnd - newFrom), node.height, (node as HeightMapLine).deco))\n      if (newEnd > lineEnd) target.push(new HeightMapGap(lineEnd + 1, newEnd, oracle))\n    }\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights): HeightMap {\n    let end = offset + this.length\n    if (measured && measured.from <= offset + this.length && measured.more) {\n      let nodes = [], pos = Math.max(offset, measured.from)\n      if (measured.from > offset) nodes.push(new HeightMapGap(offset, measured.from - 1, oracle))\n      while (pos <= end && measured.more) {\n        let height = measured.heights[measured.index++], deco = undefined, wType!: -1 | -2\n        while (measured.more && (wType = measured.heights[measured.index] as (-1 | -2)) < 0) {\n          let wHeight = measured.heights[(measured.index += 2) - 1]\n          height += wHeight\n          deco = setLineWidgetHeight(deco || [], wType, wHeight)\n        }\n        let len = oracle.doc.lineAt(pos).length\n        nodes.push(new HeightMapLine(len, height, deco))\n        pos += len + 1\n      }\n      if (pos < end) nodes.push(new HeightMapGap(pos, end, oracle))\n      for (let node of nodes) node.outdated = false\n      oracle.heightChanged = true\n      return HeightMap.of(nodes)\n    } else if (force || this.outdated) {\n      this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length))\n      this.outdated = false\n    }\n    return this\n  }\n\n  toString() { return `gap(${this.length})` }\n\n  forEachLine(from: number, to: number, offset: number, oracle: HeightOracle, f: (height: LineHeight) => void) {\n    for (let pos = Math.max(from, offset), end = Math.min(to, offset + this.length); pos <= end;) {\n      let end = oracle.doc.lineAt(pos).end\n      f(new LineHeight(pos, end, 0, oracle.heightForLine(end - pos), null))\n      pos = end + 1\n    }\n  }\n}\n\nclass HeightMapBranch extends HeightMap {\n  size: number\n\n  constructor(public left: HeightMap, public right: HeightMap) {\n    super(left.length + 1 + right.length, left.height + right.height, left.outdated || right.outdated)\n    this.size = left.size + right.size\n  }\n\n  heightAt(pos: number, doc: Text, bias: 1 | -1, offset: number = 0): number {\n    let rightStart = offset + this.left.length + 1\n    return pos < rightStart ? this.left.heightAt(pos, doc, bias, offset)\n      : this.left.height + this.right.heightAt(pos, doc, bias, rightStart)\n  }\n\n  lineAt(height: number, doc: Text, offset: number = 0) {\n    let right = height - this.left.height\n    if (right < 0) return this.left.lineAt(height, doc, offset)\n    return this.right.lineAt(right, doc, offset + this.left.length + 1)\n  }\n\n  lineViewport(pos: number, doc: Text, offset: number = 0): Viewport {\n    let rightStart = this.left.length + 1\n    return pos < rightStart ? this.left.lineViewport(pos, doc, offset)\n      : this.right.lineViewport(pos - rightStart, doc, offset + rightStart)\n  }\n\n  replace(from: number, to: number, nodes: HeightMap[], oracle: HeightOracle, newFrom: number, newTo: number): HeightMap {\n    let rightStart = this.left.length + 1\n    if (to < rightStart)\n      return this.balanced(this.left.replace(from, to, nodes, oracle, newFrom, newTo), this.right)\n    else if (from >= rightStart)\n      return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes, oracle, newFrom, newTo))\n    else\n      return super.replace(from, to, nodes, oracle, newFrom, newTo)\n  }\n\n  decomposeLeft(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newTo: number) {\n    let rightStart = this.left.length + 1\n    if (to < rightStart) {\n      this.left.decomposeLeft(to, target, node, oracle, newTo)\n    } else {\n      target.push(this.left)\n      this.right.decomposeLeft(to - rightStart, target, node, oracle, newTo)\n    }\n  }\n\n  decomposeRight(from: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newFrom: number) {\n    let rightStart = this.left.length + 1\n    if (from < rightStart) {\n      this.left.decomposeRight(from, target, node, oracle, newFrom)\n      target.push(this.right)\n    } else {\n      this.right.decomposeRight(from - rightStart, target, node, oracle, newFrom)\n    }\n  }\n\n  balanced(left: HeightMap, right: HeightMap): HeightMap {\n    if (left.size > 2 * right.size || right.size > 2 * left.size) return HeightMap.of([left, right])\n    this.left = left; this.right = right\n    this.height = left.height + right.height\n    this.outdated = left.outdated || right.outdated\n    this.size = left.size + right.size\n    this.length = left.length + 1 + right.length\n    return this\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights): HeightMap {\n    let {left, right} = this, rightStart = offset + left.length + 1, rebalance: any = null\n    if (measured && measured.from <= offset + left.length && measured.more)\n      rebalance = left = left.updateHeight(oracle, offset, force, measured)\n    else\n      left.updateHeight(oracle, offset, force)\n    if (measured && measured.from <= rightStart + right.length && measured.more)\n      rebalance = right = right.updateHeight(oracle, rightStart, force, measured)\n    else\n      right.updateHeight(oracle, rightStart, force)\n    if (rebalance) return this.balanced(left, right)\n    this.height = this.left.height + this.right.height\n    this.outdated = false\n    return this\n  }\n\n  toString() { return this.left + \" \" + this.right }\n\n  forEachLine(from: number, to: number, offset: number, oracle: HeightOracle, f: (height: LineHeight) => void) {\n    let rightStart = offset + this.left.length + 1\n    if (from < rightStart) this.left.forEachLine(from, to, offset, oracle, f)\n    if (to >= rightStart) this.right.forEachLine(from, to, rightStart, oracle, f)\n  }\n}\n\nclass NodeBuilder implements RangeIterator<Decoration> {\n  nodes: HeightMap[] = []\n  writtenTo: number\n  lineStart: number = -1\n  lineEnd: number = -1\n  curLine: HeightMapLine | null = null\n\n  constructor(public pos: number, public oracle: HeightOracle) {\n    this.writtenTo = pos\n  }\n\n  advance(pos: number) {\n    if (pos <= this.pos) return\n    if (this.curLine) {\n      if (this.lineEnd < 0) this.lineEnd = this.oracle.doc.lineAt(this.pos).end\n      if (pos > this.lineEnd) {\n        this.curLine.length += (this.lineEnd - this.pos)\n        this.curLine.updateHeight(this.oracle, this.lineEnd - this.curLine.length)\n        this.curLine = null\n        this.writtenTo = this.lineEnd + 1\n        this.lineEnd = -1\n      } else {\n        this.curLine.length += (pos - this.pos)\n        this.writtenTo = pos\n      }\n    } else if (this.lineEnd > -1 && pos > this.lineEnd) {\n      this.lineEnd = -1\n    }\n    this.pos = pos\n  }\n\n  advanceCollapsed(pos: number, deco: Decoration) {\n    if (pos <= this.pos) return\n    if (deco.widget && deco.widget.estimatedHeight >= 0)\n      this.addDeco(deco.widget.estimatedHeight)\n    this.addDeco(this.pos - pos)\n    if (this.curLine) {\n      this.curLine.length += pos - this.pos\n      this.writtenTo = pos\n      if (this.lineEnd < pos) this.lineEnd = -1\n    }\n    this.pos = pos\n  }\n\n  point(deco: Decoration) {\n    this.addDeco(deco.widget!.estimatedHeight,\n                 deco instanceof LineDecoration ? (deco.side > 0 ? -1 : -2) : undefined)\n  }\n\n  flushTo(pos: number) {\n    if (pos > this.writtenTo) {\n      this.nodes.push(new HeightMapGap(this.writtenTo, pos, this.oracle))\n      this.writtenTo = pos\n    }\n  }\n\n  addDeco(val: number, lineWidget?: -1 | -2) {\n    if (!this.curLine) {\n      this.lineStart = Math.max(this.writtenTo, this.oracle.doc.lineAt(this.pos).start)\n      this.flushTo(this.lineStart - 1)\n      this.nodes.push(this.curLine = new HeightMapLine(this.pos - this.lineStart, 0, []))\n      this.writtenTo = this.pos\n    }\n    if (lineWidget == null)\n      this.curLine.deco.push(this.pos - this.lineStart, val)\n    else\n      setLineWidgetHeight(this.curLine.deco, lineWidget, val + lineWidgetHeight(this.curLine.deco, lineWidget))\n  }\n\n  ignoreRange(value: Decoration) { return !(value as RangeDecoration).collapsed }\n  ignorePoint(value: Decoration) { return !(value.widget && value.widget.estimatedHeight > 0) }\n}\n\nfunction buildChangedNodes(oracle: HeightOracle, decorations: ReadonlyArray<DecorationSet>, from: number, to: number): HeightMap[] {\n  let builder = new NodeBuilder(from, oracle)\n  RangeSet.iterateSpans(decorations, from, to, builder)\n  if (builder.curLine) builder.curLine.updateHeight(oracle, builder.pos - builder.curLine.length)\n  else builder.flushTo(builder.pos)\n  if (builder.nodes.length == 0) builder.nodes.push(new HeightMapGap(0, 0, oracle))\n  return builder.nodes\n}\n","import {ContentView, ChildCursor, dirty} from \"./contentview\"\nimport {LineView} from \"./lineview\"\nimport {InlineBuilder, LineContent} from \"./inlineview\"\nimport {Viewport, ViewportState} from \"./viewport\"\nimport {Text} from \"../../doc/src\"\nimport {DOMObserver} from \"./domobserver\"\nimport {EditorState, EditorSelection, Transaction, ChangeSet, ChangedRange} from \"../../state/src\"\nimport {HeightMap, HeightOracle, MeasuredHeights, LineHeight} from \"./heightmap\"\nimport {Decoration, DecorationSet, joinRanges, findChangedRanges, heightRelevantDecorations} from \"./decoration\"\nimport {getRoot, clientRectsFor, isEquivalentPosition, scrollRectIntoView} from \"./dom\"\n\ntype A<T> = ReadonlyArray<T>\n\nexport class DocView extends ContentView {\n  children: ContentView[] = [new LineView(this)]\n  visiblePart: Viewport = Viewport.empty\n  viewports: Viewport[] = []\n  publicViewport: EditorViewport\n\n  text: Text = Text.of([\"\"])\n  decorations: A<DecorationSet> = []\n  selection: EditorSelection = EditorSelection.default\n  drawnSelection: DOMSelection = new DOMSelection\n  selectionDirty: any = null\n\n  observer: DOMObserver\n\n  viewportState: ViewportState\n  heightMap: HeightMap = HeightMap.empty()\n  heightOracle: HeightOracle = new HeightOracle\n  computingViewport = false\n\n  layoutCheckScheduled: number = -1\n  // A document position that has to be scrolled into view at the next layout check\n  scrollIntoView: number = -1\n\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n\n  dom!: HTMLElement\n\n  get length() { return this.text.length }\n\n  get childGap() { return 1 }\n\n  constructor(dom: HTMLElement, private callbacks: {\n    // FIXME These suggest that the strict separation between docview and editorview isn't really working\n    onDOMChange: (from: number, to: number, typeOver: boolean) => void,\n    onSelectionChange: () => void,\n    onUpdateState: (prevState: EditorState, transactions: Transaction[]) => void,\n    onUpdateDOM: () => void,\n    onUpdateViewport: () => void,\n    getDecorations: () => DecorationSet[]\n  }) {\n    super(null, dom)\n    this.dirty = dirty.node\n\n    this.viewportState = new ViewportState\n    this.observer = new DOMObserver(this, callbacks.onDOMChange, callbacks.onSelectionChange, () => this.checkLayout())\n    this.publicViewport = new EditorViewport(this, 0, 0)\n  }\n\n  // Update the document view to a given state. scrollIntoView can be\n  // used as a hint to compute a new viewport that includes that\n  // position, if we know the editor is going to scroll that position\n  // into view.\n  update(state: EditorState, prevState: EditorState | null = null, transactions: Transaction[] = [], scrollIntoView: number = -1) {\n    // FIXME need some way to stabilize viewport—if a change causes the\n    // top of the visible viewport to move, scroll position should be\n    // adjusted to keep the content in place\n    let oldLength = this.text.length\n    this.text = state.doc\n    this.selection = state.selection\n\n    let changedRanges = !prevState\n      ? [new ChangedRange(0, oldLength, 0, state.doc.length)]\n      : (transactions.length == 1 ? transactions[0].changes :\n         transactions.reduce((changes: ChangeSet, tr: Transaction) => changes.appendSet(tr.changes), ChangeSet.empty)).changedRanges()\n    this.heightMap = this.heightMap.applyChanges([], this.heightOracle.setDoc(state.doc), changedRanges)\n\n    let {viewport, contentChanges} = this.computeViewport(changedRanges, prevState, transactions, 0, scrollIntoView)\n    if (this.dirty == dirty.not && contentChanges.length == 0 &&\n        this.selection.primary.from >= this.visiblePart.from &&\n        this.selection.primary.to <= this.visiblePart.to) {\n      this.observer.withoutSelectionListening(() => this.updateSelection())\n      if (scrollIntoView > -1) this.scrollPosIntoView(scrollIntoView)\n    } else {\n      this.updateInner(contentChanges, oldLength, viewport)\n      this.cancelLayoutCheck()\n      this.callbacks.onUpdateDOM()\n      if (scrollIntoView > -1) this.scrollIntoView = scrollIntoView\n      this.layoutCheckScheduled = requestAnimationFrame(() => this.checkLayout())\n    }\n  }\n\n  // Used both by update and checkLayout do perform the actual DOM\n  // update\n  private updateInner(changes: A<ChangedRange>, oldLength: number, visible: Viewport) {\n    this.visiblePart = visible\n    let viewports: Viewport[] = [visible]\n    let {head, anchor} = this.selection.primary\n    if (head < visible.from || head > visible.to)\n      viewports.push(this.heightMap.lineViewport(head, this.text))\n    if (!viewports.some(({from, to}) => anchor >= from && anchor <= to))\n      viewports.push(this.heightMap.lineViewport(anchor, this.text))\n    viewports.sort((a, b) => a.from - b.from)\n    let matchingRanges = findMatchingRanges(viewports, this.viewports, changes)\n\n    let decoSets = this.decorations.filter(d => d.size > 0)\n\n    let cursor = new ChildCursor(this.children, oldLength, 1)\n    let posB = this.text.length\n    for (let i = viewports.length - 1;; i--) {\n      let endI = cursor.i\n      cursor.findPos(i < 0 ? 0 : matchingRanges[i].to + 1)\n      let gap: GapView | null = null\n      if (cursor.i < endI) {\n        let nextChild = this.children[cursor.i]\n        if (nextChild instanceof GapView) gap = nextChild\n      }\n      let nextB = i < 0 ? 0 : viewports[i].to + 1\n      if (posB >= nextB) {\n        if (!gap || endI - cursor.i != 1) {\n          if (!gap) gap = new GapView(this)\n          this.replaceChildren(cursor.i, endI, [gap])\n        }\n        gap.update(posB - nextB, this.heightAt(posB, 1) - this.heightAt(nextB, -1))\n      } else if (endI != cursor.i) {\n        this.replaceChildren(cursor.i, endI)\n      }\n\n      if (i < 0) break\n\n      let viewport = viewports[i], matching = matchingRanges[i]\n      endI = cursor.i\n      if (matching.from == matching.to) {\n        this.replaceChildren(cursor.i, endI, [new LineView(this)])\n        endI = cursor.i + 1\n      } else {\n        cursor.findPos(matching.from)\n      }\n      this.updatePart(cursor.i, endI, matching, viewport, changes, decoSets)\n      posB = viewport.from - 1\n    }\n\n    this.viewports = viewports\n    this.observer.withoutListening(() => {\n      // Lock the height during redrawing, since Chrome sometimes\n      // messes with the scroll position during DOM mutation (though\n      // no relayout is triggered and I cannot imagine how it can\n      // recompute the scroll position without a layout)\n      this.dom.style.height = this.heightMap.height + \"px\"\n      this.sync()\n      this.updateSelection()\n      this.dom.style.height = \"\"\n    })\n  }\n\n  // Update a single viewport in the DOM\n  private updatePart(startI: number, endI: number, oldPort: Viewport, newPort: Viewport,\n                     changes: A<ChangedRange>, decoSets: A<DecorationSet>) {\n    let plan = clipPlan(changes, oldPort, newPort)\n    let cur = new ChildCursor(this.children, oldPort.to, 1, endI)\n    for (let i = plan.length - 1; i >= 0; i--) {\n      let {fromA, toA, fromB, toB} = plan[i]\n      let {i: toI, off: toOff} = cur.findPos(toA)\n      let {i: fromI, off: fromOff} = cur.findPos(fromA)\n      this.updatePartRange(fromI, fromOff, toI, toOff, InlineBuilder.build(this.text, fromB, toB, decoSets))\n    }\n  }\n\n  // Update a single changed range by replacing its old DOM\n  // representation with the inline views that represent the new\n  // content.\n  private updatePartRange(fromI: number, fromOff: number, toI: number, toOff: number, lines: LineContent[]) {\n    // All children in the touched range should be line views\n    let children = this.children as LineView[]\n    if (lines.length == 1) {\n      if (fromI == toI) { // Change within single line\n        children[fromI].update(fromOff, toOff, lines[0])\n      } else { // Join lines\n        let tail = children[toI].detachTail(toOff)\n        children[fromI].update(fromOff, undefined, lines[0], tail)\n        this.replaceChildren(fromI + 1, toI + 1)\n      }\n    } else { // Across lines\n      let tail = children[toI].detachTail(toOff)\n      children[fromI].update(fromOff, undefined, lines[0])\n      let insert = []\n      for (let j = 1; j < lines.length; j++)\n        insert.push(new LineView(this, lines[j], j < lines.length - 1 ? undefined : tail))\n      this.replaceChildren(fromI + 1, toI + 1, insert)\n    }\n  }\n\n  // Sync the DOM selection to this.selection\n  updateSelection(takeFocus: boolean = false) {\n    this.clearSelectionDirty()\n    let root = getRoot(this.dom)\n    if (!takeFocus && root.activeElement != this.dom) return\n\n    let primary = this.selection.primary\n    let anchor = this.domFromPos(primary.anchor)!\n    let head = this.domFromPos(primary.head)!\n\n    let domSel = root.getSelection()!\n    // If the selection is already here, or in an equivalent position, don't touch it\n    if (isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n      this.drawnSelection.set(domSel)\n      return\n    }\n\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    if (domSel.extend) {\n      domSel.collapse(anchor.node, anchor.offset)\n      if (!primary.empty) domSel.extend(head.node, head.offset)\n    } else {\n      let range = document.createRange()\n      if (primary.anchor > primary.head) [anchor, head] = [head, anchor]\n      range.setEnd(head.node, head.offset)\n      range.setStart(anchor.node, anchor.offset)\n      domSel.removeAllRanges()\n      domSel.addRange(range)\n    }\n    this.drawnSelection.set(domSel)\n  }\n\n  heightAt(pos: number, bias: 1 | -1) {\n    return this.heightMap.heightAt(pos, this.text, bias) + this.paddingTop\n  }\n\n  lineAtHeight(height: number): LineHeight {\n    return this.heightMap.lineAt(height - this.paddingTop, this.text)\n  }\n\n  // Compute the new viewport and set of decorations, while giving\n  // plugin views the opportunity to respond to state and viewport\n  // changes. Might require more than one iteration to become stable.\n  computeViewport(contentChanges: A<ChangedRange> = [], prevState: EditorState | null, transactions: Transaction[] | null,\n                  bias: number, scrollIntoView: number): {\n    // Passing transactions != null means at least one iteration is necessary\n    viewport: Viewport,\n    contentChanges: A<ChangedRange>\n  } {\n    try {\n      this.computingViewport = true\n      return this.computeViewportInner(contentChanges, prevState, transactions, bias, scrollIntoView)\n    } finally {\n      this.computingViewport = false\n    }\n  }\n\n  computeViewportInner(contentChanges: A<ChangedRange> = [], prevState: EditorState | null, transactions: Transaction[] | null,\n                       bias: number, scrollIntoView: number): {\n    // Passing transactions != null means at least one iteration is necessary\n    viewport: Viewport,\n    contentChanges: A<ChangedRange>\n  } {\n    for (let i = 0;; i++) {\n      let viewport = this.viewportState.getViewport(this.text, this.heightMap, bias, scrollIntoView)\n      let stateChange = transactions && transactions.length > 0\n      // After 5 tries, or when the viewport is stable and no more iterations are needed, return\n      if (i == 5 || (transactions == null && viewport.from == this.publicViewport._from && viewport.to == this.publicViewport._to)) {\n        if (i == 5) console.warn(\"Viewport and decorations failed to converge\")\n        return {viewport, contentChanges}\n      }\n      // Update the public viewport so that plugins can observe its current value\n      ;({from: this.publicViewport._from, to: this.publicViewport._to} = viewport)\n      let prevDoc = this.text\n      if (stateChange) {\n        // For a state change, call `updateState`\n        this.callbacks.onUpdateState(prevState!, transactions!)\n        prevDoc = prevState!.doc\n      } else {\n        // Otherwise call `updateViewport`\n        this.callbacks.onUpdateViewport()\n      }\n      let decorations = this.callbacks.getDecorations()\n      // If the decorations are stable, stop.\n      if (!stateChange && sameArray(decorations, this.decorations))\n        return {viewport, contentChanges}\n      // Compare the decorations (between document changes)\n      let {content, height} = decoChanges(stateChange ? contentChanges : [], decorations, this.decorations, prevDoc)\n      this.decorations = decorations\n      // Update the heightmap with these changes. If this is the first\n      // iteration and the document changed, also include decorations\n      // for inserted ranges.\n      let heightChanges = extendWithRanges([], height)\n      if (stateChange) heightChanges = extendWithRanges(heightChanges, heightRelevantDecorations(decorations, contentChanges))\n      this.heightMap = this.heightMap.applyChanges(decorations, this.heightOracle, heightChanges)\n      // Accumulate content changes so that they can be redrawn\n      contentChanges = extendWithRanges(contentChanges, content)\n      // Make sure only one iteration is marked as required / state changing\n      transactions = null\n    }\n  }\n\n  focus() {\n    this.observer.withoutSelectionListening(() => this.updateSelection(true))\n  }\n\n  cancelLayoutCheck() {\n    if (this.layoutCheckScheduled > -1) {\n      cancelAnimationFrame(this.layoutCheckScheduled)\n      this.layoutCheckScheduled = -1\n    }\n  }\n\n  forceLayout() {\n    if (this.layoutCheckScheduled > -1 && !this.computingViewport) this.checkLayout()\n  }\n\n  checkLayout(forceFull = false) {\n    this.cancelLayoutCheck()\n    this.measureVerticalPadding()\n    let scrollIntoView = Math.min(this.scrollIntoView, this.text.length)\n    this.scrollIntoView = -1\n    let scrollBias = 0\n    if (forceFull) this.viewportState.coverEverything()\n    else scrollBias = this.viewportState.updateFromDOM(this.dom, this.paddingTop)\n    if (this.viewportState.top >= this.viewportState.bottom) return // We're invisible!\n\n    let lineHeights: number[] | null = this.measureVisibleLineHeights(), refresh = false\n    if (this.heightOracle.mustRefresh(lineHeights)) {\n      let {lineHeight, charWidth} = this.measureTextSize()\n      refresh = this.heightOracle.refresh(getComputedStyle(this.dom).whiteSpace!,\n                                          lineHeight, charWidth, (this.dom).clientWidth / charWidth, lineHeights)\n    }\n\n    if (scrollIntoView > -1) this.scrollPosIntoView(scrollIntoView)\n\n    let updated = false\n    for (let i = 0;; i++) {\n      this.heightOracle.heightChanged = false\n      this.heightMap = this.heightMap.updateHeight(\n        this.heightOracle, 0, refresh, new MeasuredHeights(this.visiblePart.from, lineHeights || this.measureVisibleLineHeights()))\n      let covered = this.viewportState.coveredBy(this.text, this.visiblePart, this.heightMap, scrollBias)\n      if (covered && !this.heightOracle.heightChanged) break\n      updated = true\n      if (i > 10) throw new Error(\"Layout failed to converge\")\n      let viewport = this.visiblePart, contentChanges: A<ChangedRange> = []\n      if (!covered) ({viewport, contentChanges} = this.computeViewport([], null, null, scrollBias, -1))\n      this.updateInner(contentChanges, this.text.length, viewport)\n      lineHeights = null\n      refresh = false\n      scrollBias = 0\n      this.viewportState.updateFromDOM(this.dom, this.paddingTop)\n    }\n    if (updated) {\n      this.observer.listenForScroll()\n      this.callbacks.onUpdateDOM()\n    }\n  }\n\n  scrollPosIntoView(pos: number) {\n    let rect = this.coordsAt(pos)\n    if (rect) scrollRectIntoView(this.dom, rect)\n  }\n\n  nearest(dom: Node): ContentView | null {\n    for (let cur: Node | null = dom; cur;) {\n      let domView = cur.cmView\n      if (domView) {\n        for (let v: ContentView | null = domView; v; v = v.parent)\n          if (v == this) return domView\n      }\n      cur = cur.parentNode\n    }\n    return null\n  }\n\n  posFromDOM(node: Node, offset: number): number {\n    let view = this.nearest(node)\n    if (!view) throw new RangeError(\"Trying to find position for a DOM position outside of the document\")\n    return view.localPosFromDOM(node, offset) + view.posAtStart\n  }\n\n  domFromPos(pos: number): {node: Node, offset: number} | null {\n    let {i, off} = new ChildCursor(this.children, this.text.length, 1).findPos(pos)\n    return this.children[i].domFromPos(off)\n  }\n\n  measureVisibleLineHeights() {\n    let result = [], {from, to} = this.visiblePart\n    for (let pos = 0, i = 0; pos <= to; i++) {\n      let child = this.children[i] as LineView\n      if (pos >= from) {\n        result.push(child.dom.getBoundingClientRect().height)\n        let before = 0, after = 0\n        for (let w of child.widgets) {\n          let h = w.dom!.getBoundingClientRect().height\n          if (w.side > 0) after += h\n          else before += h\n        }\n        if (before) result.push(-2, before)\n        if (after) result.push(-1, after)\n      }\n      pos += child.length + 1\n    }\n    return result\n  }\n\n  measureVerticalPadding() {\n    let style = window.getComputedStyle(this.dom)\n    this.paddingTop = parseInt(style.paddingTop!) || 0\n    this.paddingBottom = parseInt(style.paddingBottom!) || 0\n  }\n\n  measureTextSize(): {lineHeight: number, charWidth: number} {\n    for (let child of this.children) {\n      if (child instanceof LineView) {\n        let measure = child.measureTextSize()\n        if (measure) return measure\n      }\n    }\n    // If no workable line exists, force a layout of a measurable element\n    let dummy = document.createElement(\"div\"), lineHeight!: number, charWidth!: number\n    dummy.style.cssText = \"contain: strict\"\n    dummy.textContent = \"abc def ghi jkl mno pqr stu\"\n    this.observer.withoutListening(() => {\n      this.dom.appendChild(dummy)\n      let rect = clientRectsFor(dummy.firstChild!)[0]\n      lineHeight = dummy.getBoundingClientRect().height\n      charWidth = rect ? rect.width / 27 : 7\n      dummy.remove()\n    })\n    return {lineHeight, charWidth}\n  }\n\n  destroy() {\n    cancelAnimationFrame(this.layoutCheckScheduled)\n    this.observer.destroy()\n  }\n\n  clearSelectionDirty() {\n    if (this.selectionDirty != null) {\n      cancelAnimationFrame(this.selectionDirty)\n      this.selectionDirty = null\n    }\n  }\n\n  setSelectionDirty() {\n    if (this.selectionDirty == null)\n      this.selectionDirty = requestAnimationFrame(() => this.updateSelection())\n  }\n}\n\nconst noChildren: ContentView[] = []\n\nclass DOMSelection {\n  anchorNode: Node | null = null\n  anchorOffset: number = 0\n  focusNode: Node | null = null\n  focusOffset: number = 0\n\n  eq(domSel: Selection): boolean {\n    return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n      this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset\n  }\n\n  set(domSel: Selection) {\n    this.anchorNode = domSel.anchorNode; this.anchorOffset = domSel.anchorOffset\n    this.focusNode = domSel.focusNode; this.focusOffset = domSel.focusOffset\n  }\n}\n\n// Browsers appear to reserve a fixed amount of bits for height\n// styles, and ignore or clip heights above that. For Chrome and\n// Firefox, this is in the 20 million range, so we try to stay below\n// that.\nconst MAX_NODE_HEIGHT = 1e7\n\nclass GapView extends ContentView {\n  length: number = 0\n  height: number = 0\n  dom!: HTMLElement\n\n  constructor(parent: ContentView) {\n    super(parent, document.createElement(\"div\"))\n    this.dom.contentEditable = \"false\"\n  }\n\n  get children() { return noChildren }\n\n  update(length: number, height: number) {\n    this.length = length\n    if (height != this.height) {\n      this.height = height\n      this.markDirty()\n    }\n  }\n\n  sync() {\n    if (this.dirty) {\n      if (this.height < MAX_NODE_HEIGHT) {\n        this.dom.style.height = this.height + \"px\"\n        while (this.dom.firstChild) (this.dom.firstChild as HTMLElement).remove()\n      } else {\n        this.dom.style.height = \"\"\n        while (this.dom.firstChild) (this.dom.firstChild as HTMLElement).remove()\n        for (let remaining = this.height; remaining > 0; remaining -= MAX_NODE_HEIGHT) {\n          let elt = this.dom.appendChild(document.createElement(\"div\"))\n          elt.style.height = Math.min(remaining, MAX_NODE_HEIGHT) + \"px\"\n        }\n      }\n      this.dirty = dirty.not\n    }\n  }\n\n  get overrideDOMText() {\n    return this.parent ? (this.parent as DocView).text.sliceLines(this.posAtStart, this.posAtEnd) : [\"\"]\n  }\n\n  domBoundsAround() { return null }\n}\n\nfunction decoChanges(diff: A<ChangedRange>, decorations: A<DecorationSet>,\n                     oldDecorations: A<DecorationSet>, oldDoc: Text): {content: number[], height: number[]} {\n  let contentRanges: number[] = [], heightRanges: number[] = []\n  for (let i = decorations.length - 1; i >= 0; i--) {\n    let deco = decorations[i], oldDeco = i < oldDecorations.length ? oldDecorations[i] : Decoration.none\n    if (deco.size == 0 && oldDeco.size == 0) continue\n    let newRanges = findChangedRanges(oldDeco, deco, diff, oldDoc)\n    contentRanges = joinRanges(contentRanges, newRanges.content)\n    heightRanges = joinRanges(heightRanges, newRanges.height)\n  }\n  return {content: contentRanges, height: heightRanges}\n}\n\nfunction extendWithRanges(diff: A<ChangedRange>, ranges: number[]): A<ChangedRange> {\n  let result: ChangedRange[] = []\n  for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n    let next = dI == diff.length ? null : diff[dI], off = posA - posB\n    let end = next ? next.fromB : 2e9\n    while (rI < ranges.length && ranges[rI] < end) {\n      let from = ranges[rI], to = ranges[rI + 1]\n      let fromB = Math.max(posB, from), toB = Math.min(end, to)\n      if (fromB <= toB) new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result)\n      if (to > end) break\n      else rI += 2\n    }\n    if (!next) return result\n    new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result)\n    posA = next.toA; posB = next.toB\n  }\n}\n\nfunction sameArray<T>(a: A<T>, b: A<T>) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (a[i] !== b[i]) return false\n  return true\n}\n\nfunction boundAfter(viewport: Viewport, pos: number): number {\n  return pos < viewport.from ? viewport.from : pos < viewport.to ? viewport.to : 2e9 + 1\n}\n \n// Transforms a plan to take viewports into account. Discards changes\n// (or part of changes) that are outside of the viewport, and adds\n// ranges for text that was in one viewport but not the other (so that\n// old text is cleared out and newly visible text is drawn).\nfunction clipPlan(plan: A<ChangedRange>, viewportA: Viewport, viewportB: Viewport): A<ChangedRange> {\n  let result: ChangedRange[] = []\n  let posA = 0, posB = 0\n  for (let i = 0;; i++) {\n    let range = i < plan.length ? plan[i] : null\n    // Look at the unchanged range before the next range (or the end\n    // if there is no next range), divide it by viewport boundaries,\n    // and for each piece, if it is only in one viewport, add a\n    // changed range.\n    let nextA = range ? range.fromA : 2e9, nextB = range ? range.fromB : 2e9\n    while (posA < nextA) {\n      let advance = Math.min(Math.min(boundAfter(viewportA, posA), nextA) - posA,\n                             Math.min(boundAfter(viewportB, posB), nextB) - posB)\n      if (advance == 0) break\n      let endA = posA + advance, endB = posB + advance\n      if ((posA >= viewportA.to || endA <= viewportA.from) != (posB >= viewportB.to || endB <= viewportB.from))\n        new ChangedRange(viewportA.clip(posA), viewportA.clip(endA),\n                         viewportB.clip(posB), viewportB.clip(endB)).addToSet(result)\n      posA = endA; posB = endB\n    }\n\n    if (!range || (range.fromA > viewportA.to && range.fromB > viewportB.to)) break\n\n    // Clip existing ranges to the viewports\n    if ((range.toA >= viewportA.from && range.fromA <= viewportA.to) ||\n        (range.toB >= viewportB.from && range.fromB <= viewportB.to))\n      new ChangedRange(viewportA.clip(range.fromA), viewportA.clip(range.toA),\n                       viewportB.clip(range.fromB), viewportB.clip(range.toB)).addToSet(result)\n\n    posA = range.toA; posB = range.toB\n  }\n\n  return result\n}\n\nfunction mapThroughChanges(pos: number, bias: number, changes: A<ChangedRange>): number {\n  let off = 0\n  for (let range of changes) {\n    if (pos < range.fromA) return pos + off\n    if (pos <= range.toA) return bias < 0 ? range.fromA : range.toA\n    off = range.toB - range.toA\n  }\n  return pos + off\n}\n\nfunction findMatchingRanges(viewports: A<Viewport>, prevViewports: A<Viewport>, changes: A<ChangedRange>): Viewport[] {\n  let prevI = 0, result: Viewport[] = []\n  outer: for (let viewport of viewports) {\n    for (let j = prevI; j < prevViewports.length; j++) {\n      let prev = prevViewports[j]\n      if (mapThroughChanges(prev.from, 1, changes) < viewport.to &&\n          mapThroughChanges(prev.to, -1, changes) > viewport.from) {\n        result.push(prev)\n        prevI = j + 1\n        continue outer\n      }\n    }\n    let at = result.length ? result[result.length - 1].to : 0\n    result.push(new Viewport(at, at))\n  }\n  return result\n}\n\n// Public shim for giving client code access to viewport information\nexport class EditorViewport {\n  /** @internal */\n  constructor(private docView: DocView, public _from: number, public _to: number) {}\n\n  get from() { return this._from }\n  get to() { return this._to }\n\n  forEachLine(f: (height: LineHeight) => void) {\n    this.docView.heightMap.forEachLine(this.from, this.to, 0, this.docView.heightOracle, f)\n  }\n}\n","import {EditorView} from \"./editorview\"\nimport {LineView} from \"./lineview\"\nimport {InlineView, TextView, WidgetView} from \"./inlineview\"\nimport {Text as Doc, findColumn, countColumn, isExtendingChar} from \"../../doc/src\"\nimport {SelectionRange} from \"../../state/src\"\nimport {getRoot, isEquivalentPosition, clientRectsFor} from \"./dom\"\nimport browser from \"./browser\"\n\ndeclare global {\n  interface Selection { modify(action: string, direction: string, granularity: string): void }\n  interface Document { caretPositionFromPoint(x: number, y: number): {offsetNode: Node, offset: number} }\n}\n\n// FIXME rename \"word\" to something more descriptive of what it actually does?\nexport function movePos(view: EditorView, start: number,\n                        direction: \"forward\" | \"backward\" | \"left\" | \"right\",\n                        granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\" = \"character\",\n                        action: \"move\" | \"extend\"): number {\n  let sel = getRoot(view.contentDOM).getSelection()!\n  let context = LineContext.get(view, start)\n  let dir: 1 | -1 = direction == \"forward\" || direction == \"right\" ? 1 : -1\n  // Can only query native behavior when Selection.modify is\n  // supported, the cursor is well inside the rendered viewport, and\n  // we're not doing by-line motion on Gecko (which will mess up goal\n  // column motion)\n  if (sel.modify && context && !context.nearViewportEnd(view) && view.hasFocus() &&\n      granularity != \"word\" &&\n      !(granularity == \"line\" && (browser.gecko || view.state.selection.ranges.length > 1))) {\n    return view.docView.observer.withoutSelectionListening(() => {\n      let prepared = context!.prepareForQuery(view, start)\n      let startDOM = view.docView.domFromPos(start)!\n      let equiv = (!browser.chrome || prepared.lines.length == 0) &&\n        isEquivalentPosition(startDOM.node, startDOM.offset, sel.focusNode, sel.focusOffset) && false\n      // Firefox skips an extra character ahead when extending across\n      // an uneditable element (but not when moving)\n      if (prepared.atWidget && browser.gecko && action == \"extend\") action = \"move\"\n      if (action == \"move\" && !(equiv && sel.isCollapsed)) sel.collapse(startDOM.node, startDOM.offset)\n      else if (action == \"extend\" && !equiv) sel.extend(startDOM.node, startDOM.offset)\n      sel.modify(action, direction, granularity)\n      view.docView.setSelectionDirty()\n      let result = view.docView.posFromDOM(sel.focusNode, sel.focusOffset)\n      context!.undoQueryPreparation(view, prepared)\n      return result\n    })\n  } else if (granularity == \"character\") {\n    return moveCharacterSimple(start, dir, context, view.state.doc)\n  } else if (granularity == \"lineboundary\") {\n    if (context) return context.start + (dir < 0 ? 0 : context.line.length)\n    let line = view.state.doc.lineAt(start)\n    return dir < 0 ? line.start : line.end\n  } else if (granularity == \"line\") {\n    if (context && !context.nearViewportEnd(view, dir)) {\n      let startCoords = view.docView.coordsAt(start)!\n      let goal = getGoalColumn(view, start, startCoords.left)\n      for (let startY = dir < 0 ? startCoords.top : startCoords.bottom, dist = 5; dist < 50; dist += 10) {\n        let pos = posAtCoords(view, {x: goal.column, y: startY + dist * dir}, dir)\n        if (pos < 0) break\n        if (pos != start) {\n          goal.pos = pos\n          return pos\n        }\n      }\n    }\n    // Can't do a precise one based on DOM positions, fall back to per-column\n    return moveLineByColumn(view.state.doc, view.state.tabSize, start, dir)\n  } else if (granularity == \"word\") {\n    return moveWord(view, start, direction)\n  } else {\n    throw new RangeError(\"Invalid move granularity: \" + granularity)\n  }\n}\n\nfunction moveLineByColumn(doc: Doc, tabSize: number, pos: number, dir: -1 | 1): number {\n  let line = doc.lineAt(pos)\n  // FIXME also needs goal column?\n  let col = 0\n  for (const iter = doc.iterRange(line.start, pos); !iter.next().done;)\n    col = countColumn(iter.value, col, tabSize)\n  if (dir < 0 && line.start == 0) return 0\n  else if (dir > 0 && line.end == doc.length) return line.end\n  let otherLine = doc.line(line.number + dir)\n  let result = otherLine.start\n  let seen = 0\n  for (const iter = doc.iterRange(otherLine.start, otherLine.end); seen >= col && !iter.next().done;) {\n    const {offset, leftOver} = findColumn(iter.value, seen, col, tabSize)\n    seen = col - leftOver\n    result += offset\n  }\n  return result\n}\n\nfunction moveCharacterSimple(start: number, dir: 1 | -1, context: LineContext | null, doc: Doc): number {\n  if (context == null) {\n    for (let pos = start;; pos += dir) {\n      if (pos == 0 || pos == doc.length) return pos\n      if (!isExtendingChar((dir < 0 ? doc.slice(pos - 1, pos) : doc.slice(pos, pos + 1)))) {\n        if (dir < 0) return pos - 1\n        else if (pos != start) return pos\n      }\n    }\n  }\n  for (let {i, off} = context.line.childPos(start - context.start), {children} = context.line, pos = start;;) {\n    if (off == (dir < 0 || i == children.length ? 0 : children[i].length)) {\n      i += dir\n      if (i < 0 || i >= children.length) // End/start of line\n        return Math.max(0, Math.min(doc.length, pos + (start == pos ? dir : 0)))\n      off = dir < 0 ? children[i].length : 0\n    }\n    let inline = children[i]\n    if (inline instanceof TextView) {\n      if (!isExtendingChar(inline.text.charAt(off - (dir < 0 ? 1 : 0)))) {\n        if (dir < 0) return pos - 1\n        else if (pos != start) return pos\n      }\n      off += dir; pos += dir\n    } else if (inline.length > 0) {\n      return pos - off + (dir < 0 ? 0 : inline.length)\n    }\n  }\n}\n\nfunction moveWord(view: EditorView, start: number, direction: \"forward\" | \"backward\" | \"left\" | \"right\") {\n  let {doc} = view.state\n  for (let pos = start, i = 0;; i++) {\n    let next = movePos(view, pos, direction, \"character\", \"move\")\n    if (next == pos) return pos // End of document\n    if (doc.sliceLines(Math.min(next, pos), Math.max(next, pos)).length > 1) return next // Crossed a line boundary\n    let group = SelectionRange.groupAt(view.state, next, next > pos ? -1 : 1)\n    let away = pos < group.from && pos > group.to\n    // If the group is away from its start position, we jumped over a\n    // bidi boundary, and should take the side closest (in index\n    // coordinates) to the start position\n    let start = away ? pos < group.head : group.from == pos ? false : group.to == pos ? true : next < pos\n    pos = start ? group.from : group.to\n    if (i > 0 || /\\S/.test(doc.slice(group.from, group.to))) return pos\n    next = Math.max(0, Math.min(doc.length, pos + (start ? -1 : 1)))\n  }\n}\n\nfunction getGoalColumn(view: EditorView, pos: number, column: number): {pos: number, column: number} {\n  for (let goal of view.inputState.goalColumns)\n    if (goal.pos == pos) return goal\n  let goal = {pos: 0, column}\n  view.inputState.goalColumns.push(goal)\n  return goal\n}\n\nexport class LineContext {\n  constructor(public line: LineView, public start: number, public index: number) {}\n\n  static get(view: EditorView, pos: number): LineContext | null {\n    for (let i = 0, off = 0;; i++) {\n      let line = view.docView.children[i], end = off + line.length\n      if (end >= pos)\n        return line instanceof LineView ? new LineContext(line, off, i) : null\n      off = end + 1\n    }\n  }\n\n\n  nearViewportEnd(view: EditorView, side: number = 0): boolean {\n    for (let {from, to} of view.docView.viewports)\n      if (from > 0 && from == this.start && side <= 0 ||\n          to < view.state.doc.length && to == this.start + this.line.length && side >= 0)\n        return true\n    return false\n  }\n\n  // FIXME limit the amount of work in character motion in non-bidi\n  // context? or not worth it?\n  prepareForQuery(view: EditorView, pos: number) {\n    // FIXME only call withoutListening when necessary?\n    return view.docView.observer.withoutListening(() => {\n      let linesToSync: LineView[] = [], atWidget = false\n      function maybeHide(view: InlineView) {\n        if (!(view instanceof TextView)) atWidget = true\n        if (view.length > 0) return false\n        ;(view.dom as any).remove()\n        if (linesToSync.indexOf(view.parent as LineView) < 0) linesToSync.push(view.parent as LineView)\n        return true\n      }\n      let {i, off} = this.line.childPos(pos - this.start)\n      if (off == 0) {\n        for (let j = i; j < this.line.children.length; j++) if (!maybeHide(this.line.children[j])) break\n        for (let j = i; j > 0; j--) if (!maybeHide(this.line.children[j - 1])) break\n      }\n      function addForLine(line: LineView, omit: number = -1) {\n        if (line.children.length == 0) return\n        for (let i = 0, off = 0; i <= line.children.length; i++) {\n          let next = i == line.children.length ? null : line.children[i]\n          if ((!next || !(next instanceof TextView)) && off != omit &&\n              (i == 0 || !(line.children[i - 1] instanceof TextView))) {\n            line.dom!.insertBefore(document.createTextNode(\"\\u200b\"), next ? next.dom : null)\n            if (linesToSync.indexOf(line) < 0) linesToSync.push(line)\n          }\n          if (next) off += next.length\n        }\n      }\n      if (this.index > 0)\n        addForLine(this.line.parent!.children[this.index - 1] as LineView)\n      addForLine(this.line, pos - this.start)\n      if (this.index < this.line.parent!.children.length - 1)\n        addForLine(this.line.parent!.children[this.index + 1] as LineView)\n      return {lines: linesToSync, atWidget}\n    })\n  }\n\n  undoQueryPreparation(view: EditorView, toSync: {lines: LineView[]}) {\n    if (toSync.lines.length) view.docView.observer.withoutListening(() => {\n      for (let line of toSync.lines) line.syncDOMChildren()\n    })\n  }\n}\n\n\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\n\n// FIXME holding arrow-up/down at the end of the viewport is a rather\n// common use case that will repeatedly trigger this code. Maybe\n// introduce some element of binary search after all?\n\nfunction domPosAtCoords(parent: HTMLElement, x: number, y: number): {node: Node, offset: number} {\n  let closest, dxClosest = 2e8, xClosest!: number, offset = 0\n  let rowBot = y, rowTop = y\n  for (let child: Node | null = parent.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects = clientRectsFor(child)\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i]\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot)\n        rowTop = Math.min(rect.top, rowTop)\n        let dx = rect.left > x ? rect.left - x\n            : rect.right < x ? x - rect.right : 0\n        if (dx < dxClosest) {\n          closest = child\n          dxClosest = dx\n          xClosest = dx == 0 ? x : rect.left > x ? rect.left : rect.right\n          if (child.nodeType == 1)\n            offset = childIndex + (x >= (rect.left + rect.right) / 2 ? 1 : 0)\n          continue\n        }\n      }\n      if (!closest && (x >= rect.right && y >= rect.top ||\n                       x >= rect.left && y >= rect.bottom))\n        offset = childIndex + 1\n    }\n  }\n  if (closest && closest.nodeType == 3)\n    return domPosInText(closest as Text, xClosest, y)\n  if (!closest || (closest as HTMLElement).contentEditable == \"false\" || (dxClosest && closest.nodeType == 1))\n    return {node: parent, offset}\n  return domPosAtCoords(closest as HTMLElement, xClosest, y)\n}\n\nfunction domPosInText(node: Text, x: number, y: number): {node: Node, offset: number} {\n  let len = node.nodeValue!.length, range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rects = range.getClientRects()\n    for (let j = 0; j < rects.length; j++) {\n      let rect = rects[j]\n      if (rect.top == rect.bottom) continue\n      if (rect.left - 1 <= x && rect.right + 1 >= x &&\n          rect.top - 1 <= y && rect.bottom + 1 >= y) {\n        let right = x >= (rect.left + rect.right) / 2, after = right\n        if (browser.chrome || browser.gecko) {\n          // Check for RTL on browsers that support getting client\n          // rects for empty ranges.\n          range.setEnd(node, i)\n          let rectBefore = range.getBoundingClientRect()\n          if (rectBefore.left == rect.right) after = !right\n        }\n        return {node, offset: i + (after ? 1 : 0)}\n      }\n    }\n  }\n  return {node, offset: 0}\n}\n\nexport function posAtCoords(view: EditorView, {x, y}: {x: number, y: number}, bias: -1 | 1 = -1): number {\n  let content = view.contentDOM.getBoundingClientRect(), heightLine\n  for (;;) {\n    heightLine = view.lineAtHeight(y - content.top)\n    if (heightLine.textTop > 0) {\n      if (bias > 0) y += heightLine.textTop + 1\n      else if (heightLine.start > 0) { y += heightLine.top - 1; continue }\n    } else if (heightLine.textBottom < 0) {\n      if (bias < 0) y += heightLine.textBottom - 1\n      else if (heightLine.end < view.state.doc.length) { y += heightLine.bottom + 1; continue }\n    }\n    break\n  }\n  let lineStart = heightLine.start\n  // If this is outside of the rendered viewport, we can't determine a position \n  if (lineStart < view.viewport.from)\n    return view.viewport.from == 0 ? 0 : -1\n  if (lineStart > view.viewport.to)\n    return view.viewport.to == view.state.doc.length ? view.state.doc.length : -1\n  // Clip x to the viewport sides\n  x = Math.max(content.left + 1, Math.min(content.right - 1, x))\n  let root = getRoot(view.contentDOM), element = root.elementFromPoint(x, y)\n\n  // There's visible editor content under the point, so we can try\n  // using caret(Position|Range)FromPoint as a shortcut\n  let node: Node | undefined, offset: number = -1\n  if (element && view.contentDOM.contains(element) && !(view.docView.nearest(element) instanceof WidgetView)) {\n    if (root.caretPositionFromPoint) {\n      let pos = root.caretPositionFromPoint(x, y)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } else if (root.caretRangeFromPoint) {\n      let range = root.caretRangeFromPoint(x, y)\n      if (range) ({startContainer: node, startOffset: offset} = range)\n    }\n  }\n\n  // No luck, do our own (potentially expensive) expensive search\n  if (!node) {\n    let {line} = LineContext.get(view, lineStart)!\n    ;({node, offset} = domPosAtCoords(line.dom, x, y))\n  }\n  return view.docView.posFromDOM(node, offset)\n}\n","import {MetaSlot, EditorSelection, SelectionRange, Transaction, ChangeSet} from \"../../state/src\"\nimport {EditorView} from \"./editorview\"\nimport browser from \"./browser\"\nimport {getRoot} from \"./dom\"\nimport {LineContext} from \"./cursor\"\n\n// This will also be where dragging info and such goes\nexport class InputState {\n  lastKeyCode: number = 0\n  lastKeyTime: number = 0\n  lastSelectionOrigin: string | null = null\n  lastSelectionTime: number = 0\n\n  registeredEvents: string[] = []\n  customHandlers: {[key: string]: ((view: EditorView, event: Event) => boolean)[]}\n\n  goalColumns: {pos: number, column: number}[] = []\n\n  mouseSelection: MouseSelection | null = null\n\n  setSelectionOrigin(origin: string) {\n    this.lastSelectionOrigin = origin\n    this.lastSelectionTime = Date.now()\n  }\n\n  constructor(view: EditorView) {\n    for (let type in handlers) {\n      let handler = handlers[type]\n      view.contentDOM.addEventListener(type, event => {\n        if (!eventBelongsToEditor(view, event)) return\n        if (this.runCustomHandlers(type, view, event)) event.preventDefault()\n        else handler(view, event)\n      })\n      this.registeredEvents.push(type)\n    }\n    // Must always run, even if a custom handler handled the event\n    view.contentDOM.addEventListener(\"keydown\", event => {\n      view.inputState.lastKeyCode = event.keyCode\n      view.inputState.lastKeyTime = Date.now()\n    })\n    if (document.activeElement == view.contentDOM) view.dom.classList.add(\"CodeMirror-focused\")\n\n    this.customHandlers = customHandlers(view)\n    for (let type in this.customHandlers) {\n      if (this.registeredEvents.indexOf(type) < 0) {\n        this.registeredEvents.push(type)\n        view.contentDOM.addEventListener(type, event => {\n          if (!eventBelongsToEditor(view, event)) return\n          if (this.runCustomHandlers(type, view, event)) event.preventDefault()\n        })\n      }\n    }\n  }\n\n  runCustomHandlers(type: string, view: EditorView, event: Event): boolean {\n    let handlers = this.customHandlers[type]\n    if (handlers) for (let handler of handlers)\n      if (handler(view, event) || event.defaultPrevented) return true\n    return false\n  }\n\n  startMouseSelection(view: EditorView, event: MouseEvent, update: MouseSelectionUpdate) {\n    if (this.mouseSelection) this.mouseSelection.destroy()\n    this.mouseSelection = new MouseSelection(this, view, event, update)\n  }\n\n  update(transactions: Transaction[]) {\n    if (this.mouseSelection) this.mouseSelection.map(transactions.reduce((set, tr) => set.appendSet(tr.changes), ChangeSet.empty))\n  }\n\n  destroy() {\n    if (this.mouseSelection) this.mouseSelection.destroy()\n  }    \n}\n\nconst enum Dragging {\n  MAYBE, // The click started in the selection, might turn into a drag\n  YES, NO\n}\n\nexport type MouseSelectionUpdate = (view: EditorView, startSelection: EditorSelection,\n                                    startPos: number, startBias: -1 | 1,\n                                    curPos: number, curBias: -1 | 1,\n                                    extend: boolean, multiple: boolean) => EditorSelection\n\nclass MouseSelection {\n  dragging: Dragging\n  startSelection: EditorSelection\n  startPos: number\n  startBias: -1 | 1\n  curPos: number\n  curBias: -1 | 1\n  extend: boolean\n  multiple: boolean\n\n  constructor(private inputState: InputState, private view: EditorView, event: MouseEvent, private update: MouseSelectionUpdate) {\n    let doc = view.contentDOM.ownerDocument!\n    doc.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    doc.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n\n    // FIXME make these configurable somehow\n    this.extend = event.shiftKey\n    this.multiple = view.state.multipleSelections && (browser.mac ? event.metaKey : event.ctrlKey)\n\n    this.startSelection = view.state.selection\n    let {pos, bias} = this.queryPos(event)\n    this.startPos = this.curPos = pos\n    this.startBias = this.curBias = bias\n    this.dragging = isInPrimarySelection(view, this.startPos, event) ? Dragging.MAYBE : Dragging.NO\n    // When clicking outside of the selection, immediately apply the\n    // effect of starting the selection\n    if (this.dragging == Dragging.NO) {\n      event.preventDefault()\n      this.select()\n    }\n  }\n\n  queryPos(event: MouseEvent): {pos: number, bias: 1 | -1} {\n    let pos = this.view.posAtCoords({x: event.clientX, y: event.clientY})\n    let coords = this.view.coordsAtPos(pos)\n    let bias: 1 | -1 = !coords ? 1 :\n      coords.top > event.clientY ? -1 :\n      coords.bottom < event.clientY ? 1 :\n      coords.left > event.clientX ? -1 : 1\n    return {pos, bias}\n  }\n\n  move(event: MouseEvent) {\n    if (event.buttons == 0) return this.destroy()\n    if (this.dragging != Dragging.NO) return\n    let {pos, bias} = this.queryPos(event)\n    if (pos == this.curPos && bias == this.curBias) return\n    this.curPos = pos; this.curBias = bias\n    this.select()\n  }\n\n  up(event: MouseEvent) {\n    if (this.dragging == Dragging.MAYBE) this.select()\n    this.destroy()\n  }\n\n  destroy() {\n    let doc = this.view.contentDOM.ownerDocument!\n    doc.removeEventListener(\"mousemove\", this.move)\n    doc.removeEventListener(\"mouseup\", this.up)\n    this.inputState.mouseSelection = null\n  }\n\n  select() {\n    let selection = this.update(this.view, this.startSelection, this.startPos, this.startBias,\n                                this.curPos, this.curBias, this.extend, this.multiple)\n    if (!selection.eq(this.view.state.selection))\n      this.view.dispatch(this.view.state.transaction.setSelection(selection).setMeta(MetaSlot.userEvent, \"pointer\"))\n  }\n\n  map(changes: ChangeSet) {\n    if (changes.length) {\n      this.startSelection = this.startSelection.map(changes)\n      this.startPos = changes.mapPos(this.startPos)\n      this.curPos = changes.mapPos(this.curPos)\n    }\n  }\n}\n\nfunction isInPrimarySelection(view: EditorView, pos: number, event: MouseEvent) {\n  let {primary} = view.state.selection\n  if (primary.empty) return false\n  if (pos < primary.from || pos > primary.to) return false\n  if (pos > primary.from && pos < primary.to) return true\n  // On boundary clicks, check whether the coordinates are inside the\n  // selection's client rectangles\n  let sel = getRoot(view.contentDOM).getSelection()!\n  if (sel.rangeCount == 0) return true\n  let rects = sel.getRangeAt(0).getClientRects()\n  for (let i = 0; i < rects.length; i++) {\n    let rect = rects[i]\n    if (rect.left <= event.clientX && rect.right >= event.clientX &&\n        rect.top <= event.clientY && rect.bottom >= event.clientY) return true\n  }\n  return false\n}\n\nfunction eventBelongsToEditor(view: EditorView, event: Event): boolean {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node: Node | null = event.target as Node; node != view.contentDOM; node = node.parentNode)\n    if (!node || node.nodeType == 11 || (node.cmView && node.cmView.ignoreEvent(event)))\n      return false\n  return true\n}\n\nfunction customHandlers(view: EditorView) {\n  let result = Object.create(null)\n  view.someProp(\"handleDOMEvents\", handlers => {\n    for (let eventType in handlers)\n      (result[eventType] || (result[eventType] = [])).push(handlers[eventType])\n  })\n  return result\n}\n\nconst handlers: {[key: string]: (view: EditorView, event: any) => void} = Object.create(null)\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n  (browser.ios && browser.webkit_version < 604)\n\nfunction capturePaste(view: EditorView) {\n  let doc = view.dom.ownerDocument!\n  let target = doc.body.appendChild(doc.createElement(\"textarea\"))\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    doc.body.removeChild(target)\n    doPaste(view, target.value)\n  }, 50)\n}\n\nfunction doPaste(view: EditorView, text: string) {\n  view.dispatch(view.state.transaction.replaceSelection(text)\n                .setMeta(MetaSlot.userEvent, \"paste\").scrollIntoView())\n}\n\nfunction mustCapture(event: KeyboardEvent): boolean {\n  const enum mod { ctrl = 1, alt = 2, shift = 4, meta = 8 }\n  let mods = (event.ctrlKey ? mod.ctrl : 0) | (event.metaKey ? mod.meta : 0) |\n    (event.altKey ? mod.alt : 0) | (event.shiftKey ? mod.shift : 0)\n  let code = event.keyCode, macCtrl = browser.mac && mods == mod.ctrl\n  return code == 8 || (macCtrl && code == 72) ||  // Backspace, Ctrl-h on Mac\n    code == 46 || (macCtrl && code == 68) || // Delete, Ctrl-d on Mac\n    code == 27 || // Esc\n    (mods == (browser.mac ? mod.meta : mod.ctrl) && // Ctrl/Cmd-[biyz]\n     (code == 66 || code == 73 || code == 89 || code == 90))\n}\n\nhandlers.keydown = (view, event: KeyboardEvent) => {\n  if (mustCapture(event)) event.preventDefault()\n  view.inputState.setSelectionOrigin(\"keyboard\")\n}\n\nhandlers.touchdown = handlers.touchmove = (view, event: MouseEvent) => {\n  view.inputState.setSelectionOrigin(\"pointer\")\n}\n\nhandlers.mousedown = (view, event: MouseEvent) => {\n  if (event.button == 0)\n    view.startMouseSelection(event, updateMouseSelection(event.detail))\n}\n\nfunction rangeForClick(view: EditorView, pos: number, bias: -1 | 1, type: number): SelectionRange {\n  if (type == 1) { // Single click\n    return new SelectionRange(pos)\n  } else if (type == 2) { // Double click\n    return SelectionRange.groupAt(view.state, pos, bias)\n  } else { // Triple click\n    let context = LineContext.get(view, pos)\n    if (context) return new SelectionRange(context.start + context.line.length, context.start)\n    let {start, end} = view.state.doc.lineAt(pos)\n    return new SelectionRange(start, end)\n  }\n}\n\nfunction updateMouseSelection(type: number): MouseSelectionUpdate {\n  return (view, startSelection, startPos, startBias, curPos, curBias, extend, multiple) => {\n    let range = rangeForClick(view, curPos, curBias, type)\n    if (startPos != curPos && !extend) {\n      let startRange = rangeForClick(view, startPos, startBias, type)\n      range = range.extend(Math.min(startRange.from, range.from), Math.max(startRange.to, range.to))\n    }\n    if (extend)\n      return startSelection.replaceRange(startSelection.primary.extend(range.from, range.to))\n    else if (multiple)\n      return startSelection.addRange(range)\n    else\n      return EditorSelection.create([range])\n  }\n}\n\nhandlers.dragstart = (view, event: DragEvent) => {\n  let mouseSelection = view.inputState.mouseSelection\n  if (mouseSelection) mouseSelection.dragging = Dragging.YES\n\n  let {doc, selection: {primary}} = view.state\n  event.dataTransfer!.setData(\"Text\", doc.slice(primary.from, primary.to))\n  event.dataTransfer!.effectAllowed = \"copyMove\";\n}\n\n// FIXME drop support\n\nhandlers.paste = (view: EditorView, event: ClipboardEvent) => {\n  view.docView.observer.readSelection()\n  let data = brokenClipboardAPI ? null : event.clipboardData\n  let text = data && data.getData(\"text/plain\")\n  if (text) {\n    doPaste(view, text)\n    event.preventDefault()\n  } else {\n    capturePaste(view)\n  }\n}\n\nfunction captureCopy(view: EditorView, text: string) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  let doc = view.dom.ownerDocument!\n  let target = doc.body.appendChild(doc.createElement(\"textarea\"))\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.value = text\n  target.focus()\n  target.selectionEnd = text.length\n  target.selectionStart = 0\n  setTimeout(() => {\n    doc.body.removeChild(target)\n    view.focus()\n  }, 50)\n}\n\nhandlers.copy = handlers.cut = (view, event: ClipboardEvent) => {\n  let range = view.state.selection.primary\n  if (range.empty) return\n\n  let data = brokenClipboardAPI ? null : event.clipboardData\n  let text = view.state.joinLines(view.state.doc.sliceLines(range.from, range.to))\n  if (data) {\n    event.preventDefault()\n    data.clearData()\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, text)\n  }\n  if (event.type == \"cut\") {\n    view.dispatch(view.state.transaction.replaceSelection([\"\"]).scrollIntoView().setMeta(MetaSlot.userEvent, \"cut\"))\n  }\n}\n\nhandlers.focus = view => {\n  view.dom.classList.add(\"CodeMirror-focused\")\n}\n\nhandlers.blur = view => {\n  view.dom.classList.remove(\"CodeMirror-focused\")\n}\n\nhandlers.beforeprint = view => {\n  view.docView.checkLayout(true)\n}\n","import {EditorView} from \"./editorview\"\nimport {getRoot} from \"./dom\"\nimport browser from \"./browser\"\nimport {EditorSelection} from \"../../state/src\"\n\nconst LINE_SEP = \"\\ufdda\" // A Unicode 'non-character', used to denote newlines internally\n\nexport function applyDOMChange(view: EditorView, start: number, end: number, typeOver: boolean) {\n  let bounds = view.docView.domBoundsAround(start, end, 0)\n  if (!bounds) { view.updateState([], view.state); return }\n  let {from, to} = bounds\n  let selPoints = selectionPoints(view.contentDOM), reader = new DOMReader(selPoints)\n  reader.readRange(bounds.startDOM, bounds.endDOM)\n  let newSelection = selectionFromPoints(selPoints, from)\n\n  let oldSel = view.state.selection.primary, preferredPos = oldSel.from, preferredSide = null\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100) {\n    preferredPos = oldSel.to\n    preferredSide = \"end\"\n  }\n  view.inputState.lastKeyCode = 0\n\n  let diff = findDiff(view.state.doc.slice(from, to, LINE_SEP), reader.text, preferredPos - from, preferredSide)\n  // Heuristic to notice typing over a selected character\n  if (!diff && typeOver && !oldSel.empty && newSelection && newSelection.primary.empty)\n    diff = {from: oldSel.from - from, toA: oldSel.to - from, toB: oldSel.to - from}\n  if (diff) {\n    let start = from + diff.from, end = from + diff.toA, sel = view.state.selection.primary, startState = view.state\n    // Android browsers don't fire reasonable key events for enter,\n    // backspace, or delete. So this detects changes that look like\n    // they're caused by those keys, and reinterprets them as key\n    // events.\n    if (browser.android) {\n      if ((start == sel.from && end == sel.to && reader.text.slice(diff.from, diff.toB) == LINE_SEP && dispatchKey(view, \"Enter\", 10)) ||\n          (start == sel.from - 1 && end == sel.to && diff.from == diff.toB && dispatchKey(view, \"Backspace\", 8)) ||\n          (start == sel.from && end == sel.to + 1 && diff.from == diff.toB && dispatchKey(view, \"Delete\", 46))) {\n        if (view.state == startState) view.updateState([], view.state) // Force redraw if necessary\n        return\n      }\n    }\n    let tr = startState.transaction\n    if (start >= sel.from && end <= sel.to && end - start >= (sel.to - sel.from) / 3) {\n      tr = tr.replaceSelection(reader.text.slice(sel.from - from, sel.to - diff.toA + diff.toB - from).split(LINE_SEP))\n    } else {\n      tr = tr.replace(start, end, reader.text.slice(diff.from, diff.toB).split(LINE_SEP))\n      if (newSelection && !tr.selection.primary.eq(newSelection.primary))\n        tr = tr.setSelection(tr.selection.replaceRange(newSelection.primary))\n    }\n    view.dispatch(tr.scrollIntoView())\n  } else if (newSelection && !newSelection.primary.eq(oldSel)) {\n    view.dispatch(view.state.transaction.setSelection(newSelection).scrollIntoView())\n  } else {\n    view.updateState([], view.state)\n  }\n}\n\nfunction findDiff(a: string, b: string, preferredPos: number, preferredSide: string | null)\n    : {from: number, toA: number, toB: number} | null {\n  let minLen = Math.min(a.length, b.length)\n  let from = 0\n  while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from)) from++\n  if (from == minLen && a.length == b.length) return null\n  let toA = a.length, toB = b.length\n  while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) { toA--; toB-- }\n\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, from - Math.min(toA, toB))\n    preferredPos -= toA + adjust - from\n  }\n  if (toA < from && a.length < b.length) {\n    let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0\n    from -= move\n    toB = from + (toB - toA)\n    toA = from\n  } else if (toB < from) {\n    let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0\n    from -= move\n    toA = from + (toA - toB)\n    toB = from\n  }\n  return {from, toA, toB}\n}\n\nclass DOMReader {\n  text: string = \"\"\n  constructor(private points: DOMPoint[]) {}\n\n  readRange(start: Node | null, end: Node | null) {\n    if (!start) return\n    let parent = start.parentNode!\n    for (let cur = start!;;) {\n      this.findPointBefore(parent, cur)\n      this.readNode(cur)\n      let next: Node | null = cur.nextSibling\n      if (next == end) break\n      if (isBlockNode(cur) || (isBlockNode(next!) && cur.nodeName != \"BR\")) this.text += LINE_SEP\n      cur = next!\n    }\n    this.findPointBefore(parent, end)\n  }\n\n  readNode(node: Node) {\n    if (node.cmIgnore) return\n    let view = node.cmView\n    let fromView = view && view.overrideDOMText\n    let text: string | undefined\n    if (fromView != null) text = fromView.join(LINE_SEP)\n    else if (node.nodeType == 3) text = node.nodeValue!\n    else if (node.nodeName == \"BR\") text = node.nextSibling ? LINE_SEP : \"\"\n    else if (node.nodeType == 1) this.readRange(node.firstChild, null)\n    if (text != null) {\n      this.findPointIn(node, text.length)\n      this.text += text\n    }\n  }\n\n  findPointBefore(node: Node, next: Node | null) {\n    for (let point of this.points)\n      if (point.node == node && node.childNodes[point.offset] == next)\n        point.pos = this.text.length\n  }\n\n  findPointIn(node: Node, maxLen: number) {\n    for (let point of this.points)\n      if (point.node == node)\n        point.pos = this.text.length + Math.min(point.offset, maxLen)\n  }\n}\n\nfunction isBlockNode(node: Node): boolean {\n  return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName)\n}\n\nclass DOMPoint {\n  pos: number = -1\n  constructor(readonly node: Node, readonly offset: number) {}\n}\n\nfunction selectionPoints(dom: HTMLElement): DOMPoint[] {\n  let root = getRoot(dom), result: DOMPoint[] = []\n  if (root.activeElement != dom) return result\n  let {anchorNode, anchorOffset, focusNode, focusOffset} = root.getSelection()!\n  if (anchorNode) {\n    result.push(new DOMPoint(anchorNode, anchorOffset))\n    if (focusNode != anchorNode || focusOffset != anchorOffset)\n      result.push(new DOMPoint(focusNode, focusOffset))\n  }\n  return result\n}\n\nfunction selectionFromPoints(points: DOMPoint[], base: number): EditorSelection | null {\n  if (points.length == 0) return null\n  let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor\n  return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null\n}\n\nfunction dispatchKey(view: EditorView, name: string, code: number): boolean {\n  let options = {key: name, code: name, keyCode: code, which: code, cancelable: true}\n  let down = new KeyboardEvent(\"keydown\", options)\n  view.contentDOM.dispatchEvent(down)\n  let up = new KeyboardEvent(\"keyup\", options)\n  view.contentDOM.dispatchEvent(up)\n  return down.defaultPrevented || up.defaultPrevented\n}\n","import {EditorState, Transaction, EditorSelection, MetaSlot} from \"../../state/src\"\nimport {DocView, EditorViewport} from \"./docview\"\nimport {InputState, MouseSelectionUpdate} from \"./input\"\nimport {getRoot, selectionCollapsed, Rect} from \"./dom\"\nimport {Decoration, DecorationSet} from \"./decoration\"\nimport {applyDOMChange} from \"./domchange\"\nimport {movePos, posAtCoords} from \"./cursor\"\nimport {LineHeight} from \"./heightmap\"\n\nexport class EditorView {\n  private _state!: EditorState\n  get state(): EditorState { return this._state }\n\n  readonly dispatch: (tr: Transaction) => void\n\n  readonly dom: HTMLElement\n  readonly contentDOM: HTMLElement\n\n  // @internal\n  inputState!: InputState\n\n  // @internal\n  readonly docView: DocView\n\n  readonly viewport: EditorViewport\n\n  private pluginViews: PluginView[] = []\n\n  private scheduledDecoUpdate: number = -1\n\n  private updatingState: boolean = false\n\n  constructor(state: EditorState, dispatch?: ((tr: Transaction) => void | null), ...plugins: PluginView[]) {\n    this.dispatch = dispatch || (tr => this.updateState([tr], tr.apply()))\n\n    this.contentDOM = document.createElement(\"pre\")\n    this.contentDOM.className = \"CodeMirror-content\"\n    this.contentDOM.style.cssText = contentCSS\n    this.contentDOM.setAttribute(\"contenteditable\", \"true\")\n    this.contentDOM.setAttribute(\"spellcheck\", \"false\")\n\n    this.dom = document.createElement(\"div\")\n    this.dom.style.cssText = editorCSS\n    this.dom.className = \"CodeMirror\"\n    this.dom.appendChild(this.contentDOM)\n\n    this.docView = new DocView(this.contentDOM, {\n      onDOMChange: (start, end, typeOver) => applyDOMChange(this, start, end, typeOver),\n      onSelectionChange: () => applySelectionChange(this),\n      onUpdateState: (prevState: EditorState, transactions: Transaction[]) => {\n        for (let pluginView of this.pluginViews)\n          if (pluginView.updateState) pluginView.updateState(this, prevState, transactions)\n      },\n      onUpdateDOM: () => {\n        for (let plugin of this.pluginViews) if (plugin.updateDOM) plugin.updateDOM(this)\n      },\n      onUpdateViewport: () => {\n        for (let plugin of this.pluginViews) if (plugin.updateViewport) plugin.updateViewport(this)\n      },\n      getDecorations: () => this.pluginViews.map(v => v.decorations || Decoration.none)\n    })\n    this.viewport = this.docView.publicViewport\n    this.setState(state, ...plugins)\n  }\n\n  setState(state: EditorState, ...plugins: PluginView[]) {\n    this._state = state\n    this.withUpdating(() => {\n      setTabSize(this.contentDOM, state.tabSize)\n      this.createPluginViews(plugins)\n      this.inputState = new InputState(this)\n      this.docView.update(state)\n    })\n  }\n\n  updateState(transactions: Transaction[], state: EditorState) {\n    if (transactions.length && transactions[0].startState != this._state)\n      throw new RangeError(\"Trying to update state with a transaction that doesn't start from the current state.\")\n    this.withUpdating(() => {\n      let prevState = this._state\n      this._state = state\n      if (transactions.some(tr => tr.getMeta(MetaSlot.changeTabSize) != undefined)) setTabSize(this.contentDOM, state.tabSize)\n      if (state.doc != prevState.doc || transactions.some(tr => tr.selectionSet && !tr.getMeta(MetaSlot.preserveGoalColumn)))\n        this.inputState.goalColumns.length = 0\n      this.docView.update(state, prevState, transactions, transactions.some(tr => tr.scrolledIntoView) ? state.selection.primary.head : -1)\n      this.inputState.update(transactions)\n    })\n  }\n\n  /** @internal */\n  someProp<N extends keyof PluginView, R>(propName: N, f: (value: NonNullable<PluginView[N]>) => R | undefined): R | undefined {\n    let value: R | undefined = undefined\n    for (let pluginView of this.pluginViews) {\n      let prop = pluginView[propName]\n      if (prop != null && (value = f(prop as NonNullable<PluginView[N]>)) != null) break\n    }\n    return value\n  }\n\n  /** @internal */\n  getProp<N extends keyof PluginView>(propName: N): PluginView[N] {\n    for (let pluginView of this.pluginViews) {\n      let prop = pluginView[propName]\n      if (prop != null) return prop\n    }\n    return undefined\n  }\n\n  private withUpdating(f: () => void) {\n    if (this.updatingState) throw new Error(\"Recursive calls of EditorView.updateState or EditorView.setState are not allowed\")\n    this.updatingState = true\n    try { f() }\n    finally { this.updatingState = false }\n  }\n\n  private createPluginViews(plugins: PluginView[]) {\n    this.destroyPluginViews()\n    for (let plugin of plugins) this.pluginViews.push(plugin)\n    for (let plugin of this.state.plugins) if (plugin.view)\n      this.pluginViews.push(plugin.view(this))\n  }\n\n  private destroyPluginViews() {\n    for (let pluginView of this.pluginViews) if (pluginView.destroy)\n      pluginView.destroy()\n    this.pluginViews.length = 0\n  }\n\n  domAtPos(pos: number): {node: Node, offset: number} | null {\n    return this.docView.domFromPos(pos)\n  }\n\n  heightAtPos(pos: number, top: boolean): number {\n    this.docView.forceLayout()\n    return this.docView.heightAt(pos, top ? -1 : 1)\n  }\n\n  lineAtHeight(height: number): LineHeight {\n    this.docView.forceLayout()\n    return this.docView.lineAtHeight(height)\n  }\n\n  get contentHeight() {\n    return this.docView.heightMap.height + this.docView.paddingTop + this.docView.paddingBottom\n  }\n\n  movePos(start: number, direction: \"forward\" | \"backward\" | \"left\" | \"right\",\n          granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\" = \"character\",\n          action: \"move\" | \"extend\" = \"move\"): number {\n    return movePos(this, start, direction, granularity, action)\n  }\n\n  posAtCoords(coords: {x: number, y: number}): number {\n    this.docView.forceLayout()\n    return posAtCoords(this, coords)\n  }\n\n  coordsAtPos(pos: number): Rect | null { return this.docView.coordsAt(pos) }\n\n  get defaultCharacterWidth() { return this.docView.heightOracle.charWidth }\n  get defaultLineHeight() { return this.docView.heightOracle.lineHeight }\n\n  // To be used by plugin views when they update their decorations asynchronously\n  decorationUpdate() {\n    if (this.scheduledDecoUpdate < 0) this.scheduledDecoUpdate = requestAnimationFrame(() => {\n      this.scheduledDecoUpdate = -1\n      this.docView.update(this.state, this.state)\n    })\n  }\n\n  startMouseSelection(event: MouseEvent, update: MouseSelectionUpdate) {\n    this.focus()\n    this.inputState.startMouseSelection(this, event, update)\n  }\n\n  hasFocus(): boolean {\n    return getRoot(this.dom).activeElement == this.contentDOM\n  }\n\n  focus() {\n    this.docView.focus()\n  }\n\n  destroy() {\n    this.destroyPluginViews()\n    this.inputState.destroy()\n    this.dom.remove()\n    this.docView.destroy()\n  }\n}\n\nexport interface PluginView {\n  updateState?: (view: EditorView, prevState: EditorState, transactions: Transaction[]) => void\n  updateDOM?: (view: EditorView) => void\n  updateViewport?: (view: EditorView) => void\n  handleDOMEvents?: {[key: string]: (view: EditorView, event: Event) => boolean}\n  // This should return a stable value, not compute something on the fly\n  decorations?: DecorationSet\n  destroy?: () => void\n}\n\nfunction selectionFromDOM(view: EditorView) {\n  let domSel = getRoot(view.contentDOM).getSelection()!\n  let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset)\n  let anchor = selectionCollapsed(domSel) ? head : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset)\n  return EditorSelection.single(anchor, head)\n}\n\nfunction applySelectionChange(view: EditorView) {\n  let selection = selectionFromDOM(view)\n  if (!view.state.selection.primary.eq(selection.primary)) {\n    let tr = view.state.transaction.setSelection(selection)\n    if (view.inputState.lastSelectionTime > Date.now() - 50) {\n      if (view.inputState.lastSelectionOrigin == \"keyboard\") tr = tr.scrollIntoView()\n      else tr = tr.setMeta(MetaSlot.userEvent, view.inputState.lastSelectionOrigin)\n    }\n    view.dispatch(tr)\n  }\n  view.inputState.lastSelectionTime = 0\n}\n\nfunction setTabSize(elt: HTMLElement, size: number) {\n  (elt.style as any).tabSize = (elt.style as any).MozTabSize = size\n}\n\nconst editorCSS = `\nposition: relative;\ndisplay: flex;\nalign-items: flex-start;`\n\nconst contentCSS = `\nmargin: 0;\nflex-grow: 2;\nmin-height: 100%;`\n","var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\nexports.base = base\n\nvar shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \";\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\nexports.shift = shift\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexports.keyName = function(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    safari && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import {base, keyName} from \"w3c-keyname\"\n\nimport {Plugin} from \"../../state/src\"\nimport {EditorView} from \"../../view/src\"\n\nexport type Command = (view: EditorView) => boolean\n\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false\n\nfunction normalizeKeyName(name: string): string {\n  const parts = name.split(/-(?!$)/)\n  let result = parts[parts.length - 1]\n  if (result == \"Space\") result = \" \"\n  let alt, ctrl, shift, meta\n  for (let i = 0; i < parts.length - 1; ++i) {\n    const mod = parts[i]\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true\n    else if (/^a(lt)?$/i.test(mod)) alt = true\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true\n    else if (/^s(hift)?$/i.test(mod)) shift = true\n    else if (/^mod$/i.test(mod)) { if (mac) meta = true; else ctrl = true }\n    else throw new Error(\"Unrecognized modifier name: \" + mod)\n  }\n  if (alt) result = \"Alt-\" + result\n  if (ctrl) result = \"Ctrl-\" + result\n  if (meta) result = \"Meta-\" + result\n  if (shift) result = \"Shift-\" + result\n  return result\n}\n\nfunction normalize(map: {[key: string]: Command}): {[key: string]: Command} {\n  const copy = Object.create(null)\n  for (const prop in map) copy[normalizeKeyName(prop)] = map[prop]\n  return copy\n}\n\nfunction modifiers(name: string, event: KeyboardEvent, shift: boolean) {\n  if (event.altKey) name = \"Alt-\" + name\n  if (event.ctrlKey) name = \"Ctrl-\" + name\n  if (event.metaKey) name = \"Meta-\" + name\n  if (shift !== false && event.shiftKey) name = \"Shift-\" + name\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nexport function keymap(bindings: {[key: string]: Command}): Plugin {\n  let keydown = keydownHandler(bindings)\n  return new Plugin({\n    view() {\n      return {handleDOMEvents: {keydown}}\n    }\n  })\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) handles them.\nexport function keydownHandler(bindings: {[key: string]: Command}): (view: EditorView, event: KeyboardEvent) => boolean {\n  const map = normalize(bindings)\n  return function(view, event) {\n    const name = keyName(event), isChar = name.length == 1 && name != \" \"\n    const direct = map[modifiers(name, event, !isChar)]\n    let baseName\n    if (direct && direct(view)) return true\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      const fromCode = map[modifiers(baseName, event, true)]\n      if (fromCode && fromCode(view)) return true\n    }\n    return false\n  }\n}\n","import {ChangeSet, ChangeDesc, Transaction, EditorSelection} from \"../../state/src\"\n\nclass Item {\n  constructor(readonly map: ChangeSet<ChangeDesc>,\n              readonly inverted: ChangeSet | null = null,\n              readonly selection: EditorSelection | null = null) {}\n  get isChange(): boolean { return this.inverted != null }\n}\nexport const enum ItemFilter { OnlyChanges, Any }\n\ntype Branch = ReadonlyArray<Item>\n\nfunction updateBranch(branch: Branch, to: number, maxLen: number, newItem: Item) {\n  let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0\n  let newBranch = branch.slice(start, to)\n  newBranch.push(newItem)\n  return newBranch\n}\n\nfunction isAdjacent(prev: ChangeDesc | null, cur: ChangeDesc): boolean {\n  return !!prev && cur.from <= prev.mapPos(prev.to, 1) && cur.to >= prev.mapPos(prev.from)\n}\n\nfunction addChanges(branch: Branch, changes: ChangeSet, inverted: ChangeSet | null,\n                    selectionBefore: EditorSelection, maxLen: number,\n                    mayMerge: (prevItem: Item) => boolean): Branch {\n  if (branch.length) {\n    const lastItem = branch[branch.length - 1]\n    if (lastItem.selection && lastItem.isChange == Boolean(inverted) && mayMerge(lastItem))\n      return inverted ? updateBranch(branch, branch.length - 1, maxLen, new Item(lastItem.map.appendSet(changes.desc), inverted.appendSet(lastItem.inverted!), selectionBefore)) : branch\n  }\n  return updateBranch(branch, branch.length, maxLen, new Item(changes.desc, inverted, selectionBefore))\n}\n\nfunction popChanges(branch: Branch, only: ItemFilter): {changes: ChangeSet, branch: Branch, selection: EditorSelection} {\n  let map: ChangeSet<ChangeDesc> | null = null\n  let idx = branch.length - 1\n  for (;; idx--) {\n    if (idx < 0) throw new RangeError(\"popChanges called on empty branch\")\n    let entry = branch[idx]\n    if (entry.isChange || (only == ItemFilter.Any && entry.selection)) break\n    map = map ? entry.map.appendSet(map) : entry.map\n  }\n\n  let changeItem = branch[idx]\n  let newBranch = branch.slice(0, idx), changes = changeItem.inverted || ChangeSet.empty, selection = changeItem.selection!\n\n  if (map) {\n    let startIndex = changeItem.map.length\n    map = changeItem.map.appendSet(map)\n    let mappedChanges = []\n    for (let i = 0; i < changes.length; i++) {\n      let mapped = changes.changes[i].map(map.partialMapping(startIndex - i))\n      if (mapped) {\n        map = map.append(mapped.desc)\n        mappedChanges.push(mapped)\n      }\n    }\n    newBranch.push(new Item(map))\n    changes = new ChangeSet(mappedChanges) // FIXME preserve mirror data?\n    selection = selection.map(map)\n  }\n  return {changes, branch: newBranch, selection}\n}\n\nfunction nope() { return false }\n\nfunction eqSelectionShape(a: EditorSelection, b: EditorSelection) {\n  return a.ranges.length == b.ranges.length &&\n         a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0\n}\n\nexport const enum PopTarget { Done, Undone }\n\nexport class HistoryState {\n  private constructor(public readonly done: Branch,\n                      public readonly undone: Branch,\n                      private readonly prevTime: number | null = null,\n                      private readonly prevUserEvent: string | undefined = undefined) {}\n\n  resetTime(): HistoryState {\n    return new HistoryState(this.done, this.undone)\n  }\n\n  addChanges(changes: ChangeSet, inverted: ChangeSet | null, selection: EditorSelection,\n             time: number, userEvent: string | undefined, newGroupDelay: number, maxLen: number): HistoryState {\n    let mayMerge: (item: Item) => boolean = nope\n    if (this.prevTime !== null && time - this.prevTime < newGroupDelay &&\n        (inverted || (this.prevUserEvent == userEvent && userEvent == \"keyboard\")))\n      mayMerge = inverted\n                 ? prev => isAdjacent(prev.map.changes[prev.map.length - 1], changes.changes[0])\n                 : prev => eqSelectionShape(prev.selection!, selection)\n    return new HistoryState(addChanges(this.done, changes, inverted, selection, maxLen, mayMerge),\n                            this.undone, time, userEvent)\n  }\n\n  addMapping(map: ChangeSet<ChangeDesc>, maxLen: number): HistoryState {\n    if (this.done.length == 0) return this\n    return new HistoryState(updateBranch(this.done, this.done.length, maxLen, new Item(map)), this.undone)\n  }\n\n  canPop(done: PopTarget, only: ItemFilter): boolean {\n    const target = done == PopTarget.Done ? this.done : this.undone\n    for (const {isChange, selection} of target)\n      if (isChange || (only == ItemFilter.Any && selection)) return true\n    return false\n  }\n\n  pop(done: PopTarget, only: ItemFilter, transaction: Transaction, maxLen: number): {transaction: Transaction, state: HistoryState} {\n    let {changes, branch, selection} = popChanges(done == PopTarget.Done ? this.done : this.undone, only)\n\n    let oldSelection = transaction.selection\n    for (let change of changes.changes) transaction = transaction.change(change)\n    transaction = transaction.setSelection(selection)\n    let otherBranch = (done == PopTarget.Done ? this.undone : this.done)\n    otherBranch = addChanges(otherBranch, transaction.changes, transaction.changes.length > 0 ? transaction.invertedChanges() : null, oldSelection, maxLen, nope)\n    return {transaction, state: new HistoryState(done == PopTarget.Done ? branch : otherBranch,\n                                                 done == PopTarget.Done ? otherBranch : branch)}\n  }\n\n  eventCount(done: PopTarget, only: ItemFilter) {\n    let count = 0, branch = done == PopTarget.Done ? this.done : this.undone\n    for (const {isChange, selection} of branch)\n      if (isChange || (only == ItemFilter.Any && selection)) ++count\n    return count\n  }\n\n  static empty: HistoryState = new HistoryState([], [])\n}\n","import {EditorState, Transaction, StateField, MetaSlot, Plugin} from \"../../state/src\"\nimport {HistoryState, ItemFilter, PopTarget} from \"./core\"\n\nconst historyStateSlot = new MetaSlot<HistoryState>(\"historyState\")\nexport const closeHistorySlot = new MetaSlot<boolean>(\"historyClose\")\n\nconst historyField = new StateField({\n  init(editorState: EditorState): HistoryState {\n    return HistoryState.empty\n  },\n\n  apply(tr: Transaction, state: HistoryState, editorState: EditorState): HistoryState {\n    const fromMeta = tr.getMeta(historyStateSlot)\n    if (fromMeta) return fromMeta\n    if (tr.getMeta(closeHistorySlot)) state = state.resetTime()\n    if (!tr.changes.length && !tr.selectionSet) return state\n\n    const {newGroupDelay, minDepth} = editorState.getPluginWithField(historyField).config\n    if (tr.getMeta(MetaSlot.addToHistory) !== false)\n      return state.addChanges(tr.changes, tr.changes.length ? tr.invertedChanges() : null, tr.startState.selection,\n                              tr.getMeta(MetaSlot.time)!, tr.getMeta(MetaSlot.userEvent), newGroupDelay, minDepth)\n    return state.addMapping(tr.changes.desc, minDepth)\n  },\n\n  debugName: \"historyState\"\n})\n\nexport function history({minDepth = 100, newGroupDelay = 500}: {minDepth?: number, newGroupDelay?: number} = {}): Plugin {\n  return new Plugin({\n    state: historyField,\n    config: {minDepth, newGroupDelay}\n  })\n}\n\nfunction historyCmd(target: PopTarget, only: ItemFilter, state: EditorState, dispatch: (tr: Transaction) => void): boolean {\n  const historyState: HistoryState | undefined = state.getField(historyField)\n  if (!historyState || !historyState.canPop(target, only)) return false\n  const {minDepth} = state.getPluginWithField(historyField).config\n  const {transaction, state: newState} = historyState.pop(target, only, state.transaction, minDepth)\n  dispatch(transaction.setMeta(historyStateSlot, newState))\n  return true\n}\n\nexport function undo({state, dispatch}: {state: EditorState, dispatch: (tr: Transaction) => void}): boolean {\n  return historyCmd(PopTarget.Done, ItemFilter.OnlyChanges, state, dispatch)\n}\n\nexport function redo({state, dispatch}: {state: EditorState, dispatch: (tr: Transaction) => void}): boolean {\n  return historyCmd(PopTarget.Undone, ItemFilter.OnlyChanges, state, dispatch)\n}\n\nexport function undoSelection({state, dispatch}: {state: EditorState, dispatch: (tr: Transaction) => void}): boolean {\n  return historyCmd(PopTarget.Done, ItemFilter.Any, state, dispatch)\n}\n\nexport function redoSelection({state, dispatch}: {state: EditorState, dispatch: (tr: Transaction) => void}): boolean {\n  return historyCmd(PopTarget.Undone, ItemFilter.Any, state, dispatch)\n}\n\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nexport function closeHistory(tr: Transaction): Transaction {\n  return tr.setMeta(closeHistorySlot, true)\n}\n\n// The amount of undoable change events available in a given state.\nexport function undoDepth(state: EditorState): number {\n  let hist = state.getField(historyField)\n  return hist ? hist.eventCount(PopTarget.Done, ItemFilter.OnlyChanges) : 0\n}\n\n// The amount of redoable change events available in a given state.\nexport function redoDepth(state: EditorState): number {\n  let hist = state.getField(historyField)\n  return hist ? hist.eventCount(PopTarget.Undone, ItemFilter.OnlyChanges) : 0\n}\n\n// The amount of undoable events available in a given state.\nexport function undoSelectionDepth(state: EditorState): number {\n  let hist = state.getField(historyField)\n  return hist ? hist.eventCount(PopTarget.Done, ItemFilter.Any) : 0\n}\n\n// The amount of redoable events available in a given state.\nexport function redoSelectionDepth(state: EditorState): number {\n  let hist = state.getField(historyField)\n  return hist ? hist.eventCount(PopTarget.Undone, ItemFilter.Any) : 0\n}\n","import {Plugin} from \"../../state/src\"\nimport {EditorView} from \"../../view/src\"\n\n// FIXME Think about how the gutter width changing could cause\n// problems when line wrapping is on by changing a line's height\n// (solution is possibly some way for this plugin to signal the view\n// that it has to do another layout check when the gutter's width\n// changes, which should be relatively rare)\n\n// FIXME at some point, add support for custom gutter space and\n// per-line markers\n\n// FIXME seriously slow on Firefox, quite fast on Chrome\n\nexport interface GutterConfig {\n  fixed?: boolean,\n  formatNumber?: (lineNo: number) => string\n}\n\nexport function gutter(config: GutterConfig = {}) {\n  return new Plugin({\n    view(view: EditorView) { return new GutterView(view, config) }\n  })\n}\n\nclass GutterView {\n  dom: HTMLElement\n  spaceAbove: number = 0\n  lines: GutterLine[] = []\n  lastLine: GutterLine\n  formatNumber: (lineNo: number) => string\n\n  constructor(view: EditorView, config: GutterConfig) {\n    this.dom = document.createElement(\"div\")\n    this.dom.className = \"CodeMirror-gutter\"\n    this.dom.setAttribute(\"aria-hidden\", \"true\")\n    this.dom.style.cssText = `left: 0; box-sizing: border-box; height: 100%; overflow: hidden; flex-shrink: 0;`\n    if (config.fixed !== false) {\n      // FIXME IE11 fallback, which doesn't support position: sticky,\n      // by using position: relative + event handlers that realign the\n      // gutter (or just force fixed=false on IE11?)\n      this.dom.style.position = \"sticky\"\n    }\n    view.dom.insertBefore(this.dom, view.contentDOM)\n    this.formatNumber = config.formatNumber || String\n    this.lastLine = new GutterLine(1, 0, 0, 0, this.formatNumber)\n    this.lastLine.dom.style.cssText += \"visibility: hidden; pointer-events: none\"\n    this.dom.appendChild(this.lastLine.dom)\n    this.updateDOM(view)\n  }\n\n  updateDOM(view: EditorView) {\n    // Create the first number consisting of all 9s that is at least\n    // as big as the line count, and put that in this.lastLine to make\n    // sure the gutter width is stable\n    let last = 9\n    while (last < view.state.doc.lines) last = last * 10 + 9\n    this.lastLine.update(last, 0, 0, 0, this.formatNumber)\n    // FIXME would be nice to be able to recognize updates that didn't redraw\n    this.updateGutter(view)\n  }\n\n  updateGutter(view: EditorView) {\n    let spaceAbove = view.heightAtPos(view.viewport.from, true)\n    if (spaceAbove != this.spaceAbove) {\n      this.spaceAbove = spaceAbove\n      this.dom.style.paddingTop = spaceAbove + \"px\"\n    }\n    let i = 0, lineNo = -1\n    view.viewport.forEachLine(line => {\n      let above = line.textTop, below = line.height - line.textBottom, height = line.height - above - below\n      if (lineNo < 0) lineNo = view.state.doc.lineAt(line.start).number\n      if (i == this.lines.length) {\n        let newLine = new GutterLine(lineNo, height, above, below, this.formatNumber)\n        this.lines.push(newLine)\n        this.dom.appendChild(newLine.dom)\n      } else {\n        this.lines[i].update(lineNo, height, above, below, this.formatNumber)\n      }\n      lineNo = line.hasCollapsedRanges ? -1 : lineNo + 1\n      i++\n    })\n    while (this.lines.length > i) this.dom.removeChild(this.lines.pop()!.dom)\n    this.dom.style.minHeight = view.contentHeight + \"px\"\n  }\n\n  destroy() {\n    this.dom.remove()\n  }\n}\n\nclass GutterLine {\n  dom: HTMLElement\n  lineNo: number = -1\n  height: number = -1\n  above: number = -1\n  below: number = -1\n\n  constructor(lineNo: number, height: number, above: number, below: number, formatNo: (lineNo: number) => string) {\n    this.dom = document.createElement(\"div\")\n    this.dom.className = \"CodeMirror-gutter-element\"\n    this.update(lineNo, height, above, below, formatNo)\n  }\n\n  update(lineNo: number, height: number, above: number, below: number, formatNo: (lineNo: number) => string) {\n    if (this.lineNo != lineNo)\n      this.dom.textContent = formatNo(this.lineNo = lineNo)\n    if (this.height != height)\n      this.dom.style.height = (this.height = height) + \"px\"\n    if (this.above != above)\n      this.dom.style.marginTop = (this.above = above) + \"px\"\n    if (this.below != below)\n      this.dom.style.marginBottom = (this.below = below) + \"px\"\n  }\n}\n","import {EditorSelection, SelectionRange, MetaSlot} from \"../../state/src\"\nimport {EditorView} from \"../../view/src\"\n\nexport type Command = (view: EditorView) => boolean\n\nfunction moveSelection(view: EditorView, dir: \"left\" | \"right\" | \"forward\" | \"backward\",\n                       granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\"): boolean {\n  let transaction = view.state.transaction.mapRanges(range => {\n    if (!range.empty && granularity != \"lineboundary\")\n      return new SelectionRange(dir == \"left\" || dir == \"backward\" ? range.from : range.to)\n    return new SelectionRange(view.movePos(range.head, dir, granularity, \"move\"))\n  })\n  if (transaction.selection.eq(view.state.selection)) return false\n  if (granularity == \"line\") transaction = transaction.setMeta(MetaSlot.preserveGoalColumn, true)\n  view.dispatch(transaction.scrollIntoView())\n  return true\n}\n\nexport const moveCharLeft: Command = view => moveSelection(view, \"left\", \"character\")\nexport const moveCharRight: Command = view => moveSelection(view, \"right\", \"character\")\n\nexport const moveWordLeft: Command = view => moveSelection(view, \"left\", \"word\")\nexport const moveWordRight: Command = view => moveSelection(view, \"right\", \"word\")\n\nexport const moveLineUp: Command = view => moveSelection(view, \"backward\", \"line\")\nexport const moveLineDown: Command = view => moveSelection(view, \"forward\", \"line\")\n\nexport const moveLineStart: Command = view => moveSelection(view, \"backward\", \"lineboundary\")\nexport const moveLineEnd: Command = view => moveSelection(view, \"forward\", \"lineboundary\")\n\nfunction extendSelection(view: EditorView, dir: \"left\" | \"right\" | \"forward\" | \"backward\",\n                         granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\"): boolean {\n  let transaction = view.state.transaction.mapRanges(range => {\n    return new SelectionRange(range.anchor, view.movePos(range.head, dir, granularity, \"extend\"))\n  })\n  if (transaction.selection.eq(view.state.selection)) return false\n  if (granularity == \"line\") transaction = transaction.setMeta(MetaSlot.preserveGoalColumn, true)\n  view.dispatch(transaction.scrollIntoView())\n  return true\n}\n\nexport const extendCharLeft: Command = view => extendSelection(view, \"left\", \"character\")\nexport const extendCharRight: Command = view => extendSelection(view, \"right\", \"character\")\n\nexport const extendWordLeft: Command = view => extendSelection(view, \"left\", \"word\")\nexport const extendWordRight: Command = view => extendSelection(view, \"right\", \"word\")\n\nexport const extendLineUp: Command = view => extendSelection(view, \"backward\", \"line\")\nexport const extendLineDown: Command = view => extendSelection(view, \"forward\", \"line\")\n\nexport const extendLineStart: Command = view => extendSelection(view, \"backward\", \"lineboundary\")\nexport const extendLineEnd: Command = view => extendSelection(view, \"forward\", \"lineboundary\")\n\nexport const selectDocStart: Command = ({state, dispatch}) => {\n  dispatch(state.transaction.setSelection(EditorSelection.single(0)).scrollIntoView())\n  return true\n}\n\nexport const selectDocEnd: Command = ({state, dispatch}) => {\n  dispatch(state.transaction.setSelection(EditorSelection.single(state.doc.length)).scrollIntoView())\n  return true\n}\n\nexport const selectAll: Command = ({state, dispatch}) => {\n  dispatch(state.transaction.setSelection(EditorSelection.single(0, state.doc.length)))\n  return true\n}\n\nfunction deleteText(view: EditorView, dir: \"forward\" | \"backward\") {\n  let transaction = view.state.transaction.reduceRanges((transaction, range) => {\n    let {from, to} = range\n    if (from == to) {\n      let target = view.movePos(range.head, dir, \"character\", \"move\")\n      from = Math.min(from, target); to = Math.max(to, target)\n    }\n    if (from == to) return {transaction, range}\n    return {transaction: transaction.replace(from, to, \"\"),\n            range: new SelectionRange(from)}\n  })\n  if (!transaction.docChanged) return false\n\n  view.dispatch(transaction.scrollIntoView())\n  return true\n}\n\nexport const deleteCharBackward: Command = view => deleteText(view, \"backward\")\nexport const deleteCharForward: Command = view => deleteText(view, \"forward\")\n\nexport const pcBaseKeymap: {[key: string]: Command} = {\n  \"ArrowLeft\": moveCharLeft,\n  \"ArrowRight\": moveCharRight,\n  \"Shift-ArrowLeft\": extendCharLeft,\n  \"Shift-ArrowRight\": extendCharRight,\n  \"Mod-ArrowLeft\": moveWordLeft,\n  \"Mod-ArrowRight\": moveWordRight,\n  \"Shift-Mod-ArrowLeft\": extendWordLeft,\n  \"Shift-Mod-ArrowRight\": extendWordRight,\n  \"ArrowUp\": moveLineUp,\n  \"ArrowDown\": moveLineDown,\n  \"Shift-ArrowUp\": extendLineUp,\n  \"Shift-ArrowDown\": extendLineDown,\n  \"Home\": moveLineStart,\n  \"End\": moveLineEnd,\n  \"Shift-Home\": extendLineStart,\n  \"Shift-End\": extendLineEnd,\n  \"Mod-Home\": selectDocStart,\n  \"Mod-End\": selectDocEnd,\n  \"Mod-a\": selectAll,\n  \"Backspace\": deleteCharBackward,\n  \"Delete\": deleteCharForward\n}\n\nexport const macBaseKeymap: {[key: string]: Command} = {\n  \"Control-b\": moveCharLeft,\n  \"Control-f\": moveCharRight,\n  \"Shift-Control-b\": extendCharLeft,\n  \"Shift-Control-f\": extendCharRight,\n  \"Control-p\": moveLineUp,\n  \"Control-n\": moveLineDown,\n  \"Shift-Control-p\": extendLineUp,\n  \"Shift-Control-n\": extendLineDown,\n  \"Control-a\": moveLineStart,\n  \"Control-e\": moveLineEnd,\n  \"Shift-Control-a\": extendLineStart,\n  \"Shift-Control-e\": extendLineEnd,\n  \"Cmd-ArrowUp\": selectDocStart,\n  \"Cmd-ArrowDown\": selectDocEnd,\n  \"Control-d\": deleteCharForward,\n  \"Control-h\": deleteCharBackward\n}\nfor (let key in pcBaseKeymap) macBaseKeymap[key] = pcBaseKeymap[key]\n\ndeclare global { const os: any }\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform)\n          : typeof os != \"undefined\" ? os.platform() == \"darwin\" : false\n\nexport const baseKeymap: {[key: string]: Command} = mac ? macBaseKeymap : pcBaseKeymap\n","// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nexport function countColumn(string: string, end: number | null, tabSize: number, startIndex?: number, startValue?: number): number {\n  if (end == null) {\n    end = string.search(/[^\\s\\u00a0]/)\n    if (end == -1) end = string.length\n  }\n  for (let i = startIndex || 0, n = startValue || 0;;) {\n    let nextTab = string.indexOf(\"\\t\", i)\n    if (nextTab < 0 || nextTab >= end)\n      return n + (end - i)\n    n += nextTab - i\n    n += tabSize - (n % tabSize)\n    i = nextTab + 1\n  }\n}\n","import { countColumn } from \"./misc\"\n\n// STRING STREAM\n\n// Fed to the mode parsers, provides helper functions to make\n// parsers more succinct.\n\nexport class StringStream {\n  pos: number\n  start: number\n  lineStart: number\n  lastColumnPos: number\n  lastColumnValue: number\n\n  constructor(public string: string, public tabSize: number, private lineOracle: any) {\n    this.pos = this.start = 0\n    this.string = string\n    this.tabSize = tabSize || 8\n    this.lastColumnPos = this.lastColumnValue = 0\n    this.lineStart = 0\n    this.lineOracle = lineOracle\n  }\n\n  eol(): boolean {return this.pos >= this.string.length}\n  sol(): boolean {return this.pos == this.lineStart}\n  peek() {return this.string.charAt(this.pos) || undefined}\n  next(): string | void {\n    if (this.pos < this.string.length)\n      return this.string.charAt(this.pos++)\n  }\n  eat(match: string | RegExp | ((ch: string) => boolean)): string | void {\n    let ch = this.string.charAt(this.pos)\n    let ok\n    if (typeof match == \"string\") ok = ch == match\n    else ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch))\n    if (ok) {++this.pos; return ch}\n  }\n  eatWhile(match: string | RegExp): boolean {\n    let start = this.pos\n    while (this.eat(match)){}\n    return this.pos > start\n  }\n  eatSpace() {\n    let start = this.pos\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos\n    return this.pos > start\n  }\n  skipToEnd() {this.pos = this.string.length}\n  skipTo(ch: string): boolean | void {\n    let found = this.string.indexOf(ch, this.pos)\n    if (found > -1) {this.pos = found; return true}\n  }\n  backUp(n: number) {this.pos -= n}\n  column() {\n    if (this.lastColumnPos < this.start) {\n      this.lastColumnValue = countColumn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue)\n      this.lastColumnPos = this.start\n    }\n    return this.lastColumnValue - (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0)\n  }\n  indentation() {\n    return countColumn(this.string, null, this.tabSize) -\n      (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0)\n  }\n  match(pattern: string | RegExp, consume?: boolean, caseInsensitive?: boolean): boolean | RegExpMatchArray | null {\n    if (typeof pattern == \"string\") {\n      let cased = (str: string) => caseInsensitive ? str.toLowerCase() : str\n      let substr = this.string.substr(this.pos, pattern.length)\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) this.pos += pattern.length\n        return true\n      } else return null\n    } else {\n      let match = this.string.slice(this.pos).match(pattern)\n      if (match && match.index! > 0) return null\n      if (match && consume !== false) this.pos += match[0].length\n      return match\n    }\n  }\n  current(){return this.string.slice(this.start, this.pos)}\n  hideFirstChars(n: number, inner: () => void) {\n    this.lineStart += n\n    try { return inner() }\n    finally { this.lineStart -= n }\n  }\n  lookAhead(n: number): string {\n    let oracle = this.lineOracle\n    return oracle && oracle.lookAhead(n)\n  }\n  baseToken() {\n    let oracle = this.lineOracle\n    return oracle && oracle.baseToken(this.pos)\n  }\n}\n","import {Text, TextIterator} from \"../../doc/src\"\nimport {StringStream} from \"./stringstream\"\n\nexport class StringStreamCursor {\n  private curLineEnd: number\n  private readonly iter: TextIterator\n\n  constructor(text: Text, public offset: number, readonly tabSize: number = 4) {\n    this.iter = text.iterLines(offset)\n    this.curLineEnd = this.offset - 1\n  }\n\n  next() {\n    let {value, done} = this.iter.next()\n    if (done) throw new RangeError(\"Reached end of document\")\n    const res = new StringStream(value, this.tabSize, null)\n    this.offset = this.curLineEnd + 1\n    this.curLineEnd += value.length + 1\n    return res\n  }\n}\n","import {StringStream} from \"./stringstream\"\n\nexport function readToken(mode: any, stream: StringStream, state: any) {\n  for (let i = 0; i < 10; i++) {\n    //if (inner) inner[0] = innerMode(mode, state).mode\n    let style = mode.token(stream, state)\n    if (stream.pos > stream.start) return style\n  }\n  throw new Error(\"Mode \" + mode.name + \" failed to advance stream.\")\n}\n\nexport function copyState(mode: any, state: any) {\n  if (state === true) return state\n  if (mode.copyState) return mode.copyState(state)\n  let nstate: any = {}\n  for (let n in state) {\n    let val = state[n]\n    if (val instanceof Array) val = val.concat([])\n    nstate[n] = val\n  }\n  return nstate\n}\n\nexport interface Mode<S> {\n  token(stream: StringStream, state: S): string\n  startState: () => S\n  copyState?: (state: S) => S\n  name: string\n  indent?: (state: S, textAfter: string) => number\n}\n","import {EditorView} from \"../../view/src\"\nimport {Range} from \"../../rangeset/src/rangeset\"\nimport {EditorState, Plugin, StateField, Transaction} from \"../../state/src\"\nimport {Decoration} from \"../../view/src/decoration\"\n\nimport {StringStreamCursor} from \"./stringstreamcursor\"\nimport {copyState, readToken, Mode} from \"./util\"\n\nclass CachedState<S> {\n  constructor(public state: S, public pos: number) {}\n  copy(mode: Mode<S>) { return new CachedState(copyState(mode, this.state), this.pos) }\n}\n\nconst MAX_SCAN_DIST = 20000\n\ntype DecoratedRange = {from: number, to: number, decorations: ReadonlyArray<Range<Decoration>>}\n\nfunction cutDecoratedRange(range: DecoratedRange | null, at: number) {\n  if (!range || at <= range.from) return null\n  return {from: range.from, to: Math.min(at, range.to), decorations: range.decorations.filter(({to}) => to <= at)}\n}\n\nclass StateCache<S> {\n  private timeout?: number | NodeJS.Timer\n\n  constructor(private states: CachedState<S>[], private frontier: number, private lastDecorations: null | DecoratedRange) {}\n\n  advanceFrontier(editorState: EditorState, to: number, mode: Mode<S>, sleepTime: number, maxWorkTime: number): Promise<void> {\n    if (this.frontier >= to) return Promise.reject()\n    clearTimeout(this.timeout as any)\n    return new Promise(resolve => {\n      const f = () => {\n        const endTime = +new Date + maxWorkTime\n        do {\n          const target = Math.min(to, this.frontier + MAX_SCAN_DIST / 2)\n          this.getState(editorState, target, mode)\n          if (this.frontier >= to) return resolve()\n        } while (+new Date < endTime)\n        this.timeout = setTimeout(f, sleepTime)\n      }\n      this.timeout = setTimeout(f, sleepTime)\n    })\n  }\n\n  private calculateDecorations(editorState: EditorState, from: number, to: number, mode: Mode<S>): Range<Decoration>[] {\n    let state = this.getState(editorState, from, mode)\n    let cursor = new StringStreamCursor(editorState.doc, from, editorState.tabSize)\n    let states: CachedState<S>[] = [], decorations: Range<Decoration>[] = [], stream = cursor.next()\n    for (let i = 0; cursor.offset + stream.start < to;) {\n      if (stream.eol()) {\n        stream = cursor.next()\n        if (++i % 5 == 0) states.push(new CachedState(copyState(mode, state), cursor.offset))\n      } else {\n        let style = readToken(mode, stream, state)\n        if (style)\n          decorations.push(Decoration.range(cursor.offset + stream.start, cursor.offset + stream.pos, {class: 'cm-' + style.replace(/ /g, ' cm-')}))\n        stream.start = stream.pos\n      }\n    }\n    this.storeStates(from, to, states)\n    return decorations\n  }\n\n  getDecorations(editorState: EditorState, from: number, to: number, mode: Mode<S>): Range<Decoration>[] {\n    let upto = from, decorations: Range<Decoration>[] = []\n    if (this.lastDecorations) {\n      if (from < this.lastDecorations.from) {\n        upto = Math.min(to, this.lastDecorations.from)\n        decorations = this.calculateDecorations(editorState, from, upto, mode)\n      }\n      if (upto < to && this.lastDecorations.to > upto) {\n        upto = this.lastDecorations.to\n        decorations = decorations.concat(this.lastDecorations.decorations)\n      }\n    }\n    if (upto < to) {\n      decorations = decorations.concat(this.calculateDecorations(editorState, upto, to, mode))\n    }\n    this.lastDecorations = {from, to, decorations}\n    return decorations\n  }\n\n  storeStates(from: number, to: number, states: ReadonlyArray<CachedState<S>>) {\n    let start = this.findIndex(from), end = this.findIndex(to)\n    this.states.splice(start, end - start, ...states)\n    if (from <= this.frontier) this.frontier = Math.max(this.frontier, to)\n  }\n\n  // Return the first index for which all cached states after it have\n  // a position >= pos\n  findIndex(pos: number): number {\n    // FIXME could be binary search\n    let i = 0\n    while (i < this.states.length && this.states[i].pos < pos) i++\n    return i\n  }\n\n  stateBefore(pos: number, mode: Mode<S>): {state: S, pos: number} {\n    if (pos > this.frontier && pos - this.frontier < MAX_SCAN_DIST) pos = this.frontier\n    let index = this.findIndex(pos)\n    if (index < this.states.length && this.states[index].pos == pos) index++\n    return index == 0 ? new CachedState(mode.startState(), 0) : this.states[index - 1].copy(mode)\n  }\n\n  getState(editorState: EditorState, pos: number, mode: Mode<S>): S {\n    let {pos: statePos, state} = this.stateBefore(pos, mode)\n    if (statePos < pos - MAX_SCAN_DIST) { statePos = pos; state = mode.startState() }\n    else if (this.lastDecorations && (statePos < this.lastDecorations.from && this.lastDecorations.from <= pos))\n      // If we are calculating a correct state for a position that is after the\n      // beginning of the cached decorations (which suggests that the cached\n      // decorations were rendered based on an approximate state), clear that cache\n      this.lastDecorations = null\n    if (statePos < pos) {\n      let cursor = new StringStreamCursor(editorState.doc, statePos, editorState.tabSize)\n      let stream = cursor.next()\n      let start = statePos, i = 0, states: CachedState<S>[] = []\n      while (statePos < pos) {\n        if (stream.eol()) {\n          stream = cursor.next()\n          statePos++\n          if (++i % 50) states.push(new CachedState(copyState(mode, state), statePos))\n        } else {\n          readToken(mode, stream, state)\n          statePos += stream.pos - stream.start\n          stream.start = stream.pos\n        }\n      }\n      this.storeStates(start, pos, states)\n    }\n    return state\n  }\n\n  apply(transaction: Transaction): StateCache<S> {\n    if (transaction.changes.length == 0) return this\n    let {start} = transaction.doc.lineAt(transaction.changes.changes.reduce((m, ch) => Math.min(m, ch.from), 1e9))\n    let states = []\n    for (let cached of this.states) {\n      let mapped = transaction.changes.mapPos(cached.pos, -1, true)\n      if (mapped > 0) states.push(mapped == cached.pos ? cached : new CachedState(cached.state, mapped))\n    }\n    return new StateCache(states, Math.min(start, this.frontier), cutDecoratedRange(this.lastDecorations, start))\n  }\n}\n\ntype Config = {\n  sleepTime?: number,\n  maxWorkTime?: number\n}\n\nexport function legacyMode<S>(mode: Mode<S>, config: Config = {}) {\n  const {sleepTime = 100, maxWorkTime = 100} = config\n  const field = new StateField<StateCache<S>>({\n    init(state: EditorState) { return new StateCache([], 0, null) },\n    apply(tr, cache) { return cache.apply(tr) },\n    debugName: \"mode\"\n  })\n\n  let plugin = new Plugin({\n    state: field,\n    view(v: EditorView) {\n      let decorations = Decoration.none, from = -1, to = -1\n      function update(v: EditorView, force: boolean) {\n        let vp = v.viewport\n        if (force || vp.from < from || vp.to > to) {\n          ;({from, to} = vp)\n          const stateCache = v.state.getField(field)!\n          decorations = Decoration.set(stateCache.getDecorations(v.state, from, to, mode))\n          stateCache.advanceFrontier(v.state, from, mode, sleepTime, maxWorkTime).then(() => {\n            update(v, true)\n            v.decorationUpdate()\n          }, () => {})\n        }\n      }\n      return {\n        get decorations() { return decorations },\n        updateViewport: update,\n        updateState: (v: EditorView, p: EditorState, trs: Transaction[]) => update(v, trs.some(tr => tr.docChanged))\n      }\n    }\n  })\n\n  // FIXME Short-term hack—it'd be nice to have a better mechanism for this,\n  // not sure yet what it'd look like\n  ;(plugin as any).indentation = function(state: EditorState, pos: number): number {\n    if (!mode.indent) return -1\n    let modeState = state.getField(field)!.getState(state, pos, mode)\n    let line = state.doc.lineAt(pos)\n    return mode.indent(modeState, line.slice(0, Math.min(line.length, 100)).match(/^\\s*(.*)/)![1])\n  }\n\n  return plugin\n}\n","import {Text} from \"../../doc/src\"\nimport {EditorState, Plugin} from \"../../state/src\"\nimport {EditorView} from \"../../view/src/\"\nimport {Decoration, DecorationSet, RangeDecoration} from \"../../view/src/decoration\"\n\nconst matching: {[key: string]: string | undefined} = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\"}\n\nexport type Config = {\n  afterCursor?: boolean,\n  decorationsPlugin?: Plugin,\n  bracketRegex?: RegExp,\n  maxScanDistance?: number,\n  strict?: boolean,\n}\n\nfunction getStyle(decorations: DecorationSet | undefined, at: number): string | void {\n  if (!decorations) return\n  const iter = decorations.iter()\n  let decoration\n  while (decoration = iter.next())\n    if (decoration.from <= at && at < decoration.to)\n      return (decoration.value as RangeDecoration).spec.class\n}\n\nexport function findMatchingBracket(doc: Text, decorations: DecorationSet | undefined, where: number, config: Config = {}): {from: number, to: number | null, forward: boolean, match: boolean} | null {\n  let pos = where - 1\n  // A cursor is defined as between two characters, but in in vim command mode\n  // (i.e. not insert mode), the cursor is visually represented as a\n  // highlighted box on top of the 2nd character. Otherwise, we allow matches\n  // from before or after the cursor.\n  const match = (!config.afterCursor && pos >= 0 && matching[doc.slice(pos, pos + 1)]) ||\n      matching[doc.slice(++pos, pos + 1)]\n  if (!match) return null\n  const dir = match[1] == \">\" ? 1 : -1\n  if (config.strict && (dir > 0) != (pos == where)) return null\n  const style = getStyle(decorations, pos)\n\n  const found = scanForBracket(doc, decorations, pos + (dir > 0 ? 1 : 0), dir, style || null, config)\n  if (found == null) return null\n  return {from: pos, to: found ? found.pos : null,\n          match: found && found.ch == match.charAt(0), forward: dir > 0}\n}\n\n// bracketRegex is used to specify which type of bracket to scan\n// should be a regexp, e.g. /[[\\]]/\n//\n// Note: If \"where\" is on an open bracket, then this bracket is ignored.\n//\n// Returns false when no bracket was found, null when it reached\n// maxScanDistance and gave up\nexport function scanForBracket(doc: Text, decorations: DecorationSet | undefined, where: number, dir: -1 | 1, style: string | null, config: Config) {\n  const maxScanDistance = config.maxScanDistance || 10000\n  const re = config.bracketRegex || /[(){}[\\]]/\n  const stack = []\n  const iter = doc.iterRange(where, dir > 0 ? doc.length : 0)\n  for (let distance = 0; !iter.done && distance <= maxScanDistance;) {\n    iter.next()\n    const text = iter.value\n    if (dir < 0) distance += text.length\n    const basePos = where + distance * dir\n    for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n      const ch = text.charAt(pos)\n      if (re.test(ch) && (style === undefined || getStyle(decorations, basePos + pos) == style)) {\n        const match = matching[ch]!\n        if ((match.charAt(1) == \">\") == (dir > 0)) stack.push(ch)\n        else if (!stack.length) return {pos: basePos + pos, ch}\n        else stack.pop()\n      }\n    }\n    if (dir > 0) distance += text.length\n  }\n  return iter.done ? false : null\n}\n\nfunction doMatchBrackets(state: EditorState, referenceDecorations: DecorationSet | undefined, config: Config) {\n  const decorations = []\n  for (const range of state.selection.ranges) {\n    if (!range.empty) continue\n    const match = findMatchingBracket(state.doc, referenceDecorations, range.head, config)\n    if (!match) continue\n    const style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\"\n    decorations.push(Decoration.range(match.from, match.from + 1, {class: style}))\n    if (match.to) decorations.push(Decoration.range(match.to, match.to + 1, {class: style}))\n  }\n  return Decoration.set(decorations)\n}\n\nexport function matchBrackets(config: Config = {}) {\n  return new Plugin({\n    view(v: EditorView) {\n      const idx = config.decorationsPlugin && v.state.plugins.filter(p => p.view).indexOf(config.decorationsPlugin)\n      let decorations = Decoration.none\n      return {\n        get decorations() { return decorations },\n        updateState(v: EditorView) {\n          const refDecos = idx == undefined ? undefined : v.pluginViews[idx].decorations\n          decorations = doMatchBrackets(v.state, refDecos, config)\n        }\n      }\n    }\n  })\n}\n","import {Decoration, DecoratedRange, DecorationSet, WidgetType, EditorView} from \"../../view/src\"\nimport {Transaction, ChangeSet, ChangedRange, Plugin} from \"../../state/src\"\nimport {countColumn} from \"../../doc/src\"\n\nexport interface SpecialCharOptions {\n  render?: (code: number, description: string | null, placeHolder: string) => HTMLElement | null\n  specialChars?: RegExp\n  addSpecialChars?: RegExp\n}\n\nexport function specialChars(options: SpecialCharOptions = {}): Plugin {\n  return new Plugin({\n    view(view: EditorView) {\n      return new SpecialCharHighlighter(view, options)\n    }\n  })\n}\n\nconst JOIN_GAP = 10\n\nclass SpecialCharHighlighter {\n  decorations: DecorationSet = Decoration.none\n  from = 0\n  to = 0\n  specials: RegExp\n  replaceTabs: boolean\n\n  constructor(readonly view: EditorView, readonly options: SpecialCharOptions) {\n    this.updateForViewport()\n    this.specials = options.specialChars || SPECIALS\n    if (options.addSpecialChars) this.specials = new RegExp(this.specials.source + \"|\" + options.addSpecialChars.source, \"gu\")\n    let styles = document.body.style as any\n    if (this.replaceTabs = (styles.tabSize || styles.MozTabSize) == null)\n      this.specials = new RegExp(\"\\t|\" + this.specials.source, \"gu\")\n  }\n\n  updateState(_view: EditorView, _prev: any, transactions: Transaction[]) {\n    let allChanges = transactions.reduce((ch, tr) => ch.appendSet(tr.changes), ChangeSet.empty)\n    if (allChanges.length) {\n      this.decorations = this.decorations.map(allChanges)\n      this.from = allChanges.mapPos(this.from, 1)\n      this.to = allChanges.mapPos(this.to, -1)\n      this.closeHoles(allChanges.changedRanges())\n    }\n    this.updateForViewport()\n  }\n\n  updateViewport() {\n    this.updateForViewport()\n  }\n\n  closeHoles(ranges: ReadonlyArray<ChangedRange>) {\n    let decorations: DecoratedRange[] = [], vp = this.view.viewport, replaced: number[] = []\n    for (let i = 0; i < ranges.length; i++) {\n      let {fromB: from, toB: to} = ranges[i]\n      // Must redraw all tabs further on the line\n      if (this.replaceTabs) to = this.view.state.doc.lineAt(to).end\n      while (i < ranges.length - 1 && ranges[i + 1].fromB < to + JOIN_GAP) to = Math.max(to, ranges[++i].toB)\n      // Clip to current viewport, to avoid doing work for invisible text\n      from = Math.max(vp.from, from); to = Math.min(vp.to, to)\n      if (from >= to) continue\n      this.getDecorationsFor(from, to, decorations)\n      replaced.push(from, to)\n    }\n    if (decorations.length)\n      this.decorations = this.decorations.update(decorations, pos => {\n        for (let i = 0; i < replaced.length; i += 2)\n          if (pos >= replaced[i] && pos < replaced[i + 1]) return false\n        return true\n      }, replaced[0], replaced[replaced.length - 1])\n  }\n\n  updateForViewport() {\n    let vp = this.view.viewport\n    // Viewports match, don't do anything\n    if (this.from == vp.from && this.to == vp.to) return\n    let decorations: DecoratedRange[] = []\n    if (this.from >= vp.to || this.to <= vp.from) {\n      this.getDecorationsFor(vp.from, vp.to, decorations)\n      this.decorations = Decoration.set(decorations)\n    } else {\n      if (vp.from < this.from) this.getDecorationsFor(vp.from, this.from, decorations)\n      if (this.to < vp.to) this.getDecorationsFor(this.to, vp.to, decorations)\n      this.decorations = this.decorations.update(decorations, (from, to) => from >= vp.from && to <= vp.to)\n    }\n    this.from = vp.from; this.to = vp.to\n  }\n\n  getDecorationsFor(from: number, to: number, target: DecoratedRange[]) {\n    let {doc} = this.view.state\n    for (let pos = from, cursor = doc.iterRange(from, to), m; !cursor.next().done;) {\n      if (!cursor.lineBreak) {\n        while (m = SPECIALS.exec(cursor.value)) {\n          let code = m[0].codePointAt ? m[0].codePointAt(0) : m[0].charCodeAt(0), widget\n          if (code == null) continue\n          if (code == 9) {\n            let line = doc.lineAt(pos + m.index)\n            let size = this.view.state.tabSize, col = countColumn(doc.slice(line.start, pos + m.index), 0, size)\n            widget = new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth)\n          } else {\n            widget = new SpecialCharWidget(this.options, code)\n          }\n          target.push(Decoration.range(pos + m.index, pos + m.index + m[0].length, {collapsed: widget}))\n        }\n      }\n      pos += cursor.value.length\n    }\n  }\n}\n\n// FIXME configurable\nconst SPECIALS = /[\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200f\\u2028\\u2029\\ufeff]/gu\n\nconst NAMES: {[key: number]: string} = {\n  0: \"null\",\n  7: \"bell\",\n  8: \"backspace\",\n  10: \"newline\",\n  11: \"vertical tab\",\n  13: \"carriage return\",\n  27: \"escape\",\n  8203: \"zero width space\",\n  8204: \"zero width non-joiner\",\n  8205: \"zero width joiner\",\n  8206: \"left-to-right mark\",\n  8207: \"right-to-left mark\",\n  8232: \"line separator\",\n  8233: \"paragraph separator\",\n  65279: \"zero width no-break space\"\n}\n\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeHolder(code: number): string | null {\n  if (code >= 32) return null\n  if (code == 10) return \"\\u2424\"\n  return String.fromCharCode(9216 + code)\n}\n\nconst DEFAULT_PLACEHOLDER = \"\\u2022\"\n\nclass SpecialCharWidget extends WidgetType<number> {\n  constructor(private options: SpecialCharOptions, code: number) { super(code) }\n\n  toDOM() {\n    let ph = placeHolder(this.value) || DEFAULT_PLACEHOLDER\n    let desc = \"Control character \" + (NAMES[this.value] || this.value)\n    let custom = this.options.render && this.options.render(this.value, desc, ph)\n    if (custom) return custom\n    let span = document.createElement(\"span\")\n    span.textContent = ph\n    span.title = desc\n    span.setAttribute(\"aria-label\", desc)\n    span.style.color = \"red\"\n    return span\n  }\n\n  ignoreEvent(): boolean { return false }\n}\n\nclass TabWidget extends WidgetType<number> {\n  toDOM() {\n    let span = document.createElement(\"span\")\n    span.textContent = \"\\t\"\n    span.className = \"CodeMirror-tab\"\n    span.style.width = this.value + \"px\"\n    return span\n  }\n\n  ignoreEvent(): boolean { return false }\n}\n","import {Plugin, EditorState} from \"../../state/src\"\nimport {EditorView, DecorationSet, Decoration, WidgetType, RangeDecorationSpec} from \"../../view/src\"\n\nexport function multipleSelections() {\n  return new Plugin({\n    multipleSelections: true,\n    view: (view: EditorView) => new MultipleSelectionView(view)\n  })\n}\n\nclass CursorWidget extends WidgetType<null> {\n  toDOM() {\n    let span = document.createElement(\"span\")\n    span.className = \"CodeMirror-secondary-cursor\"\n    return span\n  }\n}\n\nclass MultipleSelectionView {\n  decorations: DecorationSet = Decoration.none\n  rangeConfig: RangeDecorationSpec\n\n  constructor(view: EditorView) {\n    this.update(view.state)\n    this.rangeConfig = {class: \"CodeMirror-secondary-selection\"} // FIXME configurable?\n  }\n\n  updateState(view: EditorView, prevState: EditorState) {\n    if (prevState.doc != view.state.doc || !prevState.selection.eq(view.state.selection))\n      this.update(view.state)\n  }\n\n  update(state: EditorState) {\n    let {ranges, primaryIndex} = state.selection\n    if (ranges.length == 0) {\n      this.decorations = Decoration.none\n      return\n    }\n    let deco = []\n    for (let i = 0; i < ranges.length; i++) if (i != primaryIndex) {\n      let range = ranges[i]\n      deco.push(range.empty ? Decoration.widget(range.from, {widget: new CursorWidget(null)})\n                            : Decoration.range(ranges[i].from, ranges[i].to, this.rangeConfig))\n    }\n    this.decorations = Decoration.set(deco)\n  }\n}\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n\"use strict\";\n\nexport default function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d+(?:[eE][+\\-]?\\d+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.eat(/x/i)) {\n      stream.eatWhile(/[\\da-f]/i);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"0\" && stream.eat(/o/i)) {\n      stream.eatWhile(/[0-7]/i);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"0\" && stream.eat(/b/i)) {\n      stream.eatWhile(/[01]/i);\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^\\d*(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyu])(?![gimyu]*\\2))+\\b/);\n        return ret(\"regexp\", \"string-2\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return ret(\"error\", \"error\");\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*.*?\\*\\/)*[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string-2\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/]/.test(ch)) {\n        return;\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function register(varname) {\n    function inList(list) {\n      for (var v = list; v; v = v.next)\n        if (v.name == varname) return true;\n      return false;\n    }\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (state.context) {\n      if (inList(state.localVars)) return;\n      state.localVars = {name: varname, next: state.localVars};\n    } else {\n      if (inList(state.globalVars)) return;\n      if (parserConfig.globalVars)\n        state.globalVars = {name: varname, next: state.globalVars};\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  var defaultVars = {name: \"this\", next: {name: \"arguments\"}};\n  function pushcontext() {\n    cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\n    cx.state.localVars = defaultVars;\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars;\n    cx.state.context = cx.state.context.prev;\n  }\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value.length), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), block, poplex);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), className, poplex); }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typeexpr, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, block, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"),\n                                      block, poplex, poplex);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\n                                     statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), expression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    if (type == \"import\") return cont(expression);\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(expression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^>]|<.*?>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(expression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"keyof\" ? typeexpr : expressionNoComma)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\", \",;\"), poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), typeprop)\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(pattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, expect(\")\"), poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, expect(\";\"), forspec2);\n    if (type == \";\") return cont(forspec2);\n    if (type == \"variable\") return cont(formaybeinof);\n    return pass(expression, expect(\";\"), forspec2);\n  }\n  function formaybeinof(_type, value) {\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression); }\n    return cont(maybeoperatorComma, forspec2);\n  }\n  function forspec2(type, value) {\n    if (type == \";\") return cont(forspec3);\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression); }\n    return pass(expression, expect(\";\"), forspec3);\n  }\n  function forspec3(type) {\n    if (type != \")\") cont(expression);\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(isTS ? classfield : functiondef, classBody);\n    }\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), isTS ? classfield : functiondef, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \";\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    return pass(functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && {vars: parserConfig.localVars},\n        indented: basecolumn || 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize == tokenComment) return -1;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybeelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + indentUnit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : \"/*\",\n    blockCommentEnd: jsonMode ? null : \"*/\",\n    blockCommentContinue: jsonMode ? null : \" * \",\n    lineComment: jsonMode ? null : \"//\",\n    fold: \"brace\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n    helperType: jsonMode ? \"json\" : \"javascript\",\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode,\n\n    expressionAllowed: expressionAllowed,\n\n    skipExpression: function(state) {\n      var top = state.cc[state.cc.length - 1]\n      if (top == expression || top == expressionNoComma) state.cc.pop()\n    }\n  };\n}\n\n/*\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/ld+json\", {name: \"javascript\", jsonld: true});\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\n*/\n","import {\n  redo,\n  redoSelection,\n  undo,\n  undoSelection\n} from './codemirror';\n\nexport const historyKeymap = () => {\n  let isMac = /Mac/.test(navigator.platform);\n  return {\n    \"Mod-z\": undo,\n    \"Mod-Shift-z\": redo,\n    \"Mod-u\": view => undoSelection(view) || true,\n    [isMac ? \"Mod-Shift-u\" : \"Alt-u\"]: redoSelection,\n    \"Ctrl-y\": isMac ? undefined : redo\n  };\n};\n","export const indentationKeymap = mode => {\n  function crudeInsertNewlineAndIndent({state, dispatch}: EditorView): boolean {\n    let indentation = (mode as any).indentation(state, state.selection.primary.from)\n    if (indentation > -1)\n      dispatch(state.transaction.replaceSelection(\"\\n\" + \" \".repeat(indentation)).scrollIntoView())\n    return true\n  }\n\n  function crudeIndentLine({state, dispatch}: EditorView): boolean {\n    let cursor = state.selection.primary.head // FIXME doesn't indent multiple lines\n    let line = state.doc.lineAt(cursor), text = line.slice(0, 100)\n    let space = /^ */.exec(text)[0].length // FIXME doesn't handle tabs\n    let indentation = (mode as any).indentation(state, line.start)\n    if (indentation == -1) indentation = space\n    let tr = state.transaction.replace(line.start, line.start + space, \" \".repeat(indentation)).scrollIntoView()\n    if (cursor <= line.start + space)\n      tr = tr.setSelection(EditorSelection.single(line.start + indentation))\n    dispatch(tr)\n    return true\n  }\n  return {\n    \"Enter\": crudeInsertNewlineAndIndent,\n    \"Shift-Tab\": crudeIndentLine\n  };\n};\n","import { Plugin, EditorView, EditorState, Transaction } from './codemirror';\n\nexport const experimentPlugin = new Plugin({\n  view: (view: EditorView) => {\n\n    // Inject programmatically created transactions,\n    // from remote OT operations.\n    setTimeout(() => {\n      console.log('dispatching');\n      view.dispatch(view.state.transaction.replace(1, 2, \"*\"))\n    }, 2000);\n\n    return {\n      // Listen for all transactions,\n      // so they can be converted to OT operations.\n      updateState(view: EditorView, prev: EditorState, trs: Transaction[]) {\n        console.log(trs);\n      }\n    };\n  })\n});\n","import {\n  history,\n  EditorState,\n  EditorSelection\n  EditorView,\n  keymap,\n  gutter,\n  baseKeymap,\n  legacyMode,\n  matchBrackets,\n  javascript,\n  specialChars,\n  multipleSelections\n} from './codemirror';\nimport { historyKeymap } from './historyKeymap';\nimport { indentationKeymap } from './indentationKeymap';\nimport { experimentPlugin } from './experimentPlugin';\n\nlet mode = legacyMode(javascript({indentUnit: 2}, {}))\nlet state = EditorState.create({doc: `\"use strict\";\nconst {readFile} = require(\"fs\");\n\nreadFile(\"package.json\", \"utf8\", (err, data) => {\n  console.log(data);\n});`, plugins: [\n  gutter(),\n  history(),\n  specialChars({}),\n  multipleSelections(),\n  mode,\n  matchBrackets({decorationsPlugin: mode}),\n  keymap(historyKeymap()),\n  keymap(indentationKeymap(mode)),\n  keymap(baseKeymap),\n  experimentPlugin\n]})\n\nlet view = (window as any).view = new EditorView(state)\ndocument.querySelector(\"#editor\").appendChild(view.dom)\n"],"names":["tslib_1.__extends","EditorSelection","textLength","empty","none","LineContent","chrome","gecko","mac","base","countColumn"],"mappings":"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"}